[2025-07-27 23:03:16,524] root INFO ###########################################################################################################################
[2025-07-27 23:03:16,524] root INFO #                                                                                                                         #
[2025-07-27 23:03:16,524] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:03:16,525] root INFO #                                                                                                                         #
[2025-07-27 23:03:16,525] root INFO ###########################################################################################################################
[2025-07-27 23:03:16,526] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:03:16,526] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:03:16,526] pyhamilton.interface INFO started the server thread
[2025-07-27 23:03:16,526] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:03:16,530] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:03:16,530] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17592e501c35', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:03:16,937] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:03:17,053] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:03:17,053] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17592e5817a2', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,058] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:03:17,059] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17592e582f13', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:03:17,059] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:03:17,059] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17592e58314d', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,060] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:03:17,061] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17592e5835e1', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,061] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:03:17,061] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17592e5838bb', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:03:17,064] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 3
[2025-07-27 23:03:17,064] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17592e5842c9', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 3', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:03:17,064] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:03:17,065] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17592e584523', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,065] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:03:17,066] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17592e584960', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,066] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:03:17,067] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17592e584e29', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:03:17,070] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 4
[2025-07-27 23:03:17,070] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17592e585996', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 4', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:03:17,070] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:03:17,070] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17592e585b7f', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,071] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:03:17,071] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17592e585ed3', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,072] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:03:17,072] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17592e586190', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:03:17,074] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 5
[2025-07-27 23:03:17,074] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17592e586a6e', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 5', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:03:17,074] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:03:17,075] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17592e586ca1', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,076] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:03:17,076] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17592e5870ee', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,076] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:03:17,076] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17592e5873a3', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:03:17,079] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 6
[2025-07-27 23:03:17,079] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17592e587f3a', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 6', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:03:17,080] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:03:17,080] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17592e5880ee', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,081] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:03:17,081] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17592e588628', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,082] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:03:17,082] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17592e5888f3', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:03:17,085] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 7
[2025-07-27 23:03:17,085] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17592e58968f', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 7', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:03:17,086] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:03:17,086] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17592e58984e', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,087] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:03:17,087] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17592e589cb7', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,087] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:03:17,088] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17592e589f77', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:03:17,090] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 8
[2025-07-27 23:03:17,090] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17592e58a9cf', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 8', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:03:17,091] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:03:17,091] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17592e58ac40', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,092] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:03:17,092] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17592e58b0b4', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,093] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:03:17,093] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17592e58b461', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:03:17,095] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9
[2025-07-27 23:03:17,096] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17592e58be45', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:03:17,096] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:03:17,096] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17592e58c060', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,097] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:03:17,097] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17592e58c428', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,098] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:03:17,098] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17592e58c7a3', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:03:17,101] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 10
[2025-07-27 23:03:17,101] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17592e58d461', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 10', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:03:17,101] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:03:17,102] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17592e58d5f3', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,103] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:03:17,103] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17592e58db3c', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,104] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:03:17,104] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17592e58de2e', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:03:17,106] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 11
[2025-07-27 23:03:17,106] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17592e58e89c', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 11', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:03:17,107] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:03:17,107] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17592e58ea13', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,108] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:03:17,108] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17592e58eea2', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,109] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:03:17,109] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17592e58f1b3', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:03:17,111] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 12
[2025-07-27 23:03:17,111] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17592e58fb8a', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 12', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:03:17,111] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:03:17,112] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17592e58fd33', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,112] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:03:17,113] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17592e5900e4', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,113] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:03:17,113] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17592e5903bc', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:03:17,116] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 13
[2025-07-27 23:03:17,116] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17592e590dde', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 13', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:03:17,116] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:03:17,116] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17592e590f9d', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,118] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:03:17,118] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17592e5914cc', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:03:17,118] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:03:17,118] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17592e5917c9', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:03:17,119] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:03:17,119] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:03:17,119] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:03:17,219] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:03:17,220] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:03:17,222] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:03:17,225] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:03:17,225] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:03:17,226] pyhamilton.interface INFO server thread exited
[2025-07-27 23:05:40,552] root INFO ###########################################################################################################################
[2025-07-27 23:05:40,553] root INFO #                                                                                                                         #
[2025-07-27 23:05:40,553] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:05:40,553] root INFO #                                                                                                                         #
[2025-07-27 23:05:40,553] root INFO ###########################################################################################################################
[2025-07-27 23:05:40,553] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:05:40,554] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:05:40,554] pyhamilton.interface INFO started the server thread
[2025-07-27 23:05:40,554] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:05:40,557] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:05:40,557] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175936e5cbdb', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:05:40,945] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:05:41,059] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:05:41,059] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175936ed730f', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,064] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:05:41,064] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175936ed88ab', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:05:41,065] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:05:41,065] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175936ed8a5a', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,065] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:05:41,066] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175936ed8d57', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,066] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:05:41,066] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175936ed8fb1', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:05:41,070] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 3
[2025-07-27 23:05:41,070] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175936ed9f3e', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 3', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:05:41,070] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:05:41,071] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175936eda105', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,071] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:05:41,071] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175936eda407', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,072] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:05:41,072] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175936eda68f', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:05:41,074] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 4
[2025-07-27 23:05:41,074] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175936edafc7', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 4', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:05:41,075] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:05:41,075] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175936edb14e', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,075] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:05:41,076] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175936edb423', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,076] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:05:41,076] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175936edb67a', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:05:41,078] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 5
[2025-07-27 23:05:41,078] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175936edbee2', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 5', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:05:41,079] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:05:41,079] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175936edc05f', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,079] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:05:41,079] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175936edc2fc', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,080] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:05:41,080] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175936edc54a', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:05:41,082] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 6
[2025-07-27 23:05:41,082] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175936edcdff', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 6', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:05:41,082] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:05:41,083] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175936edcf76', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,083] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:05:41,083] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175936edd270', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,084] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:05:41,084] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175936edd68e', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:05:41,087] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 7
[2025-07-27 23:05:41,087] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175936ede150', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 7', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:05:41,087] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:05:41,088] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175936ede320', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,088] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:05:41,088] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175936ede608', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,089] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:05:41,089] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175936ede8ac', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:05:41,091] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 8
[2025-07-27 23:05:41,091] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175936edf1d7', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 8', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:05:41,092] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:05:41,092] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175936edf35d', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,092] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:05:41,092] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175936edf5de', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,093] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:05:41,093] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175936edf829', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:05:41,095] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9
[2025-07-27 23:05:41,095] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175936ee006d', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:05:41,095] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:05:41,095] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175936ee020a', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,096] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:05:41,096] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175936ee0482', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,097] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:05:41,097] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175936ee07a2', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:05:41,099] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 10
[2025-07-27 23:05:41,099] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175936ee0fa9', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 10', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:05:41,099] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:05:41,099] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175936ee1120', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,100] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:05:41,100] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175936ee1403', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,101] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:05:41,101] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175936ee1774', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:05:41,103] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 11
[2025-07-27 23:05:41,104] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175936ee219b', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 11', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:05:41,104] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:05:41,104] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175936ee2336', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,104] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:05:41,105] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175936ee25d0', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,105] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:05:41,105] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175936ee2814', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:05:41,107] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 12
[2025-07-27 23:05:41,107] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175936ee302f', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 12', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:05:41,108] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:05:41,108] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175936ee31a1', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,108] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:05:41,108] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175936ee3421', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,109] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:05:41,109] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175936ee365b', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:05:41,111] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 13
[2025-07-27 23:05:41,111] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175936ee3e28', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 13', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:05:41,111] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:05:41,111] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175936ee3fac', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,112] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:05:41,112] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175936ee421b', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:05:41,112] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:05:41,112] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175936ee446e', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:05:41,113] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:05:41,113] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:05:41,113] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:05:41,213] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:05:41,214] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:05:41,217] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:05:41,219] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:05:41,220] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:05:41,220] pyhamilton.interface INFO server thread exited
[2025-07-27 23:07:20,329] root INFO ###########################################################################################################################
[2025-07-27 23:07:20,329] root INFO #                                                                                                                         #
[2025-07-27 23:07:20,329] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:07:20,329] root INFO #                                                                                                                         #
[2025-07-27 23:07:20,330] root INFO ###########################################################################################################################
[2025-07-27 23:07:20,330] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:07:20,330] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:07:20,330] pyhamilton.interface INFO started the server thread
[2025-07-27 23:07:20,331] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:07:20,334] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:07:20,335] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17593cd84764', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:07:20,849] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:07:20,998] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:07:20,998] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17593ce26748', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,005] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:07:21,006] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17593ce2842c', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:07:21,006] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:07:21,006] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17593ce28683', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,007] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:07:21,007] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17593ce28a24', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,008] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:07:21,008] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17593ce28d7f', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:07:21,011] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 3
[2025-07-27 23:07:21,011] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17593ce29832', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 3', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:07:21,011] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:07:21,011] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17593ce29a91', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,012] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:07:21,012] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17593ce29da3', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,013] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:07:21,013] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17593ce2a07f', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:07:21,015] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 4
[2025-07-27 23:07:21,015] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17593ce2aa68', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 4', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:07:21,016] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:07:21,016] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17593ce2ac6c', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,017] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:07:21,017] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17593ce2af87', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,017] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:07:21,018] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17593ce2b309', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:07:21,022] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 5
[2025-07-27 23:07:21,022] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17593ce2c43a', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 5', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:07:21,022] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:07:21,023] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17593ce2c726', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,024] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:07:21,024] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17593ce2caf8', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,024] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:07:21,024] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17593ce2cda1', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:07:21,027] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 6
[2025-07-27 23:07:21,027] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17593ce2d822', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 6', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:07:21,027] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:07:21,028] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17593ce2da47', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,028] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:07:21,029] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17593ce2dd9d', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,029] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:07:21,029] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17593ce2e069', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:07:21,032] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 7
[2025-07-27 23:07:21,032] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17593ce2eae3', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 7', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:07:21,032] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:07:21,033] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17593ce2ed47', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,033] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:07:21,033] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17593ce2f083', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,034] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:07:21,034] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17593ce2f46d', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:07:21,038] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 8
[2025-07-27 23:07:21,038] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17593ce30448', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 8', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:07:21,039] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:07:21,039] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17593ce30714', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,040] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:07:21,040] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17593ce30b26', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,041] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:07:21,041] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17593ce30de4', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:07:21,043] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9
[2025-07-27 23:07:21,044] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17593ce31879', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:07:21,044] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:07:21,044] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17593ce31aab', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,045] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:07:21,045] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17593ce31da0', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,045] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:07:21,046] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17593ce3215b', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:07:21,048] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 10
[2025-07-27 23:07:21,049] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17593ce32c90', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 10', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:07:21,049] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:07:21,049] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17593ce32ecd', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,050] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:07:21,050] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17593ce331fe', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,051] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:07:21,051] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17593ce33693', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:07:21,055] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 11
[2025-07-27 23:07:21,055] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17593ce3460c', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 11', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:07:21,056] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:07:21,056] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17593ce34823', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,056] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:07:21,057] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17593ce34b2d', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,057] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:07:21,057] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17593ce34e59', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:07:21,060] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 12
[2025-07-27 23:07:21,060] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17593ce358bf', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 12', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:07:21,061] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:07:21,061] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17593ce35b5e', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,061] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:07:21,062] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17593ce35e6a', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,062] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:07:21,062] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17593ce3613f', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:07:21,065] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 13
[2025-07-27 23:07:21,065] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17593ce36c4e', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 13', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:07:21,066] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:07:21,066] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17593ce36ed6', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,066] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:07:21,067] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17593ce37215', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:07:21,067] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:07:21,067] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17593ce374ee', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:07:21,067] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:07:21,068] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:07:21,068] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:07:21,168] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:07:21,169] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:07:21,171] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:07:21,173] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:07:21,174] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:07:21,174] pyhamilton.interface INFO server thread exited
[2025-07-27 23:08:23,414] root INFO ###########################################################################################################################
[2025-07-27 23:08:23,415] root INFO #                                                                                                                         #
[2025-07-27 23:08:23,415] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:08:23,415] root INFO #                                                                                                                         #
[2025-07-27 23:08:23,415] root INFO ###########################################################################################################################
[2025-07-27 23:08:23,415] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:08:23,415] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:08:23,415] pyhamilton.interface INFO started the server thread
[2025-07-27 23:08:23,416] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:08:23,419] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:08:23,419] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759409ade76', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:23,850] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:08:23,969] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:08:23,969] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175940a343fe', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:23,974] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:08:23,974] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175940a355fb', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:23,975] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:23,975] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175940a35991', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:23,975] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:23,976] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175940a35c8d', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:23,976] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:23,976] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175940a35f02', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:23,978] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 3
[2025-07-27 23:08:23,979] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175940a36869', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 3', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:23,979] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:23,980] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175940a36bf5', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:23,980] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:23,980] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175940a36ed8', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:23,981] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:23,981] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175940a3717e', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:23,983] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 4
[2025-07-27 23:08:23,984] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175940a37b98', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 4', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:23,984] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:23,984] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175940a37ed6', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:23,985] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:23,985] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175940a381ef', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:23,986] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:23,986] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175940a38446', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:23,988] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 5
[2025-07-27 23:08:23,988] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175940a38d20', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 5', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:23,989] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:23,989] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175940a3905f', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:23,989] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:23,990] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175940a39314', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:23,990] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:23,990] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175940a395a2', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:23,993] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 6
[2025-07-27 23:08:23,993] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175940a3a09a', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 6', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:23,994] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:23,994] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175940a3a3d5', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:23,994] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:23,995] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175940a3a664', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:23,995] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:23,995] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175940a3a89e', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:23,997] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 7
[2025-07-27 23:08:23,998] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175940a3b257', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 7', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:23,998] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:23,998] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175940a3b5e2', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:23,999] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:23,999] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175940a3b85f', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:24,000] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:24,000] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175940a3bad6', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:24,002] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 8
[2025-07-27 23:08:24,002] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175940a3c501', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 8', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:24,003] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:24,003] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175940a3c867', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:24,004] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:24,004] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175940a3cc2e', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:24,005] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:24,005] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175940a3cf14', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:24,008] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9
[2025-07-27 23:08:24,008] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175940a3d9e1', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:24,008] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:24,009] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175940a3dd87', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:24,009] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:24,009] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175940a3e02f', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:24,010] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:24,010] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175940a3e357', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:24,013] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 10
[2025-07-27 23:08:24,013] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175940a3ee25', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 10', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:24,013] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:24,014] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175940a3f0fb', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:24,014] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:24,014] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175940a3f3a5', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:24,015] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:24,015] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175940a3f5ef', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:24,017] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 11
[2025-07-27 23:08:24,018] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175940a40013', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 11', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:24,018] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:24,018] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175940a402bc', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:24,019] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:24,019] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175940a40769', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:24,020] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:24,020] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175940a40ae0', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:24,023] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 12
[2025-07-27 23:08:24,023] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175940a41520', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 12', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:24,024] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:24,024] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175940a4186d', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:24,024] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:24,024] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175940a41b18', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:24,025] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:24,025] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175940a41daf', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:24,028] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 13
[2025-07-27 23:08:24,028] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175940a42843', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 13', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:24,028] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:24,029] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175940a42b83', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:24,029] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:24,029] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175940a42e1a', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:24,030] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:24,030] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175940a43051', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:24,030] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:08:24,030] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:08:24,030] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:08:24,131] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:08:24,131] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:08:24,135] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:08:24,137] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:08:24,138] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:08:24,139] pyhamilton.interface INFO server thread exited
[2025-07-27 23:08:36,624] root INFO ###########################################################################################################################
[2025-07-27 23:08:36,624] root INFO #                                                                                                                         #
[2025-07-27 23:08:36,624] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:08:36,624] root INFO #                                                                                                                         #
[2025-07-27 23:08:36,624] root INFO ###########################################################################################################################
[2025-07-27 23:08:36,625] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:08:36,625] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:08:36,625] pyhamilton.interface INFO started the server thread
[2025-07-27 23:08:36,625] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:08:36,629] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:08:36,629] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175941646efe', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:37,020] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:08:37,136] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:08:37,136] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759416c2b7f', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,141] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:08:37,141] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759416c40b1', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:37,142] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:37,142] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759416c42b4', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,142] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:37,142] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759416c45a1', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,143] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:37,143] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759416c482a', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:37,147] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 3
[2025-07-27 23:08:37,147] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759416c5710', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 3', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:37,147] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:37,148] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759416c59af', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,148] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:37,148] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759416c5cc2', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,149] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:37,149] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759416c5f51', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:37,151] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 4
[2025-07-27 23:08:37,151] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759416c68a3', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 4', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:37,152] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:37,152] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759416c6ad7', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,153] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:37,153] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759416c6d68', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,153] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:37,153] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759416c6fb6', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:37,155] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 5
[2025-07-27 23:08:37,156] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759416c7901', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 5', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:37,156] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:37,156] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759416c7bae', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,157] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:37,157] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759416c7e5c', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,157] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:37,158] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759416c80b4', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:37,160] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 6
[2025-07-27 23:08:37,160] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759416c8a1b', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 6', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:37,160] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:37,161] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759416c8c13', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,161] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:37,161] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759416c8edb', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,162] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:37,162] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759416c9120', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:37,164] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 7
[2025-07-27 23:08:37,164] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759416c9b87', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 7', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:37,165] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:37,165] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759416c9d89', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,165] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:37,166] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759416c9fff', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,166] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:37,166] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759416ca24e', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:37,169] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 8
[2025-07-27 23:08:37,169] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759416caca4', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 8', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:37,169] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:37,169] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759416cae90', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,170] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:37,170] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759416cb1ab', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,171] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:37,171] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759416cb406', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:37,173] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9
[2025-07-27 23:08:37,173] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759416cbe87', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:37,174] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:37,174] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759416cc084', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,174] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:37,175] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759416cc31a', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,175] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:37,175] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759416cc662', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:37,178] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 10
[2025-07-27 23:08:37,178] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759416cd033', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 10', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:37,178] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:37,178] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759416cd249', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,179] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:37,179] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759416cd4e7', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,180] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:37,180] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759416cd732', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:37,182] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 11
[2025-07-27 23:08:37,182] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759416ce159', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 11', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:37,183] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:37,183] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759416ce35d', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,183] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:37,184] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759416ce610', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,184] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:37,184] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759416ce87d', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:37,187] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 12
[2025-07-27 23:08:37,187] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759416cf4b2', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 12', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:37,188] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:37,188] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759416cf6d2', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,188] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:37,189] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759416cf9ea', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,189] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:37,189] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759416cfc96', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:37,192] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 13
[2025-07-27 23:08:37,192] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759416d0640', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 13', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:08:37,192] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:08:37,192] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759416d0842', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,193] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:08:37,193] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759416d0ac9', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:08:37,193] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:08:37,194] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759416d0d06', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:08:37,194] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:08:37,194] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:08:37,194] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:08:37,294] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:08:37,295] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:08:37,297] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:08:37,298] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:08:37,299] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:08:37,299] pyhamilton.interface INFO server thread exited
[2025-07-27 23:09:18,415] root INFO ###########################################################################################################################
[2025-07-27 23:09:18,415] root INFO #                                                                                                                         #
[2025-07-27 23:09:18,416] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:09:18,416] root INFO #                                                                                                                         #
[2025-07-27 23:09:18,416] root INFO ###########################################################################################################################
[2025-07-27 23:09:18,416] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:09:18,416] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:09:18,417] pyhamilton.interface INFO started the server thread
[2025-07-27 23:09:18,417] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:09:18,420] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:09:18,420] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175943e21fbf', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:18,812] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:09:18,922] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:09:18,922] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175943e9c696', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,927] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:09:18,927] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175943e9dbf6', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:18,928] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:18,928] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175943e9ddf4', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,929] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:18,929] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175943e9e14f', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,929] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:18,930] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175943e9e49e', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:18,932] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 3
[2025-07-27 23:09:18,932] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175943e9efcc', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 3', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:18,933] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:18,933] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175943e9f1d6', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,934] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:18,934] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175943e9f52f', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,934] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:18,935] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175943e9f869', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:18,938] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 4
[2025-07-27 23:09:18,938] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175943ea0504', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 4', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:18,938] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:18,939] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175943ea075a', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,939] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:18,939] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175943ea0a52', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,940] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:18,940] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175943ea0df2', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:18,943] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 5
[2025-07-27 23:09:18,943] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175943ea1840', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 5', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:18,943] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:18,943] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175943ea1a01', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,944] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:18,944] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175943ea1d0b', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,945] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:18,945] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175943ea2000', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:18,947] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 6
[2025-07-27 23:09:18,947] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175943ea2a84', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 6', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:18,948] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:18,948] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175943ea2c87', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,949] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:18,949] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175943ea2fe4', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,949] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:18,950] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175943ea32b3', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:18,952] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 7
[2025-07-27 23:09:18,952] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175943ea3b6a', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 7', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:18,952] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:18,952] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175943ea3d67', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,953] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:18,953] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175943ea4112', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,954] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:18,954] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175943ea441b', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:18,956] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 8
[2025-07-27 23:09:18,957] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175943ea4e43', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 8', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:18,957] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:18,957] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175943ea5015', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,958] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:18,958] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175943ea52ec', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,958] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:18,959] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175943ea5585', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:18,961] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9
[2025-07-27 23:09:18,961] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175943ea5f17', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:18,961] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:18,961] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175943ea6100', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,962] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:18,962] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175943ea639a', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,963] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:18,963] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175943ea66d8', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:18,965] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 10
[2025-07-27 23:09:18,965] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175943ea6f5b', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 10', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:18,965] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:18,966] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175943ea70f0', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,966] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:18,966] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175943ea7365', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,967] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:18,967] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175943ea7597', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:18,969] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 11
[2025-07-27 23:09:18,969] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175943ea7edf', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 11', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:18,969] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:18,970] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175943ea809d', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,970] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:18,971] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175943ea848c', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,971] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:18,971] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175943ea8780', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:18,974] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 12
[2025-07-27 23:09:18,974] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175943ea90e3', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 12', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:18,974] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:18,974] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175943ea9291', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,975] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:18,975] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175943ea952b', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,975] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:18,975] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175943ea9796', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:18,978] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 13
[2025-07-27 23:09:18,978] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175943eaa06a', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 13', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:18,978] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:18,978] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175943eaa242', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,979] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:18,979] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175943eaa4cc', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:18,979] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:18,979] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175943eaa70b', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:18,979] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:09:18,980] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:09:18,980] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:09:19,080] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:09:19,081] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:09:19,083] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:09:19,085] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:09:19,086] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:09:19,086] pyhamilton.interface INFO server thread exited
[2025-07-27 23:09:51,867] root INFO ###########################################################################################################################
[2025-07-27 23:09:51,867] root INFO #                                                                                                                         #
[2025-07-27 23:09:51,867] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:09:51,867] root INFO #                                                                                                                         #
[2025-07-27 23:09:51,867] root INFO ###########################################################################################################################
[2025-07-27 23:09:51,868] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:09:51,868] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:09:51,868] pyhamilton.interface INFO started the server thread
[2025-07-27 23:09:51,868] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:09:51,873] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:09:51,874] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175945e09485', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:52,302] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:09:52,427] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:09:52,427] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175945e9079e', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,433] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:09:52,433] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175945e91d14', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:52,434] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:52,434] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175945e9224e', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,435] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:52,436] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175945e92706', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,437] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:52,437] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175945e92d1d', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:52,440] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 3
[2025-07-27 23:09:52,441] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175945e93afc', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 3', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:52,442] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:52,442] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175945e93f32', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,442] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:52,443] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175945e942bb', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,443] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:52,443] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175945e94573', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:52,446] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 4
[2025-07-27 23:09:52,446] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175945e94f55', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 4', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:52,447] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:52,447] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175945e9531c', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,447] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:52,448] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175945e955ff', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,448] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:52,448] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175945e958bd', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:52,451] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 5
[2025-07-27 23:09:52,451] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175945e9638f', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 5', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:52,452] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:52,452] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175945e968e8', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,454] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:52,454] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175945e96f17', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,455] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:52,455] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175945e972d6', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:52,458] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 6
[2025-07-27 23:09:52,458] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175945e97f69', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 6', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:52,459] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:52,459] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175945e9833a', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,460] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:52,460] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175945e98798', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,461] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:52,461] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175945e98b35', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:52,464] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 7
[2025-07-27 23:09:52,464] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175945e9980b', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 7', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:52,465] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:52,465] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175945e99c17', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,466] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:52,466] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175945e99f47', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,467] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:52,467] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175945e9a20c', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:52,470] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 8
[2025-07-27 23:09:52,471] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175945e9b0a6', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 8', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:52,472] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:52,472] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175945e9b5cb', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,473] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:52,473] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175945e9ba0a', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,474] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:52,474] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175945e9bd28', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:52,477] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9
[2025-07-27 23:09:52,477] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175945e9c920', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:52,478] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:52,478] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175945e9ccaa', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,478] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:52,479] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175945e9cfa0', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,479] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:52,480] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175945e9d342', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:52,482] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 10
[2025-07-27 23:09:52,482] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175945e9de0c', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 10', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:52,483] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:52,483] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175945e9e1e6', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,484] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:52,484] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175945e9e4cf', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,485] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:52,485] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175945e9e72c', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:52,488] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 11
[2025-07-27 23:09:52,489] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175945e9f630', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 11', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:52,489] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:52,490] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175945e9fa2a', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,490] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:52,491] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175945e9fed1', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,492] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:52,492] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175945ea038a', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:52,495] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 12
[2025-07-27 23:09:52,495] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175945ea0fb3', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 12', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:52,496] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:52,496] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175945ea1358', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,497] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:52,497] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175945ea1795', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,498] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:52,498] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175945ea1b35', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:52,500] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 13
[2025-07-27 23:09:52,501] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175945ea25a0', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 13', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:09:52,501] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:09:52,502] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175945ea290b', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,503] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:09:52,503] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175945ea2de3', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:09:52,504] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:09:52,504] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175945ea31b3', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:09:52,504] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:09:52,504] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:09:52,504] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:09:52,605] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:09:52,606] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:09:52,608] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:09:52,610] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:09:52,611] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:09:52,611] pyhamilton.interface INFO server thread exited
[2025-07-27 23:10:38,145] root INFO ###########################################################################################################################
[2025-07-27 23:10:38,146] root INFO #                                                                                                                         #
[2025-07-27 23:10:38,146] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:10:38,146] root INFO #                                                                                                                         #
[2025-07-27 23:10:38,146] root INFO ###########################################################################################################################
[2025-07-27 23:10:38,146] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:10:38,147] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:10:38,147] pyhamilton.interface INFO started the server thread
[2025-07-27 23:10:38,147] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:10:38,150] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:10:38,150] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175948a2b467', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:10:38,573] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:10:38,679] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:10:38,680] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175948aac873', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,685] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:10:38,685] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175948aadc1c', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:10:38,686] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:10:38,686] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175948aae087', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,687] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:10:38,687] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175948aae552', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,688] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:10:38,688] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175948aae909', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:10:38,691] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 3
[2025-07-27 23:10:38,691] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175948aaf4ee', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 3', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:10:38,692] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:10:38,692] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175948aaf8af', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,693] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:10:38,693] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175948aafb85', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,693] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:10:38,694] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175948aafe68', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:10:38,696] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 4
[2025-07-27 23:10:38,696] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175948ab0796', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 4', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:10:38,697] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:10:38,697] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175948ab0bcc', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,698] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:10:38,698] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175948ab0fec', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,699] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:10:38,699] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175948ab136c', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:10:38,701] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 5
[2025-07-27 23:10:38,702] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175948ab1dc8', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 5', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:10:38,702] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:10:38,702] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175948ab2141', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,703] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:10:38,703] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175948ab24f8', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,704] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:10:38,704] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175948ab27c8', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:10:38,707] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 6
[2025-07-27 23:10:38,707] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175948ab3347', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 6', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:10:38,708] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:10:38,708] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175948ab3746', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,709] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:10:38,709] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175948ab3bd5', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,710] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:10:38,710] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175948ab3f85', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:10:38,713] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 7
[2025-07-27 23:10:38,714] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175948ab4cd9', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 7', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:10:38,715] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:10:38,715] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175948ab51ef', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,716] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:10:38,716] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175948ab5690', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,717] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:10:38,717] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175948ab5a26', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:10:38,720] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 8
[2025-07-27 23:10:38,720] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175948ab676c', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 8', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:10:38,721] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:10:38,722] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175948ab6bed', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,722] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:10:38,722] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175948ab6f88', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,723] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:10:38,723] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175948ab7336', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:10:38,726] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9
[2025-07-27 23:10:38,727] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175948ab7f45', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:10:38,728] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:10:38,728] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175948ab83df', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,728] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:10:38,729] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175948ab870c', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,729] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:10:38,729] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175948ab8aa4', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:10:38,732] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 10
[2025-07-27 23:10:38,732] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175948ab956e', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 10', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:10:38,733] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:10:38,733] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175948ab9a2f', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,734] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:10:38,735] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175948ab9e88', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,735] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:10:38,735] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175948aba213', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:10:38,738] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 11
[2025-07-27 23:10:38,738] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175948abae00', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 11', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:10:38,739] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:10:38,739] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175948abb1e2', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,740] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:10:38,740] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175948abb4e3', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,741] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:10:38,741] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175948abb785', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:10:38,744] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 12
[2025-07-27 23:10:38,744] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175948abc25b', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 12', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:10:38,745] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:10:38,745] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175948abc637', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,745] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:10:38,745] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175948abc957', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,746] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:10:38,746] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175948abcbf0', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:10:38,749] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 13
[2025-07-27 23:10:38,749] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175948abd657', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 13', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:10:38,750] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:10:38,750] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175948abdacf', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,751] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:10:38,751] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175948abdec5', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:10:38,752] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:10:38,752] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175948abe194', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:10:38,752] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:10:38,752] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:10:38,752] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:10:38,852] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:10:38,853] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:10:38,855] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:10:38,856] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:10:38,857] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:10:38,857] pyhamilton.interface INFO server thread exited
[2025-07-27 23:10:59,595] root INFO ###########################################################################################################################
[2025-07-27 23:10:59,596] root INFO #                                                                                                                         #
[2025-07-27 23:10:59,596] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:10:59,596] root INFO #                                                                                                                         #
[2025-07-27 23:10:59,596] root INFO ###########################################################################################################################
[2025-07-27 23:10:59,597] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:10:59,597] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:10:59,598] pyhamilton.interface INFO started the server thread
[2025-07-27 23:10:59,598] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:10:59,602] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:10:59,603] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175949ea0a6b', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:10:59,988] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:11:00,122] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:11:00,122] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175949f1f7aa', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,128] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:11:00,128] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175949f20f4e', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:00,129] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:00,129] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175949f21257', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,130] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:00,130] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175949f21727', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,131] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:00,131] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175949f21a31', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:00,134] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 3
[2025-07-27 23:11:00,134] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175949f22509', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 3', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:00,134] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:00,134] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175949f226d7', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,135] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:00,135] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175949f229ae', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,135] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:00,136] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175949f22c9b', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:00,138] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 4
[2025-07-27 23:11:00,138] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175949f23781', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 4', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:00,139] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:00,139] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175949f23a5f', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,140] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:00,140] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175949f23dec', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,141] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:00,141] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175949f240e8', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:00,143] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 5
[2025-07-27 23:11:00,144] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175949f24b6d', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 5', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:00,144] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:00,144] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175949f24dc5', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,145] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:00,145] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175949f250bc', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,145] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:00,146] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175949f25372', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:00,148] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 6
[2025-07-27 23:11:00,148] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175949f25e33', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 6', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:00,149] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:00,149] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175949f260e2', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,150] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:00,150] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175949f26415', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,150] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:00,151] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175949f266de', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:00,153] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 7
[2025-07-27 23:11:00,154] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175949f272c5', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 7', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:00,154] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:00,155] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175949f27657', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,155] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:00,155] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175949f279d5', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,156] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:00,156] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175949f27cbf', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:00,159] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 8
[2025-07-27 23:11:00,159] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175949f2878c', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 8', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:00,159] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:00,160] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175949f28a95', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,161] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:00,161] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175949f28ece', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,161] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:00,161] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175949f29193', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:00,164] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9
[2025-07-27 23:11:00,164] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175949f29b88', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:00,164] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:00,165] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175949f29e5e', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,165] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:00,165] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175949f2a137', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,166] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:00,166] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175949f2a505', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:00,169] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 10
[2025-07-27 23:11:00,169] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175949f2af97', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 10', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:00,170] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:00,170] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175949f2b264', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,171] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:00,171] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175949f2b6fb', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,172] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:00,172] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175949f2b9f3', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:00,174] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 11
[2025-07-27 23:11:00,174] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175949f2c419', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 11', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:00,175] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:00,175] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175949f2c634', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,176] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:00,176] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175949f2c90d', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,176] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:00,176] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175949f2cbba', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:00,178] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 12
[2025-07-27 23:11:00,179] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175949f2d458', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 12', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:00,179] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:00,179] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175949f2d65e', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,180] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:00,180] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175949f2d953', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,180] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:00,180] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175949f2dbd0', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:00,182] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 13
[2025-07-27 23:11:00,183] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175949f2e433', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 13', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:00,183] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:00,183] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175949f2e68c', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,184] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:00,184] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175949f2e949', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:00,184] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:00,185] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175949f2ebc4', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:00,185] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:11:00,185] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:11:00,185] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:11:00,286] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:11:00,286] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:11:00,290] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:11:00,292] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:11:00,293] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:11:00,293] pyhamilton.interface INFO server thread exited
[2025-07-27 23:11:18,473] root INFO ###########################################################################################################################
[2025-07-27 23:11:18,473] root INFO #                                                                                                                         #
[2025-07-27 23:11:18,473] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:11:18,473] root INFO #                                                                                                                         #
[2025-07-27 23:11:18,473] root INFO ###########################################################################################################################
[2025-07-27 23:11:18,474] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:11:18,474] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:11:18,474] pyhamilton.interface INFO started the server thread
[2025-07-27 23:11:18,474] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:11:18,478] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:11:18,478] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594b0a0f64', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:18,867] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:11:19,001] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:11:19,001] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594b120985', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,006] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:11:19,007] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594b121f4d', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:19,007] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:19,007] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594b122271', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,008] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:19,008] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594b1225a0', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,009] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:19,009] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594b122936', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:19,011] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 3
[2025-07-27 23:11:19,011] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594b12327c', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 3', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:19,012] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:19,013] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594b1236b4', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,013] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:19,013] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594b12398e', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,014] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:19,014] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594b123c0c', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:19,016] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 4
[2025-07-27 23:11:19,016] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594b12442c', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 4', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:19,017] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:19,017] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594b12477c', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,017] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:19,018] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594b124a55', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,018] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:19,018] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594b124d08', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:19,021] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 5
[2025-07-27 23:11:19,021] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594b125825', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 5', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:19,022] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:19,022] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594b125cb5', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,023] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:19,023] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594b125f90', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,023] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:19,024] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594b1261ee', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:19,026] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 6
[2025-07-27 23:11:19,026] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594b126acd', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 6', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:19,027] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:19,027] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594b126e71', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,027] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:19,028] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594b12712a', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,028] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:19,028] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594b12737b', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:19,030] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 7
[2025-07-27 23:11:19,030] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594b127c0d', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 7', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:19,031] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:19,032] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594b1280b5', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,032] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:19,032] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594b12834e', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,033] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:19,033] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594b1285d6', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:19,035] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 8
[2025-07-27 23:11:19,035] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594b128e6b', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 8', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:19,036] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:19,036] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594b1291a7', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,037] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:19,037] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594b12953b', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,037] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:19,037] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594b1297b0', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:19,040] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9
[2025-07-27 23:11:19,040] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594b12a15f', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:19,041] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:19,041] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594b12a501', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,041] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:19,042] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594b12a800', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,042] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:19,042] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594b12ab58', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:19,045] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 10
[2025-07-27 23:11:19,045] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594b12b463', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 10', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:19,046] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:19,046] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594b12b805', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,046] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:19,046] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594b12ba85', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,047] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:19,047] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594b12bcb9', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:19,049] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 11
[2025-07-27 23:11:19,049] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594b12c59c', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 11', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:19,050] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:19,050] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594b12ca89', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,051] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:19,051] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594b12cd10', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,052] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:19,052] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594b12cfad', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:19,055] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 12
[2025-07-27 23:11:19,055] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594b12dbc5', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 12', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:19,056] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:19,056] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594b12e00b', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,057] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:19,057] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594b12e3be', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,058] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:19,058] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594b12e781', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:19,060] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 13
[2025-07-27 23:11:19,060] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594b12f0cd', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 13', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:19,061] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:19,061] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594b12f497', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,062] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:19,062] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594b12f736', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:19,062] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:19,063] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594b12f9ea', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:19,063] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:11:19,063] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:11:19,063] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:11:19,163] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:11:19,164] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:11:19,167] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:11:19,169] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:11:19,170] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:11:19,170] pyhamilton.interface INFO server thread exited
[2025-07-27 23:11:37,204] root INFO ###########################################################################################################################
[2025-07-27 23:11:37,204] root INFO #                                                                                                                         #
[2025-07-27 23:11:37,204] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:11:37,204] root INFO #                                                                                                                         #
[2025-07-27 23:11:37,205] root INFO ###########################################################################################################################
[2025-07-27 23:11:37,205] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:11:37,206] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:11:37,206] pyhamilton.interface INFO started the server thread
[2025-07-27 23:11:37,206] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:11:37,209] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:11:37,209] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594c27df10', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:37,598] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:11:37,707] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:11:37,708] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594c2f7a4d', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,713] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:11:37,714] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594c2f91dd', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:37,715] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:37,715] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594c2f9698', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,716] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:37,716] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594c2f9a03', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,716] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:37,716] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594c2f9cde', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:37,719] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 3
[2025-07-27 23:11:37,719] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594c2fa7c1', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 3', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:37,720] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:37,721] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594c2fad14', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,722] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:37,722] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594c2fb1e2', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,723] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:37,723] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594c2fb5c9', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:37,726] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 4
[2025-07-27 23:11:37,726] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594c2fc27b', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 4', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:37,727] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:37,727] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594c2fc6f2', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,728] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:37,728] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594c2fcb09', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,729] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:37,729] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594c2fce49', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:37,732] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 5
[2025-07-27 23:11:37,732] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594c2fd991', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 5', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:37,733] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:37,734] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594c2fe000', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,734] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:37,735] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594c2fe39d', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,735] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:37,735] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594c2fe6cb', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:37,739] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 6
[2025-07-27 23:11:37,739] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594c2ff44d', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 6', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:37,740] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:37,740] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594c2ff9b0', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,741] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:37,741] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594c2ffe17', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,742] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:37,742] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594c300202', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:37,745] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 7
[2025-07-27 23:11:37,745] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594c300db4', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 7', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:37,747] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:37,747] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594c301354', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,747] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:37,747] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594c3015ec', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,748] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:37,748] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594c301884', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:37,751] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 8
[2025-07-27 23:11:37,751] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594c302282', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 8', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:37,752] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:37,753] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594c3029ae', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,753] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:37,754] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594c302dfb', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,754] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:37,755] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594c303182', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:37,758] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9
[2025-07-27 23:11:37,758] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594c303df5', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:37,759] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:37,759] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594c304479', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,760] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:37,760] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594c30477e', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,761] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:37,761] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594c304b1c', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:37,763] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 10
[2025-07-27 23:11:37,763] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594c305452', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 10', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:37,765] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:37,765] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594c305a63', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,766] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:37,766] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594c305eb6', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,767] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:37,767] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594c3061a6', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:37,769] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 11
[2025-07-27 23:11:37,770] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594c306ca6', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 11', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:37,771] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:37,771] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594c30727a', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,772] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:37,772] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594c3075e3', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,773] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:37,773] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594c3078f1', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:37,775] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 12
[2025-07-27 23:11:37,775] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594c30832a', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 12', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:37,777] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:37,777] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594c308860', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,778] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:37,778] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594c308c57', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,779] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:37,779] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594c308ffc', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:37,781] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 13
[2025-07-27 23:11:37,781] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17594c3099ba', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 13', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:11:37,783] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:11:37,783] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17594c309f9e', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,784] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:11:37,784] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17594c30a384', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:11:37,784] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:11:37,785] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17594c30a6f4', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:11:37,785] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:11:37,785] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:11:37,785] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:11:37,885] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:11:37,886] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:11:37,888] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:11:37,890] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:11:37,891] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:11:37,891] pyhamilton.interface INFO server thread exited
[2025-07-27 23:13:55,732] root INFO ###########################################################################################################################
[2025-07-27 23:13:55,732] root INFO #                                                                                                                         #
[2025-07-27 23:13:55,732] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:13:55,733] root INFO #                                                                                                                         #
[2025-07-27 23:13:55,733] root INFO ###########################################################################################################################
[2025-07-27 23:13:55,733] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:13:55,734] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:13:55,734] pyhamilton.interface INFO started the server thread
[2025-07-27 23:13:55,734] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:13:55,738] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:13:55,738] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595469a936', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:13:56,231] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:13:56,353] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:13:56,354] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175954730d1a', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,359] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:13:56,359] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175954732216', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:13:56,362] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:13:56,362] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175954732bce', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,362] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:13:56,363] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175954732efa', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,363] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:13:56,363] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759547331a8', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:13:56,366] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 3
[2025-07-27 23:13:56,366] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175954733b3a', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 3', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:13:56,368] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:13:56,368] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595473452f', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,369] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:13:56,369] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17595473480f', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,369] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:13:56,370] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175954734a99', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:13:56,373] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 4
[2025-07-27 23:13:56,373] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759547357bf', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 4', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:13:56,376] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:13:56,376] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759547362ee', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,376] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:13:56,377] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759547365eb', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,377] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:13:56,377] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175954736850', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:13:56,380] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 5
[2025-07-27 23:13:56,380] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175954737388', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 5', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:13:56,384] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:13:56,384] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175954738227', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,385] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:13:56,385] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759547386b1', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,386] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:13:56,386] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175954738abb', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:13:56,389] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 6
[2025-07-27 23:13:56,390] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175954739912', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 6', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:13:56,393] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:13:56,393] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595473a64b', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,394] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:13:56,394] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17595473a9ac', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,394] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:13:56,395] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17595473ac8b', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:13:56,397] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 7
[2025-07-27 23:13:56,397] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595473b73f', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 7', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:13:56,400] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:13:56,400] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595473c24c', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,401] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:13:56,401] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17595473c53e', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,401] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:13:56,402] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17595473c7e3', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:13:56,404] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 8
[2025-07-27 23:13:56,405] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595473d31e', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 8', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:13:56,407] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:13:56,408] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595473df2e', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,408] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:13:56,408] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17595473e23e', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,409] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:13:56,409] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17595473e49d', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:13:56,412] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9
[2025-07-27 23:13:56,412] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595473ef69', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:13:56,415] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:13:56,415] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595473fb21', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,415] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:13:56,416] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17595473fde5', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,416] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:13:56,416] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175954740143', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:13:56,419] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 10
[2025-07-27 23:13:56,419] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175954740b4c', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 10', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:13:56,421] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:13:56,422] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759547415c7', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,422] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:13:56,423] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175954741a71', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,423] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:13:56,423] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175954741d0d', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:13:56,426] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 11
[2025-07-27 23:13:56,427] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175954742902', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 11', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:13:56,431] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:13:56,431] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175954743a63', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,432] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:13:56,432] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175954743d3d', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,432] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:13:56,432] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175954743f9b', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:13:56,435] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 12
[2025-07-27 23:13:56,435] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175954744a57', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 12', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:13:56,439] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:13:56,439] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759547459b0', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,441] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:13:56,441] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759547460f5', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,441] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:13:56,442] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759547463ce', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:13:56,444] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 13
[2025-07-27 23:13:56,445] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175954746fb7', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 13', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:13:56,447] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:13:56,447] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595474790d', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,448] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:13:56,448] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175954747d50', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:13:56,449] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:13:56,449] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17595474803c', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:13:56,449] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:13:56,449] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:13:56,449] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:13:56,550] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:13:56,550] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:13:56,554] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:13:56,557] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:13:56,558] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:13:56,558] pyhamilton.interface INFO server thread exited
[2025-07-27 23:15:20,759] root INFO ###########################################################################################################################
[2025-07-27 23:15:20,760] root INFO #                                                                                                                         #
[2025-07-27 23:15:20,760] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:15:20,760] root INFO #                                                                                                                         #
[2025-07-27 23:15:20,760] root INFO ###########################################################################################################################
[2025-07-27 23:15:20,761] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:15:20,761] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:15:20,761] pyhamilton.interface INFO started the server thread
[2025-07-27 23:15:20,761] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:15:20,764] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:15:20,764] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759597b0d0b', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:15:21,195] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:15:21,317] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:15:21,317] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175959837ce1', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,322] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:15:21,322] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595983914c', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:15:21,325] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:15:21,325] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175959839b1d', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,326] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:15:21,326] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175959839f46', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,327] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:15:21,327] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17595983a252', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:15:21,329] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 3
[2025-07-27 23:15:21,329] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595983ac08', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 3', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:15:21,331] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:15:21,331] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595983b336', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,332] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:15:21,332] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17595983b764', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,333] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:15:21,333] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17595983bb6f', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:15:21,336] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 4
[2025-07-27 23:15:21,336] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595983c718', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 4', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:15:21,339] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:15:21,339] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595983d296', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,340] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:15:21,340] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17595983d747', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,341] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:15:21,341] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17595983dbba', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:15:21,345] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 5
[2025-07-27 23:15:21,345] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595983e907', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 5', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:15:21,350] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:15:21,350] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595983fdd0', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,351] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:15:21,352] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759598403f7', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,353] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:15:21,353] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759598408bb', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:15:21,356] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 6
[2025-07-27 23:15:21,356] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595984137e', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 6', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:15:21,360] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:15:21,361] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759598426ff', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,362] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:15:21,362] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175959842db1', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,363] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:15:21,364] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759598432f2', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:15:21,367] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 7
[2025-07-27 23:15:21,367] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175959844016', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 7', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:15:21,371] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:15:21,371] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175959845082', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,372] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:15:21,372] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759598453fa', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,373] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:15:21,373] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759598456ab', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:15:21,375] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 8
[2025-07-27 23:15:21,376] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595984616a', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 8', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:15:21,381] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:15:21,381] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175959847689', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,382] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:15:21,382] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175959847bae', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,383] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:15:21,384] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17595984809e', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:15:21,387] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9
[2025-07-27 23:15:21,387] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175959848e42', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:15:21,388] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:15:21,388] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759598492ce', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,389] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:15:21,390] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17595984979a', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,390] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:15:21,391] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175959849bd3', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:15:21,393] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 10
[2025-07-27 23:15:21,393] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595984a6e7', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 10', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:15:21,398] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:15:21,398] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595984ba78', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,399] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:15:21,399] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17595984be13', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,400] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:15:21,400] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17595984c1d3', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:15:21,404] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 11
[2025-07-27 23:15:21,404] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595984cf0f', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 11', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:15:21,407] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:15:21,407] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595984dcb4', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,408] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:15:21,408] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17595984df9c', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,409] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:15:21,409] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17595984e273', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:15:21,411] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 12
[2025-07-27 23:15:21,412] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595984edc5', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 12', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:15:21,416] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:15:21,416] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595984ff31', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,417] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:15:21,417] JSONLogger INFO {'command': 'channelDispense', 'id': '0x175959850454', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,418] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:15:21,419] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175959850981', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:15:21,423] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 13
[2025-07-27 23:15:21,423] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175959851a52', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 13', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:15:21,428] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:15:21,429] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175959852ff1', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,429] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:15:21,430] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759598533d1', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:15:21,430] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:15:21,430] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x175959853799', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:15:21,431] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:15:21,431] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:15:21,431] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:15:21,531] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:15:21,532] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:15:21,535] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:15:21,536] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:15:21,537] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:15:21,537] pyhamilton.interface INFO server thread exited
[2025-07-27 23:16:07,710] root INFO ###########################################################################################################################
[2025-07-27 23:16:07,710] root INFO #                                                                                                                         #
[2025-07-27 23:16:07,710] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:16:07,711] root INFO #                                                                                                                         #
[2025-07-27 23:16:07,711] root INFO ###########################################################################################################################
[2025-07-27 23:16:07,711] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:16:07,711] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:16:07,712] pyhamilton.interface INFO started the server thread
[2025-07-27 23:16:07,712] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:16:07,714] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:16:07,714] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595c477472', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:16:08,114] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:16:08,236] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:16:08,237] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595c4f6c83', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,243] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:16:08,243] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595c4f83fa', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:16:08,247] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:16:08,248] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595c4f974b', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,248] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:16:08,249] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17595c4f9abb', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,249] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:16:08,249] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17595c4f9d82', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:16:08,253] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 3
[2025-07-27 23:16:08,253] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595c4fab38', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 3', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:16:08,255] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:16:08,256] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595c4fb62c', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,257] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:16:08,257] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17595c4fbab7', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,257] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:16:08,257] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17595c4fbd87', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:16:08,260] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 4
[2025-07-27 23:16:08,260] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595c4fc8f1', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 4', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:16:08,264] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:16:08,264] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595c4fd73d', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,265] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:16:08,265] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17595c4fda6d', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,265] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:16:08,266] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17595c4fdd69', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:16:08,268] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 5
[2025-07-27 23:16:08,268] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595c4fe839', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 5', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:16:08,272] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:16:08,272] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595c4ff7f7', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,273] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:16:08,273] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17595c4ffbbf', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,274] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:16:08,274] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17595c4ffe3c', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:16:08,276] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 6
[2025-07-27 23:16:08,277] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595c500852', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 6', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:16:08,279] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:16:08,279] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595c501307', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,280] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:16:08,280] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17595c5015bb', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,280] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:16:08,281] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17595c501809', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:16:08,285] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 7
[2025-07-27 23:16:08,285] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595c502ab8', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 7', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:16:08,288] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:16:08,289] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595c5037eb', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,290] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:16:08,290] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17595c503cd2', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,291] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:16:08,291] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17595c503f7c', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:16:08,295] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 8
[2025-07-27 23:16:08,296] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595c505230', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 8', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:16:08,299] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:16:08,299] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595c506072', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,300] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:16:08,300] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17595c506338', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,300] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:16:08,300] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17595c5065a0', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:16:08,304] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9
[2025-07-27 23:16:08,304] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595c5073a2', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:16:08,307] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:16:08,307] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595c507fc9', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,308] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:16:08,308] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17595c5082c2', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,308] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:16:08,309] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17595c508673', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:16:08,312] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 10
[2025-07-27 23:16:08,313] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595c509512', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 10', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:16:08,315] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:16:08,316] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595c50a0b2', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,316] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:16:08,317] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17595c50a50f', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,317] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:16:08,318] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17595c50a906', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:16:08,321] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 11
[2025-07-27 23:16:08,321] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595c50b739', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 11', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:16:08,325] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:16:08,325] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595c50c4b1', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,325] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:16:08,326] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17595c50c7aa', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,326] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:16:08,326] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17595c50ca2d', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:16:08,329] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 12
[2025-07-27 23:16:08,329] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595c50d5e3', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 12', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:16:08,335] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:16:08,335] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595c50ed18', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,336] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:16:08,336] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17595c50f048', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,337] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:16:08,337] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17595c50f381', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:16:08,341] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 13
[2025-07-27 23:16:08,341] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17595c510466', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 13', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:16:08,347] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:16:08,347] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17595c511bc8', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,348] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:16:08,348] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17595c511f9c', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:16:08,349] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:16:08,349] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17595c512324', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:16:08,349] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:16:08,349] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:16:08,349] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:16:08,450] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:16:08,451] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:16:08,453] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:16:08,455] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:16:08,456] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:16:08,458] pyhamilton.interface INFO server thread exited
[2025-07-27 23:17:17,053] root INFO ###########################################################################################################################
[2025-07-27 23:17:17,053] root INFO #                                                                                                                         #
[2025-07-27 23:17:17,053] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:17:17,053] root INFO #                                                                                                                         #
[2025-07-27 23:17:17,053] root INFO ###########################################################################################################################
[2025-07-27 23:17:17,054] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:17:17,054] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:17:17,054] pyhamilton.interface INFO started the server thread
[2025-07-27 23:17:17,054] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:17:17,058] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:17:17,059] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175960699013', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:17:17,462] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:17:17,588] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:17:17,588] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17596071a414', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:17:17,594] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:17:17,594] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17596071bc55', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:17:17,594] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:17:17,594] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:17:17,595] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:17:17,695] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:17:17,695] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:17:17,698] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:17:17,701] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:17:17,701] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:17:17,702] pyhamilton.interface INFO server thread exited
[2025-07-27 23:17:17,704] root ERROR Traceback (most recent call last):
[2025-07-27 23:17:17,706] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 35, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-27 23:17:17,706] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 136, in pip_transfer    vols = set_parallel_nones(split_column_volumes, positions)
[2025-07-27 23:17:17,707] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 82, in set_parallel_nones    positions[i] = None    ~~~~~~~~~^^^
[2025-07-27 23:17:17,707] root ERROR IndexError: list assignment index out of range
[2025-07-27 23:18:31,850] root INFO ###########################################################################################################################
[2025-07-27 23:18:31,850] root INFO #                                                                                                                         #
[2025-07-27 23:18:31,851] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:18:31,851] root INFO #                                                                                                                         #
[2025-07-27 23:18:31,851] root INFO ###########################################################################################################################
[2025-07-27 23:18:31,851] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:18:31,852] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:18:31,852] pyhamilton.interface INFO started the server thread
[2025-07-27 23:18:31,852] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:18:31,856] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:18:31,856] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175964dee139', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:18:32,273] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:18:32,393] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:18:32,393] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175964e71339', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:18:32,398] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:18:32,398] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175964e727ee', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:18:32,399] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:18:32,399] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:18:32,399] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:18:32,500] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:18:32,500] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:18:32,502] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:18:32,503] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:18:32,504] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:18:32,504] pyhamilton.interface INFO server thread exited
[2025-07-27 23:18:32,506] root ERROR Traceback (most recent call last):
[2025-07-27 23:18:32,506] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 35, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-27 23:18:32,507] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 136, in pip_transfer    vols = set_parallel_nones(split_column_volumes, positions)
[2025-07-27 23:18:32,507] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 82, in set_parallel_nones    positions[i] = None    ~~~~~~~~~^^^
[2025-07-27 23:18:32,507] root ERROR IndexError: list assignment index out of range
[2025-07-27 23:18:58,015] root INFO ###########################################################################################################################
[2025-07-27 23:18:58,015] root INFO #                                                                                                                         #
[2025-07-27 23:18:58,015] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:18:58,015] root INFO #                                                                                                                         #
[2025-07-27 23:18:58,015] root INFO ###########################################################################################################################
[2025-07-27 23:18:58,015] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:18:58,016] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:18:58,016] pyhamilton.interface INFO started the server thread
[2025-07-27 23:18:58,016] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:18:58,020] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:18:58,020] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759666e1bc2', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:18:58,460] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:18:58,579] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:18:58,580] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17596676a636', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:18:58,585] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:18:58,585] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17596676bd3c', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:18:58,586] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:18:58,586] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:18:58,586] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:18:58,687] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:18:58,688] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:18:58,690] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:18:58,692] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:18:58,692] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:18:58,693] pyhamilton.interface INFO server thread exited
[2025-07-27 23:18:58,694] root ERROR Traceback (most recent call last):
[2025-07-27 23:18:58,695] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 35, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-27 23:18:58,695] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 136, in pip_transfer    vols = set_parallel_nones(split_column_volumes, positions)
[2025-07-27 23:18:58,695] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 82, in set_parallel_nones    positions[i] = None    ~~~~~~~~~^^^
[2025-07-27 23:18:58,696] root ERROR IndexError: list assignment index out of range
[2025-07-27 23:19:35,760] root INFO ###########################################################################################################################
[2025-07-27 23:19:35,760] root INFO #                                                                                                                         #
[2025-07-27 23:19:35,760] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:19:35,761] root INFO #                                                                                                                         #
[2025-07-27 23:19:35,761] root INFO ###########################################################################################################################
[2025-07-27 23:19:35,761] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:19:35,761] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:19:35,761] pyhamilton.interface INFO started the server thread
[2025-07-27 23:19:35,762] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:19:35,765] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:19:35,766] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175968ae102d', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:19:36,165] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:19:36,293] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:19:36,293] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175968b61d1c', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:19:36,298] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:19:36,299] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175968b6322c', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:19:36,299] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:19:36,299] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175968b634b0', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:19:36,300] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:19:36,300] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:19:36,300] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:19:36,300] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:19:36,401] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:19:36,401] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:19:36,404] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:19:36,406] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:19:36,406] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:19:36,407] pyhamilton.interface INFO server thread exited
[2025-07-27 23:19:36,410] root ERROR Traceback (most recent call last):
[2025-07-27 23:19:36,411] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 35, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-27 23:19:36,411] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 136, in pip_transfer    response = ham_int.aspirate(positions, vols, liquidClass=liquid_class,                    mixCycles=prewet_cycles, mixVolume=prewet_volume,                    liquidHeight=aspirate_height_from_bottom,                    capacitiveLLD=aspirate_capacitative_LLD, aspirateMode=aspirate_mode,                    liquidFollowing=liquid_following_aspiration)
[2025-07-27 23:19:36,411] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 803, in aspirate    self._assert_parallel_nones(pos_tuples, vols)    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^
[2025-07-27 23:19:36,412] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 762, in _assert_parallel_nones    raise ValueError('Lists must have parallel None entries')
[2025-07-27 23:19:36,412] root ERROR ValueError: Lists must have parallel None entries
[2025-07-27 23:20:38,906] root INFO ###########################################################################################################################
[2025-07-27 23:20:38,906] root INFO #                                                                                                                         #
[2025-07-27 23:20:38,906] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:20:38,906] root INFO #                                                                                                                         #
[2025-07-27 23:20:38,906] root INFO ###########################################################################################################################
[2025-07-27 23:20:38,907] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:20:38,907] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:20:38,907] pyhamilton.interface INFO started the server thread
[2025-07-27 23:20:38,907] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:20:38,910] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:20:38,910] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17596c71931c', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:20:39,316] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:20:39,428] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:20:39,428] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17596c797a01', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:20:39,434] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:20:39,434] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17596c7990d3', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:20:39,435] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:20:39,435] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17596c7995f4', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:20:39,437] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:20:39,437] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:20:39,437] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:20:39,437] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:20:39,537] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:20:39,538] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:20:39,541] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:20:39,543] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:20:39,544] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:20:39,544] pyhamilton.interface INFO server thread exited
[2025-07-27 23:20:39,547] root ERROR Traceback (most recent call last):
[2025-07-27 23:20:39,548] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 35, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-27 23:20:39,549] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 137, in pip_transfer    response = ham_int.aspirate(positions, vols, liquidClass=liquid_class,                    mixCycles=prewet_cycles, mixVolume=prewet_volume,                    liquidHeight=aspirate_height_from_bottom,                    capacitiveLLD=aspirate_capacitative_LLD, aspirateMode=aspirate_mode,                    liquidFollowing=liquid_following_aspiration)
[2025-07-27 23:20:39,549] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 803, in aspirate    self._assert_parallel_nones(pos_tuples, vols)    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^
[2025-07-27 23:20:39,549] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 762, in _assert_parallel_nones    raise ValueError('Lists must have parallel None entries')
[2025-07-27 23:20:39,550] root ERROR ValueError: Lists must have parallel None entries
[2025-07-27 23:21:05,148] root INFO ###########################################################################################################################
[2025-07-27 23:21:05,149] root INFO #                                                                                                                         #
[2025-07-27 23:21:05,149] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:21:05,149] root INFO #                                                                                                                         #
[2025-07-27 23:21:05,149] root INFO ###########################################################################################################################
[2025-07-27 23:21:05,150] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:21:05,150] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:21:05,150] pyhamilton.interface INFO started the server thread
[2025-07-27 23:21:05,150] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:21:05,154] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:21:05,154] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17596e0205a3', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:21:05,552] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:21:05,669] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:21:05,669] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17596e09e186', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:21:05,675] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:21:05,676] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17596e09fabe', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:21:05,676] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:21:05,676] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17596e09fda0', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:21:05,677] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:21:05,678] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:21:05,678] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:21:05,678] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:21:05,778] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:21:05,779] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:21:05,781] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:21:05,783] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:21:05,783] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:21:05,783] pyhamilton.interface INFO server thread exited
[2025-07-27 23:21:05,785] root ERROR Traceback (most recent call last):
[2025-07-27 23:21:05,787] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 35, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-27 23:21:05,787] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 136, in pip_transfer    response = ham_int.aspirate(positions, vols, liquidClass=liquid_class,                    mixCycles=prewet_cycles, mixVolume=prewet_volume,                    liquidHeight=aspirate_height_from_bottom,                    capacitiveLLD=aspirate_capacitative_LLD, aspirateMode=aspirate_mode,                    liquidFollowing=liquid_following_aspiration)
[2025-07-27 23:21:05,787] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 803, in aspirate    self._assert_parallel_nones(pos_tuples, vols)    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^
[2025-07-27 23:21:05,787] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 762, in _assert_parallel_nones    raise ValueError('Lists must have parallel None entries')
[2025-07-27 23:21:05,788] root ERROR ValueError: Lists must have parallel None entries
[2025-07-27 23:30:11,013] root INFO ###########################################################################################################################
[2025-07-27 23:30:11,014] root INFO #                                                                                                                         #
[2025-07-27 23:30:11,014] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:30:11,014] root INFO #                                                                                                                         #
[2025-07-27 23:30:11,014] root INFO ###########################################################################################################################
[2025-07-27 23:30:11,014] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:30:11,015] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:30:11,015] pyhamilton.interface INFO started the server thread
[2025-07-27 23:30:11,015] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:30:11,019] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:30:11,019] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17598e8b432f', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:30:11,444] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:30:11,556] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:30:11,556] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17598e9373e0', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:30:11,561] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:30:11,561] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17598e938961', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:30:11,562] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:30:11,562] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17598e938bf3', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:30:11,563] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:30:11,563] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:30:11,563] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:30:11,563] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:30:11,664] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:30:11,664] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:30:11,666] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:30:11,668] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:30:11,668] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:30:11,669] pyhamilton.interface INFO server thread exited
[2025-07-27 23:30:11,671] root ERROR Traceback (most recent call last):
[2025-07-27 23:30:11,672] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 35, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-27 23:30:11,673] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 136, in pip_transfer    response = ham_int.aspirate(positions, vols, liquidClass=liquid_class,                    mixCycles=prewet_cycles, mixVolume=prewet_volume,                    liquidHeight=aspirate_height_from_bottom,                    capacitiveLLD=aspirate_capacitative_LLD, aspirateMode=aspirate_mode,                    liquidFollowing=liquid_following_aspiration)
[2025-07-27 23:30:11,673] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 803, in aspirate    self._assert_parallel_nones(pos_tuples, vols)    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^
[2025-07-27 23:30:11,673] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 762, in _assert_parallel_nones    raise ValueError('Lists must have parallel None entries')
[2025-07-27 23:30:11,673] root ERROR ValueError: Lists must have parallel None entries
[2025-07-27 23:31:21,069] root INFO ###########################################################################################################################
[2025-07-27 23:31:21,069] root INFO #                                                                                                                         #
[2025-07-27 23:31:21,069] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:31:21,069] root INFO #                                                                                                                         #
[2025-07-27 23:31:21,069] root INFO ###########################################################################################################################
[2025-07-27 23:31:21,070] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:31:21,070] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:31:21,070] pyhamilton.interface INFO started the server thread
[2025-07-27 23:31:21,070] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:31:21,073] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:31:21,073] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175992b83504', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:31:21,479] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:31:21,602] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:31:21,603] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175992c047ed', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:31:21,608] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:31:21,608] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x175992c05e59', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:31:21,609] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:31:21,609] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175992c061e9', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:31:21,610] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:31:21,610] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:31:21,611] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:31:21,611] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:31:21,711] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:31:21,711] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:31:21,714] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:31:21,717] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:31:21,717] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:31:21,718] pyhamilton.interface INFO server thread exited
[2025-07-27 23:31:21,721] root ERROR Traceback (most recent call last):
[2025-07-27 23:31:21,722] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 35, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-27 23:31:21,723] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 138, in pip_transfer    response = ham_int.aspirate(positions, vols, liquidClass=liquid_class,                    mixCycles=prewet_cycles, mixVolume=prewet_volume,                    liquidHeight=aspirate_height_from_bottom,                    capacitiveLLD=aspirate_capacitative_LLD, aspirateMode=aspirate_mode,                    liquidFollowing=liquid_following_aspiration)
[2025-07-27 23:31:21,723] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 803, in aspirate    self._assert_parallel_nones(pos_tuples, vols)    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^
[2025-07-27 23:31:21,723] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 762, in _assert_parallel_nones    raise ValueError('Lists must have parallel None entries')
[2025-07-27 23:31:21,723] root ERROR ValueError: Lists must have parallel None entries
[2025-07-27 23:32:20,743] root INFO ###########################################################################################################################
[2025-07-27 23:32:20,743] root INFO #                                                                                                                         #
[2025-07-27 23:32:20,743] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:32:20,743] root INFO #                                                                                                                         #
[2025-07-27 23:32:20,743] root INFO ###########################################################################################################################
[2025-07-27 23:32:20,744] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:32:20,744] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:32:20,744] pyhamilton.interface INFO started the server thread
[2025-07-27 23:32:20,744] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:32:20,747] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:32:20,747] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17599646c2a2', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:32:21,119] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:32:21,229] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:32:21,229] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759964e1b6e', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:32:21,234] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:32:21,234] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759964e311d', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:32:21,235] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:32:21,235] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759964e3302', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:32:21,236] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:32:21,236] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:32:21,236] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:32:21,236] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:32:21,336] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:32:21,337] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:32:21,340] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:32:21,342] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:32:21,343] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:32:21,344] pyhamilton.interface INFO server thread exited
[2025-07-27 23:32:21,347] root ERROR Traceback (most recent call last):
[2025-07-27 23:32:21,350] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 35, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-27 23:32:21,350] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 137, in pip_transfer    response = ham_int.aspirate(positions, vols, liquidClass=liquid_class,                    mixCycles=prewet_cycles, mixVolume=prewet_volume,                    liquidHeight=aspirate_height_from_bottom,                    capacitiveLLD=aspirate_capacitative_LLD, aspirateMode=aspirate_mode,                    liquidFollowing=liquid_following_aspiration)
[2025-07-27 23:32:21,351] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 803, in aspirate    self._assert_parallel_nones(pos_tuples, vols)    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^
[2025-07-27 23:32:21,351] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 762, in _assert_parallel_nones    raise ValueError('Lists must have parallel None entries')
[2025-07-27 23:32:21,352] root ERROR ValueError: Lists must have parallel None entries
[2025-07-27 23:33:09,547] root INFO ###########################################################################################################################
[2025-07-27 23:33:09,548] root INFO #                                                                                                                         #
[2025-07-27 23:33:09,548] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:33:09,548] root INFO #                                                                                                                         #
[2025-07-27 23:33:09,548] root INFO ###########################################################################################################################
[2025-07-27 23:33:09,548] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:33:09,549] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:33:09,549] pyhamilton.interface INFO started the server thread
[2025-07-27 23:33:09,549] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:33:09,552] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:33:09,553] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759992f77e1', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:33:09,991] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:33:10,117] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:33:10,117] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175999381414', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:33:10,122] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:33:10,122] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17599938298b', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:33:10,123] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:33:10,123] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x175999382b97', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:33:10,124] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:33:10,124] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:33:10,124] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:33:10,124] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:33:10,225] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:33:10,225] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:33:10,229] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:33:10,231] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:33:10,232] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:33:10,232] pyhamilton.interface INFO server thread exited
[2025-07-27 23:33:10,236] root ERROR Traceback (most recent call last):
[2025-07-27 23:33:10,238] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 35, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-27 23:33:10,238] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 139, in pip_transfer    response = ham_int.aspirate(positions, vols, liquidClass=liquid_class,                    mixCycles=prewet_cycles, mixVolume=prewet_volume,                    liquidHeight=aspirate_height_from_bottom,                    capacitiveLLD=aspirate_capacitative_LLD, aspirateMode=aspirate_mode,                    liquidFollowing=liquid_following_aspiration)
[2025-07-27 23:33:10,239] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 803, in aspirate    self._assert_parallel_nones(pos_tuples, vols)    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^
[2025-07-27 23:33:10,239] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 762, in _assert_parallel_nones    raise ValueError('Lists must have parallel None entries')
[2025-07-27 23:33:10,240] root ERROR ValueError: Lists must have parallel None entries
[2025-07-27 23:34:11,944] root INFO ###########################################################################################################################
[2025-07-27 23:34:11,944] root INFO #                                                                                                                         #
[2025-07-27 23:34:11,945] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:34:11,945] root INFO #                                                                                                                         #
[2025-07-27 23:34:11,945] root INFO ###########################################################################################################################
[2025-07-27 23:34:11,945] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:34:11,945] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:34:11,945] pyhamilton.interface INFO started the server thread
[2025-07-27 23:34:11,945] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:34:11,949] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:34:11,949] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17599ce79143', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:34:12,325] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:34:12,447] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:34:12,447] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17599cef2982', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:34:12,453] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:34:12,453] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17599cef414f', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:34:12,454] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:34:12,454] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17599cef4439', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:34:12,455] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:34:12,455] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:34:12,455] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:34:12,456] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:34:12,556] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:34:12,556] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:34:12,560] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:34:12,562] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:34:12,563] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:34:12,564] pyhamilton.interface INFO server thread exited
[2025-07-27 23:34:12,568] root ERROR Traceback (most recent call last):
[2025-07-27 23:34:12,569] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 35, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-27 23:34:12,570] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 136, in pip_transfer    response = ham_int.aspirate(positions, vols, liquidClass=liquid_class,                    mixCycles=prewet_cycles, mixVolume=prewet_volume,                    liquidHeight=aspirate_height_from_bottom,                    capacitiveLLD=aspirate_capacitative_LLD, aspirateMode=aspirate_mode,                    liquidFollowing=liquid_following_aspiration)
[2025-07-27 23:34:12,570] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 803, in aspirate    self._assert_parallel_nones(pos_tuples, vols)    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^
[2025-07-27 23:34:12,570] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 762, in _assert_parallel_nones    raise ValueError('Lists must have parallel None entries')
[2025-07-27 23:34:12,570] root ERROR ValueError: Lists must have parallel None entries
[2025-07-27 23:34:35,083] root INFO ###########################################################################################################################
[2025-07-27 23:34:35,083] root INFO #                                                                                                                         #
[2025-07-27 23:34:35,083] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:34:35,083] root INFO #                                                                                                                         #
[2025-07-27 23:34:35,083] root INFO ###########################################################################################################################
[2025-07-27 23:34:35,083] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:34:35,084] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:34:35,084] pyhamilton.interface INFO started the server thread
[2025-07-27 23:34:35,084] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:34:35,088] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:34:35,088] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17599e48a29e', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:34:35,468] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:34:35,593] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:34:35,593] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17599e50584b', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:34:35,599] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:34:35,599] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17599e50703b', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:34:35,600] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:34:35,600] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17599e507132', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:34:35,600] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:34:35,601] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:34:35,601] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:34:35,601] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:34:35,701] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:34:35,702] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:34:35,706] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:34:35,708] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:34:35,710] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:34:35,710] pyhamilton.interface INFO server thread exited
[2025-07-27 23:34:35,714] root ERROR Traceback (most recent call last):
[2025-07-27 23:34:35,716] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 35, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-27 23:34:35,716] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 136, in pip_transfer    response = ham_int.aspirate(positions, vols, liquidClass=liquid_class,                    mixCycles=prewet_cycles, mixVolume=prewet_volume,                    liquidHeight=aspirate_height_from_bottom,                    capacitiveLLD=aspirate_capacitative_LLD, aspirateMode=aspirate_mode,                    liquidFollowing=liquid_following_aspiration)
[2025-07-27 23:34:35,716] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 803, in aspirate    self._assert_parallel_nones(pos_tuples, vols)    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^
[2025-07-27 23:34:35,717] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 762, in _assert_parallel_nones    raise ValueError('Lists must have parallel None entries')
[2025-07-27 23:34:35,717] root ERROR ValueError: Lists must have parallel None entries
[2025-07-27 23:35:55,455] root INFO ###########################################################################################################################
[2025-07-27 23:35:55,455] root INFO #                                                                                                                         #
[2025-07-27 23:35:55,455] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:35:55,455] root INFO #                                                                                                                         #
[2025-07-27 23:35:55,455] root INFO ###########################################################################################################################
[2025-07-27 23:35:55,456] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:35:55,456] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:35:55,456] pyhamilton.interface INFO started the server thread
[2025-07-27 23:35:55,456] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:35:55,459] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:35:55,459] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a313008c', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:35:55,857] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:35:55,978] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:35:55,978] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31aeac9', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:55,983] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:35:55,983] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a31afe28', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:35:55,983] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:55,983] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31aff28', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:55,984] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:55,984] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b0207', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:55,984] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:55,985] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b04b0', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:55,985] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:55,985] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b07dc', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:55,986] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:55,986] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b0ab1', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:55,987] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:55,987] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b0d77', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:55,987] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:55,987] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b0fdb', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:55,988] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:55,988] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b1206', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:55,988] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:35:55,989] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a31b145e', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:55,989] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:35:55,989] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a31b16c3', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:35:55,992] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 3
[2025-07-27 23:35:55,992] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a31b2341', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 3', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:35:55,993] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:55,993] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b242d', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:55,993] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:55,993] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b26b6', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:55,994] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:55,994] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b294c', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:55,994] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:55,995] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b2ba5', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:55,995] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:55,995] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b2ddc', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:55,996] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:55,996] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b301c', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:55,996] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:55,996] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b328f', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:55,997] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:55,997] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b34d0', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:55,997] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:35:55,998] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a31b3714', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:55,998] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:35:55,998] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a31b3958', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:35:56,001] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 4
[2025-07-27 23:35:56,001] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a31b4492', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 4', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:35:56,001] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,001] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b454e', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,002] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,002] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b47e1', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,002] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,002] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b4a93', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,003] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,003] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b4cbe', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,003] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,004] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b4eed', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,004] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,004] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b5131', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,005] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,005] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b5376', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,005] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,005] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b55a3', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,006] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:35:56,006] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a31b57de', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,006] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:35:56,006] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a31b5a26', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:35:56,009] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 5
[2025-07-27 23:35:56,010] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a31b6615', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 5', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:35:56,010] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,010] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b66c6', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,010] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,010] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b699f', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,011] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,011] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b6ce4', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,012] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,012] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b6f27', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,012] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,012] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b715a', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,013] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,013] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b73a2', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,013] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,014] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b75d8', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,014] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,014] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b77fc', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,015] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:35:56,015] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a31b7a2a', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,015] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:35:56,015] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a31b7cd6', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:35:56,019] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 6
[2025-07-27 23:35:56,019] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a31b8a30', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 6', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:35:56,019] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,019] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b8ae4', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,020] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,020] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b8ea2', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,020] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,021] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b9125', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,021] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,021] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b9349', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,022] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,022] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b9585', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,022] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,022] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b97b1', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,023] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,023] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b99cb', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,023] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,023] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31b9c00', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,024] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:35:56,024] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a31b9e1c', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,024] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:35:56,025] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a31ba0b7', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:35:56,028] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 7
[2025-07-27 23:35:56,028] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a31bae00', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 7', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:35:56,028] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,028] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31baebd', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,029] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,029] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31bb180', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,029] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,029] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31bb40b', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,030] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,030] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31bb633', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,030] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,031] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31bb862', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,031] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,031] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31bbaa4', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,032] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,032] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31bbcc5', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,032] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,032] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31bbef3', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,033] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:35:56,033] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a31bc109', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,033] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:35:56,033] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a31bc35e', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:35:56,036] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 8
[2025-07-27 23:35:56,036] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a31bcf15', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 8', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:35:56,036] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,037] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31bcfc2', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,037] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,037] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31bd222', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,038] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,038] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31bd49e', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,038] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,038] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31bd70d', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,039] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,039] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31bd932', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,039] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,040] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31bdb65', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,040] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,040] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31bdd92', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,041] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,041] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31bdfc1', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,041] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:35:56,041] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a31be1ee', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,042] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:35:56,042] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a31be43d', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:35:56,045] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9
[2025-07-27 23:35:56,045] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a31bf27b', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:35:56,046] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,046] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31bf33c', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,046] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,046] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31bf603', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,047] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,047] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31bf8b7', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,048] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,048] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31bfb54', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,048] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,048] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31bfd9a', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,049] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,049] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31bffcc', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,049] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,049] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c0209', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,050] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,050] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c0423', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,050] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:35:56,051] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a31c064d', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,051] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:35:56,051] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a31c08a0', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:35:56,054] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 10
[2025-07-27 23:35:56,054] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a31c13c2', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 10', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:35:56,054] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,054] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c147a', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,055] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,055] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c1727', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,055] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,055] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c199e', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,056] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,056] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c1be0', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,057] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,057] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c1e23', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,057] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,057] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c205d', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,058] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,058] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c2292', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,058] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,058] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c24c8', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,059] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:35:56,059] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a31c26ee', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,059] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:35:56,060] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a31c29f9', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:35:56,063] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 11
[2025-07-27 23:35:56,063] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a31c35fd', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 11', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:35:56,063] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,063] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c36b2', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,064] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,064] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c3b0a', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,065] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,065] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c3d86', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,065] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,065] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c3fce', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,066] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,066] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c4204', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,066] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,066] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c4450', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,067] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,067] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c4670', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,067] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,068] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c488f', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,068] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:35:56,068] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a31c4ace', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,068] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:35:56,069] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a31c4ce9', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:35:56,072] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 12
[2025-07-27 23:35:56,072] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a31c58c6', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 12', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:35:56,072] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,072] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c5970', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,072] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,072] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c5be7', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,073] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,073] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c5e44', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,073] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,074] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c606e', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,074] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,074] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c62a2', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,075] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,075] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c64cf', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,075] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,075] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c6731', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,076] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,076] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c6971', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,076] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:35:56,076] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a31c6b93', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,077] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:35:56,077] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a31c6e9c', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:35:56,080] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 13
[2025-07-27 23:35:56,080] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a31c7986', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 13', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:35:56,080] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,080] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c7a34', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,081] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,081] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c7ca3', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,081] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,081] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c7f07', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,082] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,082] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c8157', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,082] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,083] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c83a1', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,083] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,083] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c85f0', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,084] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,084] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c882b', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,084] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:35:56,084] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a31c8a4d', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,085] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:35:56,085] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a31c8cc0', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:35:56,085] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:35:56,086] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a31c8eee', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:35:56,086] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:35:56,086] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:35:56,086] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:35:56,186] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:35:56,187] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:35:56,190] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:35:56,192] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:35:56,193] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:35:56,193] pyhamilton.interface INFO server thread exited
[2025-07-27 23:36:43,239] root INFO ###########################################################################################################################
[2025-07-27 23:36:43,239] root INFO #                                                                                                                         #
[2025-07-27 23:36:43,239] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-27 23:36:43,239] root INFO #                                                                                                                         #
[2025-07-27 23:36:43,239] root INFO ###########################################################################################################################
[2025-07-27 23:36:43,240] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-27 23:36:43,240] pyhamilton.interface INFO running in simulation mode
[2025-07-27 23:36:43,240] pyhamilton.interface INFO started the server thread
[2025-07-27 23:36:43,240] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-27 23:36:43,243] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-27 23:36:43,243] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a5ec218d', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:36:43,611] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-27 23:36:43,742] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-27 23:36:43,742] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f3bc9b', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,748] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-27 23:36:43,748] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a5f3d5d7', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 2', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:36:43,749] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,749] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f3d8d2', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,750] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,751] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f3df74', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,752] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,752] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f3e4cb', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,753] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,754] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f3ea3b', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,755] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,755] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f3ef97', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,756] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,757] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f3f59d', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,758] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,758] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f3fbd3', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,760] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,760] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f40296', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,761] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:36:43,761] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a5f40886', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,762] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:36:43,763] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a5f40d6b', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:36:43,768] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 3
[2025-07-27 23:36:43,768] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a5f42331', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 3', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:36:43,769] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,769] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f4273a', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,771] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,771] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f42ed2', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,773] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,773] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f43693', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,774] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,775] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f43cf8', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,776] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,777] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f443b6', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,777] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,778] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f44873', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,779] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,779] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f44ed3', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,781] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,781] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f455b1', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,782] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:36:43,782] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a5f45b03', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,783] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:36:43,784] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a5f45f7a', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:36:43,788] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 4
[2025-07-27 23:36:43,788] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a5f471d6', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 4', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:36:43,789] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,789] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f474a2', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,790] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,790] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f47995', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,791] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,791] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f47e30', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,792] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,793] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f48377', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,794] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,794] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f487fb', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,795] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,795] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f48d23', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,796] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,796] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f491a7', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,797] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,798] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f495fb', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,798] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:36:43,799] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a5f49a59', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,799] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:36:43,799] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a5f49d92', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:36:43,803] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 5
[2025-07-27 23:36:43,803] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a5f4ac62', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 5', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:36:43,804] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,804] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f4aeb6', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,805] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,805] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f4b35b', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,806] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,806] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f4b821', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,807] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,807] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f4bc75', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,808] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,808] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f4c0b0', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,809] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,810] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f4c54f', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,811] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,811] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f4c98e', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,812] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,812] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f4cdb1', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,813] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:36:43,813] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a5f4d1b0', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,813] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:36:43,814] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a5f4d46d', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:36:43,817] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 6
[2025-07-27 23:36:43,817] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a5f4e1d0', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 6', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:36:43,817] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,818] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f4e3ef', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,819] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,819] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f4e8e9', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,820] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,820] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f4ec81', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,821] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,821] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f4f0c8', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,822] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,822] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f4f493', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,823] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,823] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f4f85e', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,824] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,824] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f4fc16', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,825] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,825] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f50083', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,826] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:36:43,826] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a5f504a0', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,827] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:36:43,827] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a5f50828', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:36:43,831] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 7
[2025-07-27 23:36:43,831] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a5f518eb', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 7', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:36:43,831] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,832] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f51b21', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,832] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,833] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f51f13', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,833] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,834] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f522e5', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,834] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,835] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f52738', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,836] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,836] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f52b4b', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,837] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,837] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f52f11', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,838] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,838] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f53330', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,839] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,839] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f5370f', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,840] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:36:43,840] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a5f53ae3', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,840] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:36:43,841] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a5f53dec', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:36:43,844] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 8
[2025-07-27 23:36:43,844] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a5f54d58', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 8', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:36:43,845] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,845] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f54f6d', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,846] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,846] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f5537b', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,847] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,847] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f55761', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,848] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,848] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f55c08', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,849] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,849] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f55ff3', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,850] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,850] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f56383', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,851] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,851] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f567b8', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,852] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,852] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f56bb3', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,853] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:36:43,853] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a5f56f80', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,854] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:36:43,854] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a5f5721c', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:36:43,858] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9
[2025-07-27 23:36:43,858] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a5f58173', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:36:43,858] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,858] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f583f8', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,859] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,860] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f58882', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,861] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,861] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f58df8', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,862] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,862] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f59273', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,863] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,863] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f596f3', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,864] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,864] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f59b46', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,865] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,866] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f59f79', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,866] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,867] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f5a3ae', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,868] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:36:43,868] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a5f5a8ea', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,869] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:36:43,869] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a5f5ac16', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:36:43,873] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 10
[2025-07-27 23:36:43,873] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a5f5bdd8', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 10', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:36:43,874] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,874] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f5c012', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,875] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,875] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f5c465', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,876] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,876] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f5c93a', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,877] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,877] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f5cdb0', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,878] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,879] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f5d293', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,879] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,880] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f5d6ae', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,881] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,881] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f5dae2', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,882] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,882] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f5deeb', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,883] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:36:43,883] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a5f5e32e', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,883] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:36:43,884] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a5f5e61e', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:36:43,888] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 11
[2025-07-27 23:36:43,888] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a5f5f65f', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 11', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:36:43,888] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,888] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f5f8ec', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,890] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,890] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f5ff6a', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,891] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,891] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f60454', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,892] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,893] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f6090c', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,893] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,894] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f60d02', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,895] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,895] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f611d3', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,896] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,896] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f6167d', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,897] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,897] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f61b0d', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,898] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:36:43,898] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a5f61fa5', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,899] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:36:43,899] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a5f622ed', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:36:43,903] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 12
[2025-07-27 23:36:43,903] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a5f63339', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 12', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:36:43,904] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,904] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f63587', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,905] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,905] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f639ee', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,906] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,906] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f63e7c', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,907] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,907] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f642be', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,908] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,908] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f64746', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,909] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,910] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f64bc9', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,911] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,911] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f650a2', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,912] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,912] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f65532', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,913] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:36:43,913] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a5f65a04', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,914] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:36:43,914] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a5f65d76', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:36:43,918] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 13
[2025-07-27 23:36:43,918] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1759a5f66d1c', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 13', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-27 23:36:43,919] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,919] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f66fcd', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '1000000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,920] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,920] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f674ef', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0100000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,921] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,921] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f679f6', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0010000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,923] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,923] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f67f42', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0001000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,924] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,924] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f683f6', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000100000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,925] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,925] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f688ab', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000010000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,926] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,927] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f68df6', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000001000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,928] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); MIDI_Pipette, A1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-27 23:36:43,928] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1759a5f6940e', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1', 'channelVariable': '0000000100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,929] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-27 23:36:43,929] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1759a5f69952', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-27 23:36:43,930] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-27 23:36:43,930] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1759a5f69cd8', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-27 23:36:43,931] pyhamilton.interface INFO sending end run command to simulator
[2025-07-27 23:36:43,931] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-27 23:36:43,931] pyhamilton.interface INFO disconnected from server
[2025-07-27 23:36:44,032] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-27 23:36:44,032] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-27 23:36:44,035] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-27 23:36:44,037] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-27 23:36:44,038] pyhamilton.interface INFO dummy get request sent to server
[2025-07-27 23:36:44,039] pyhamilton.interface INFO server thread exited
[2025-07-28 09:47:37,095] root INFO ###########################################################################################################################
[2025-07-28 09:47:37,096] root INFO #                                                                                                                         #
[2025-07-28 09:47:37,096] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-28 09:47:37,096] root INFO #                                                                                                                         #
[2025-07-28 09:47:37,096] root INFO ###########################################################################################################################
[2025-07-28 09:47:37,096] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 09:47:37,098] pyhamilton.interface INFO running in simulation mode
[2025-07-28 09:47:37,098] pyhamilton.interface INFO started the server thread
[2025-07-28 09:47:37,098] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 09:47:37,110] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4
[2025-07-28 09:47:37,110] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17622ea9bed5', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1;TIP_50uLF_L_0001, 2;TIP_50uLF_L_0001, 3;TIP_50uLF_L_0001, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:47:38,762] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-28 09:47:39,917] pyhamilton.interface INFO aspirate: Aspirate volumes [0, 0, 0, 0] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-28 09:47:39,918] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed49710', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0, 0, 0, 0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:39,928] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-28 09:47:39,928] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17622ed4c0be', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 5;TIP_50uLF_L_0001, 6;TIP_50uLF_L_0001, 7;TIP_50uLF_L_0001, 8', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:47:39,928] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:39,928] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed4c183', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:39,929] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:39,930] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed4c605', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:39,931] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:47:39,931] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17622ed4cb0a', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:39,931] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:47:39,932] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17622ed4cdc3', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:47:39,941] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12
[2025-07-28 09:47:39,941] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17622ed4f207', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9;TIP_50uLF_L_0001, 10;TIP_50uLF_L_0001, 11;TIP_50uLF_L_0001, 12', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:47:39,941] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:39,941] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed4f323', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:39,942] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:39,942] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed4f5fe', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:39,942] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:47:39,943] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17622ed4f890', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:39,943] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:47:39,943] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17622ed4fae7', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:47:39,953] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16
[2025-07-28 09:47:39,953] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17622ed52163', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 13;TIP_50uLF_L_0001, 14;TIP_50uLF_L_0001, 15;TIP_50uLF_L_0001, 16', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:47:39,953] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:39,953] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed5222a', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:39,954] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:39,954] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed524f6', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:39,955] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:47:39,955] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17622ed527e5', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:39,955] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:47:39,955] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17622ed52a34', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:47:39,963] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 17; TIP_50uLF_L_0001, 18; TIP_50uLF_L_0001, 19; TIP_50uLF_L_0001, 20
[2025-07-28 09:47:39,964] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17622ed54a97', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 17;TIP_50uLF_L_0001, 18;TIP_50uLF_L_0001, 19;TIP_50uLF_L_0001, 20', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:47:39,964] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:39,964] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed54b4c', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:39,965] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:39,965] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed54fc3', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:39,966] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:47:39,966] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17622ed553de', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:39,966] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:47:39,967] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17622ed5567f', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:47:39,974] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 21; TIP_50uLF_L_0001, 22; TIP_50uLF_L_0001, 23; TIP_50uLF_L_0001, 24
[2025-07-28 09:47:39,974] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17622ed5741a', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 21;TIP_50uLF_L_0001, 22;TIP_50uLF_L_0001, 23;TIP_50uLF_L_0001, 24', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:47:39,974] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:39,974] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed574d6', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:39,975] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:39,975] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed57787', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:39,976] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:47:39,976] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17622ed579f8', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:39,976] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:47:39,976] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17622ed57c37', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:47:39,985] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 25; TIP_50uLF_L_0001, 26; TIP_50uLF_L_0001, 27; TIP_50uLF_L_0001, 28
[2025-07-28 09:47:39,986] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17622ed5a099', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 25;TIP_50uLF_L_0001, 26;TIP_50uLF_L_0001, 27;TIP_50uLF_L_0001, 28', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:47:39,986] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:39,986] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed5a14d', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:39,986] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:39,986] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed5a412', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:39,987] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:47:39,987] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17622ed5a6ab', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:39,988] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:47:39,988] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17622ed5a8e7', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:47:39,997] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 29; TIP_50uLF_L_0001, 30; TIP_50uLF_L_0001, 31; TIP_50uLF_L_0001, 32
[2025-07-28 09:47:39,997] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17622ed5ce9f', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 29;TIP_50uLF_L_0001, 30;TIP_50uLF_L_0001, 31;TIP_50uLF_L_0001, 32', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:47:39,998] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:39,998] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed5d037', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:39,999] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:39,999] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed5d3ec', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:39,999] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:47:39,999] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17622ed5d69e', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:40,000] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:47:40,000] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17622ed5da03', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:47:40,010] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 33; TIP_50uLF_L_0001, 34; TIP_50uLF_L_0001, 35; TIP_50uLF_L_0001, 36
[2025-07-28 09:47:40,010] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17622ed5fee1', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 33;TIP_50uLF_L_0001, 34;TIP_50uLF_L_0001, 35;TIP_50uLF_L_0001, 36', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:47:40,010] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:40,010] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed60027', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:40,011] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:40,011] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed60467', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:40,012] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:47:40,012] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17622ed608be', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:40,013] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:47:40,014] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17622ed60dcf', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:47:40,022] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 37; TIP_50uLF_L_0001, 38; TIP_50uLF_L_0001, 39; TIP_50uLF_L_0001, 40
[2025-07-28 09:47:40,022] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17622ed63092', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 37;TIP_50uLF_L_0001, 38;TIP_50uLF_L_0001, 39;TIP_50uLF_L_0001, 40', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:47:40,023] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:40,023] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed63151', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:40,023] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:40,023] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed63422', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:40,024] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:47:40,024] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17622ed636c5', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:40,024] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:47:40,025] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17622ed63906', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:47:40,033] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 41; TIP_50uLF_L_0001, 42; TIP_50uLF_L_0001, 43; TIP_50uLF_L_0001, 44
[2025-07-28 09:47:40,034] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17622ed65c4e', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 41;TIP_50uLF_L_0001, 42;TIP_50uLF_L_0001, 43;TIP_50uLF_L_0001, 44', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:47:40,034] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:40,034] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed65d95', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:40,035] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:40,035] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed6612f', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:40,035] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:47:40,036] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17622ed66405', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:40,036] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:47:40,036] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17622ed66661', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:47:40,044] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 45; TIP_50uLF_L_0001, 46; TIP_50uLF_L_0001, 47; TIP_50uLF_L_0001, 48
[2025-07-28 09:47:40,045] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17622ed686db', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 45;TIP_50uLF_L_0001, 46;TIP_50uLF_L_0001, 47;TIP_50uLF_L_0001, 48', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:47:40,045] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:40,045] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed68858', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:40,046] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:40,046] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed68ccc', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:40,047] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:47:40,047] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17622ed6908c', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:40,048] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:47:40,048] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17622ed6941b', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:47:40,058] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 49; TIP_50uLF_L_0001, 50; TIP_50uLF_L_0001, 51; TIP_50uLF_L_0001, 52
[2025-07-28 09:47:40,059] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17622ed6bdec', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 49;TIP_50uLF_L_0001, 50;TIP_50uLF_L_0001, 51;TIP_50uLF_L_0001, 52', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:47:40,059] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:40,059] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed6beab', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:40,059] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:47:40,060] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17622ed6c1bf', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:40,060] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:47:40,060] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17622ed6c42b', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:47:40,061] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:47:40,061] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17622ed6c67a', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:47:40,061] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 09:47:40,061] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-28 09:47:40,061] pyhamilton.interface INFO disconnected from server
[2025-07-28 09:47:40,162] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 09:47:40,162] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 09:47:40,168] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 09:47:40,172] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 09:47:40,173] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 09:47:40,173] pyhamilton.interface INFO server thread exited
[2025-07-28 09:53:31,920] root INFO ###########################################################################################################################
[2025-07-28 09:53:31,921] root INFO #                                                                                                                         #
[2025-07-28 09:53:31,921] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-28 09:53:31,921] root INFO #                                                                                                                         #
[2025-07-28 09:53:31,921] root INFO ###########################################################################################################################
[2025-07-28 09:53:31,921] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 09:53:31,922] pyhamilton.interface INFO running in simulation mode
[2025-07-28 09:53:31,922] pyhamilton.interface INFO started the server thread
[2025-07-28 09:53:31,922] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 09:53:31,935] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4
[2025-07-28 09:53:31,935] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x176243cff33a', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1;TIP_50uLF_L_0001, 2;TIP_50uLF_L_0001, 3;TIP_50uLF_L_0001, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:53:32,347] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-28 09:53:32,457] pyhamilton.interface INFO aspirate: Aspirate volumes [0, 0, 0, 0] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-28 09:53:32,457] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243d7e9c9', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0, 0, 0, 0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,469] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-28 09:53:32,470] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x176243d81ae1', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 5;TIP_50uLF_L_0001, 6;TIP_50uLF_L_0001, 7;TIP_50uLF_L_0001, 8', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:53:32,470] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,470] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243d81d4a', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,471] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,471] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243d82234', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,472] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:53:32,472] JSONLogger INFO {'command': 'channelDispense', 'id': '0x176243d825ef', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,473] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:53:32,473] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x176243d82876', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:53:32,483] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12
[2025-07-28 09:53:32,483] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x176243d84ef6', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9;TIP_50uLF_L_0001, 10;TIP_50uLF_L_0001, 11;TIP_50uLF_L_0001, 12', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:53:32,483] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,483] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243d8515d', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,484] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,485] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243d85602', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,486] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:53:32,486] JSONLogger INFO {'command': 'channelDispense', 'id': '0x176243d85a28', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,486] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:53:32,486] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x176243d85ca9', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:53:32,495] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16
[2025-07-28 09:53:32,495] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x176243d87fc1', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 13;TIP_50uLF_L_0001, 14;TIP_50uLF_L_0001, 15;TIP_50uLF_L_0001, 16', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:53:32,496] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,496] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243d8835f', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,497] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,498] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243d88876', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,498] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:53:32,498] JSONLogger INFO {'command': 'channelDispense', 'id': '0x176243d88c12', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,499] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:53:32,499] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x176243d88e97', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:53:32,508] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 17; TIP_50uLF_L_0001, 18; TIP_50uLF_L_0001, 19; TIP_50uLF_L_0001, 20
[2025-07-28 09:53:32,508] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x176243d8b0b9', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 17;TIP_50uLF_L_0001, 18;TIP_50uLF_L_0001, 19;TIP_50uLF_L_0001, 20', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:53:32,508] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,508] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243d8b2dd', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,509] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,510] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243d8b7bd', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,510] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:53:32,511] JSONLogger INFO {'command': 'channelDispense', 'id': '0x176243d8bb6c', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,511] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:53:32,512] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x176243d8bf15', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:53:32,521] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 21; TIP_50uLF_L_0001, 22; TIP_50uLF_L_0001, 23; TIP_50uLF_L_0001, 24
[2025-07-28 09:53:32,521] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x176243d8e5da', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 21;TIP_50uLF_L_0001, 22;TIP_50uLF_L_0001, 23;TIP_50uLF_L_0001, 24', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:53:32,523] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,523] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243d8eb5d', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,524] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,524] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243d8f077', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,525] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:53:32,525] JSONLogger INFO {'command': 'channelDispense', 'id': '0x176243d8f54a', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,526] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:53:32,526] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x176243d8f814', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:53:32,537] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 25; TIP_50uLF_L_0001, 26; TIP_50uLF_L_0001, 27; TIP_50uLF_L_0001, 28
[2025-07-28 09:53:32,537] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x176243d9217c', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 25;TIP_50uLF_L_0001, 26;TIP_50uLF_L_0001, 27;TIP_50uLF_L_0001, 28', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:53:32,537] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,537] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243d92337', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,538] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,538] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243d92736', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,539] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:53:32,539] JSONLogger INFO {'command': 'channelDispense', 'id': '0x176243d92b4b', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,540] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:53:32,540] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x176243d92e14', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:53:32,550] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 29; TIP_50uLF_L_0001, 30; TIP_50uLF_L_0001, 31; TIP_50uLF_L_0001, 32
[2025-07-28 09:53:32,550] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x176243d956a2', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 29;TIP_50uLF_L_0001, 30;TIP_50uLF_L_0001, 31;TIP_50uLF_L_0001, 32', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:53:32,551] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,551] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243d95878', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,552] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,552] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243d95e14', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,553] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:53:32,553] JSONLogger INFO {'command': 'channelDispense', 'id': '0x176243d9618d', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,554] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:53:32,554] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x176243d96500', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:53:32,562] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 33; TIP_50uLF_L_0001, 34; TIP_50uLF_L_0001, 35; TIP_50uLF_L_0001, 36
[2025-07-28 09:53:32,562] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x176243d983dd', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 33;TIP_50uLF_L_0001, 34;TIP_50uLF_L_0001, 35;TIP_50uLF_L_0001, 36', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:53:32,562] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,563] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243d986c7', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,564] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,564] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243d98ac5', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,564] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:53:32,565] JSONLogger INFO {'command': 'channelDispense', 'id': '0x176243d98e64', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,565] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:53:32,565] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x176243d99125', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:53:32,574] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 37; TIP_50uLF_L_0001, 38; TIP_50uLF_L_0001, 39; TIP_50uLF_L_0001, 40
[2025-07-28 09:53:32,574] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x176243d9b21f', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 37;TIP_50uLF_L_0001, 38;TIP_50uLF_L_0001, 39;TIP_50uLF_L_0001, 40', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:53:32,574] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,574] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243d9b40d', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,575] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,575] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243d9b76c', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,576] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:53:32,576] JSONLogger INFO {'command': 'channelDispense', 'id': '0x176243d9bab3', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,576] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:53:32,577] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x176243d9bd38', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:53:32,585] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 41; TIP_50uLF_L_0001, 42; TIP_50uLF_L_0001, 43; TIP_50uLF_L_0001, 44
[2025-07-28 09:53:32,585] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x176243d9def3', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 41;TIP_50uLF_L_0001, 42;TIP_50uLF_L_0001, 43;TIP_50uLF_L_0001, 44', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:53:32,586] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,586] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243d9e10d', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,587] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,587] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243d9e482', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,587] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:53:32,588] JSONLogger INFO {'command': 'channelDispense', 'id': '0x176243d9e810', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,588] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:53:32,588] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x176243d9ea8e', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:53:32,597] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 45; TIP_50uLF_L_0001, 46; TIP_50uLF_L_0001, 47; TIP_50uLF_L_0001, 48
[2025-07-28 09:53:32,598] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x176243da0efd', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 45;TIP_50uLF_L_0001, 46;TIP_50uLF_L_0001, 47;TIP_50uLF_L_0001, 48', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:53:32,598] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,598] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243da117c', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,600] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,600] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243da1800', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,601] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:53:32,601] JSONLogger INFO {'command': 'channelDispense', 'id': '0x176243da1c89', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,602] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:53:32,602] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x176243da1f79', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:53:32,610] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 49; TIP_50uLF_L_0001, 50; TIP_50uLF_L_0001, 51; TIP_50uLF_L_0001, 52
[2025-07-28 09:53:32,610] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x176243da3ef1', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 49;TIP_50uLF_L_0001, 50;TIP_50uLF_L_0001, 51;TIP_50uLF_L_0001, 52', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:53:32,610] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,610] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243da40ee', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,611] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:53:32,611] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176243da4464', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,612] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:53:32,612] JSONLogger INFO {'command': 'channelDispense', 'id': '0x176243da47fd', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:53:32,613] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:53:32,613] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x176243da4b1a', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:53:32,613] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 09:53:32,613] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-28 09:53:32,613] pyhamilton.interface INFO disconnected from server
[2025-07-28 09:53:32,714] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 09:53:32,714] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 09:53:32,717] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 09:53:32,719] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 09:53:32,720] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 09:53:32,721] pyhamilton.interface INFO server thread exited
[2025-07-28 09:54:08,341] root INFO ###########################################################################################################################
[2025-07-28 09:54:08,341] root INFO #                                                                                                                         #
[2025-07-28 09:54:08,341] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-28 09:54:08,341] root INFO #                                                                                                                         #
[2025-07-28 09:54:08,341] root INFO ###########################################################################################################################
[2025-07-28 09:54:08,342] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 09:54:08,342] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 09:54:08,342] pyhamilton.interface INFO started the server thread
[2025-07-28 09:54:08,342] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 09:54:08,361] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4
[2025-07-28 09:54:08,361] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x176245fbc4a0', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1;TIP_50uLF_L_0001, 2;TIP_50uLF_L_0001, 3;TIP_50uLF_L_0001, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:54:08,876] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-28 09:54:09,021] pyhamilton.interface INFO aspirate: Aspirate volumes [0, 0, 0, 0] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-28 09:54:09,022] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624605d88f', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0, 0, 0, 0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,037] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-28 09:54:09,038] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17624606177d', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 5;TIP_50uLF_L_0001, 6;TIP_50uLF_L_0001, 7;TIP_50uLF_L_0001, 8', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:54:09,038] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,038] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176246061945', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,039] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,039] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176246061d39', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,040] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:54:09,040] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17624606209c', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,041] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:54:09,041] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x176246062369', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:54:09,050] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12
[2025-07-28 09:54:09,050] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1762460646d0', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9;TIP_50uLF_L_0001, 10;TIP_50uLF_L_0001, 11;TIP_50uLF_L_0001, 12', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:54:09,050] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,050] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1762460648c4', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,051] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,051] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176246064cac', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,052] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:54:09,052] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17624606504a', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,053] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:54:09,053] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1762460652da', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:54:09,061] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16
[2025-07-28 09:54:09,061] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17624606717d', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 13;TIP_50uLF_L_0001, 14;TIP_50uLF_L_0001, 15;TIP_50uLF_L_0001, 16', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:54:09,061] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,061] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176246067390', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,062] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,063] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176246067872', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,064] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:54:09,064] JSONLogger INFO {'command': 'channelDispense', 'id': '0x176246067da5', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,064] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:54:09,065] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17624606803c', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:54:09,073] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 17; TIP_50uLF_L_0001, 18; TIP_50uLF_L_0001, 19; TIP_50uLF_L_0001, 20
[2025-07-28 09:54:09,073] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17624606a1dd', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 17;TIP_50uLF_L_0001, 18;TIP_50uLF_L_0001, 19;TIP_50uLF_L_0001, 20', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:54:09,074] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,074] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624606a42a', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,075] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,075] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624606a80f', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,075] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:54:09,076] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17624606ab85', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,076] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:54:09,076] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17624606ae2a', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:54:09,086] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 21; TIP_50uLF_L_0001, 22; TIP_50uLF_L_0001, 23; TIP_50uLF_L_0001, 24
[2025-07-28 09:54:09,086] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17624606d46e', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 21;TIP_50uLF_L_0001, 22;TIP_50uLF_L_0001, 23;TIP_50uLF_L_0001, 24', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:54:09,087] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,087] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624606d786', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,088] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,088] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624606db37', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,089] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:54:09,089] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17624606dece', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,089] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:54:09,089] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17624606e139', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:54:09,099] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 25; TIP_50uLF_L_0001, 26; TIP_50uLF_L_0001, 27; TIP_50uLF_L_0001, 28
[2025-07-28 09:54:09,100] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x176246070925', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 25;TIP_50uLF_L_0001, 26;TIP_50uLF_L_0001, 27;TIP_50uLF_L_0001, 28', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:54:09,100] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,100] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176246070b91', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,101] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,102] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176246071099', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,102] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:54:09,102] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17624607143b', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,103] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:54:09,103] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1762460716a1', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:54:09,111] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 29; TIP_50uLF_L_0001, 30; TIP_50uLF_L_0001, 31; TIP_50uLF_L_0001, 32
[2025-07-28 09:54:09,112] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17624607382e', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 29;TIP_50uLF_L_0001, 30;TIP_50uLF_L_0001, 31;TIP_50uLF_L_0001, 32', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:54:09,112] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,112] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176246073a7c', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,114] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,114] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1762460740c1', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,115] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:54:09,115] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17624607450b', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,116] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:54:09,116] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x176246074a00', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:54:09,125] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 33; TIP_50uLF_L_0001, 34; TIP_50uLF_L_0001, 35; TIP_50uLF_L_0001, 36
[2025-07-28 09:54:09,125] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x176246076d16', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 33;TIP_50uLF_L_0001, 34;TIP_50uLF_L_0001, 35;TIP_50uLF_L_0001, 36', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:54:09,126] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,126] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176246076f41', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,126] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,127] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624607729b', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,127] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:54:09,127] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17624607760d', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,128] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:54:09,128] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1762460778ed', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:54:09,140] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 37; TIP_50uLF_L_0001, 38; TIP_50uLF_L_0001, 39; TIP_50uLF_L_0001, 40
[2025-07-28 09:54:09,140] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17624607a5c5', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 37;TIP_50uLF_L_0001, 38;TIP_50uLF_L_0001, 39;TIP_50uLF_L_0001, 40', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:54:09,140] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,140] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624607a7a7', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,141] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,141] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624607ab40', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,142] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:54:09,142] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17624607aeb9', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,143] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:54:09,143] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17624607b16e', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:54:09,155] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 41; TIP_50uLF_L_0001, 42; TIP_50uLF_L_0001, 43; TIP_50uLF_L_0001, 44
[2025-07-28 09:54:09,155] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17624607e1d4', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 41;TIP_50uLF_L_0001, 42;TIP_50uLF_L_0001, 43;TIP_50uLF_L_0001, 44', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:54:09,155] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,156] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624607e3d8', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,156] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,157] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624607e7e3', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,158] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:54:09,158] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17624607ed60', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,159] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:54:09,159] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17624607f029', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:54:09,171] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 45; TIP_50uLF_L_0001, 46; TIP_50uLF_L_0001, 47; TIP_50uLF_L_0001, 48
[2025-07-28 09:54:09,171] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x176246081f7c', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 45;TIP_50uLF_L_0001, 46;TIP_50uLF_L_0001, 47;TIP_50uLF_L_0001, 48', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:54:09,171] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,171] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624608210b', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,172] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,172] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624608257f', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,173] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:54:09,173] JSONLogger INFO {'command': 'channelDispense', 'id': '0x176246082998', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,174] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:54:09,174] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x176246082c60', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:54:09,186] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 49; TIP_50uLF_L_0001, 50; TIP_50uLF_L_0001, 51; TIP_50uLF_L_0001, 52
[2025-07-28 09:54:09,186] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17624608598f', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 49;TIP_50uLF_L_0001, 50;TIP_50uLF_L_0001, 51;TIP_50uLF_L_0001, 52', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:54:09,186] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,186] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176246085b97', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,187] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:54:09,187] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176246085f81', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,188] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:54:09,188] JSONLogger INFO {'command': 'channelDispense', 'id': '0x176246086337', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:54:09,189] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:54:09,189] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1762460865fe', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:54:09,189] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 09:54:09,189] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-28 09:54:09,189] pyhamilton.interface INFO disconnected from server
[2025-07-28 09:54:09,290] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 09:54:09,291] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 09:54:09,296] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 09:54:09,298] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 09:54:09,299] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 09:54:09,299] pyhamilton.interface INFO server thread exited
[2025-07-28 09:55:06,840] root INFO ###########################################################################################################################
[2025-07-28 09:55:06,841] root INFO #                                                                                                                         #
[2025-07-28 09:55:06,841] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-28 09:55:06,841] root INFO #                                                                                                                         #
[2025-07-28 09:55:06,841] root INFO ###########################################################################################################################
[2025-07-28 09:55:06,841] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 09:55:06,842] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 09:55:06,842] pyhamilton.interface INFO started the server thread
[2025-07-28 09:55:06,842] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 09:55:06,858] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4
[2025-07-28 09:55:06,859] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x176249785e58', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1;TIP_50uLF_L_0001, 2;TIP_50uLF_L_0001, 3;TIP_50uLF_L_0001, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:55:07,404] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-28 09:55:07,517] pyhamilton.interface INFO aspirate: Aspirate volumes [0, 0, 0, 0] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-28 09:55:07,517] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176249826904', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [0, 0, 0, 0], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,538] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-28 09:55:07,538] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17624982bb29', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 5;TIP_50uLF_L_0001, 6;TIP_50uLF_L_0001, 7;TIP_50uLF_L_0001, 8', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:55:07,538] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,538] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624982bd14', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,539] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,539] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624982c19b', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,540] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:55:07,540] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17624982c59a', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,541] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:55:07,541] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17624982c7e5', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:55:07,551] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12
[2025-07-28 09:55:07,551] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17624982ef91', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9;TIP_50uLF_L_0001, 10;TIP_50uLF_L_0001, 11;TIP_50uLF_L_0001, 12', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:55:07,552] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,552] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624982f218', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,553] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,553] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624982f584', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,553] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:55:07,554] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17624982f8e1', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,554] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:55:07,554] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17624982fb05', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:55:07,566] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16
[2025-07-28 09:55:07,566] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x176249832b26', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 13;TIP_50uLF_L_0001, 14;TIP_50uLF_L_0001, 15;TIP_50uLF_L_0001, 16', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:55:07,567] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,568] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1762498330e0', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,569] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,569] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176249833559', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,570] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:55:07,570] JSONLogger INFO {'command': 'channelDispense', 'id': '0x176249833870', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,570] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:55:07,570] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x176249833a9d', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:55:07,579] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 17; TIP_50uLF_L_0001, 18; TIP_50uLF_L_0001, 19; TIP_50uLF_L_0001, 20
[2025-07-28 09:55:07,579] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x176249835cb2', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 17;TIP_50uLF_L_0001, 18;TIP_50uLF_L_0001, 19;TIP_50uLF_L_0001, 20', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:55:07,580] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,580] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176249836010', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,581] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,581] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176249836522', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,582] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:55:07,582] JSONLogger INFO {'command': 'channelDispense', 'id': '0x176249836913', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,583] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:55:07,583] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x176249836c2c', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:55:07,590] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 21; TIP_50uLF_L_0001, 22; TIP_50uLF_L_0001, 23; TIP_50uLF_L_0001, 24
[2025-07-28 09:55:07,590] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1762498388bc', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 21;TIP_50uLF_L_0001, 22;TIP_50uLF_L_0001, 23;TIP_50uLF_L_0001, 24', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:55:07,591] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,591] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176249838b56', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,592] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,592] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176249839075', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,593] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:55:07,594] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17624983951c', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,594] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:55:07,594] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1762498398ce', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:55:07,604] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 25; TIP_50uLF_L_0001, 26; TIP_50uLF_L_0001, 27; TIP_50uLF_L_0001, 28
[2025-07-28 09:55:07,604] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17624983bf50', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 25;TIP_50uLF_L_0001, 26;TIP_50uLF_L_0001, 27;TIP_50uLF_L_0001, 28', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:55:07,605] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,605] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624983c106', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,606] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,606] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624983c4b6', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,607] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:55:07,607] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17624983c8d0', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,607] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:55:07,607] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17624983cb3a', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:55:07,620] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 29; TIP_50uLF_L_0001, 30; TIP_50uLF_L_0001, 31; TIP_50uLF_L_0001, 32
[2025-07-28 09:55:07,620] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17624983fe5b', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 29;TIP_50uLF_L_0001, 30;TIP_50uLF_L_0001, 31;TIP_50uLF_L_0001, 32', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:55:07,621] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,621] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624984010f', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,622] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,622] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1762498404dd', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,623] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:55:07,623] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17624984094e', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,624] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:55:07,624] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x176249840d97', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:55:07,636] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 33; TIP_50uLF_L_0001, 34; TIP_50uLF_L_0001, 35; TIP_50uLF_L_0001, 36
[2025-07-28 09:55:07,636] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x176249843b54', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 33;TIP_50uLF_L_0001, 34;TIP_50uLF_L_0001, 35;TIP_50uLF_L_0001, 36', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:55:07,637] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,637] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176249843e24', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,638] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,638] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624984442c', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,639] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:55:07,639] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17624984486b', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,640] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:55:07,640] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x176249844bea', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:55:07,652] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 37; TIP_50uLF_L_0001, 38; TIP_50uLF_L_0001, 39; TIP_50uLF_L_0001, 40
[2025-07-28 09:55:07,653] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x176249847b9a', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 37;TIP_50uLF_L_0001, 38;TIP_50uLF_L_0001, 39;TIP_50uLF_L_0001, 40', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:55:07,653] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,653] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176249847d64', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,654] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,654] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x1762498480d6', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,654] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:55:07,655] JSONLogger INFO {'command': 'channelDispense', 'id': '0x1762498483c7', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,655] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:55:07,655] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x1762498485f5', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:55:07,665] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 41; TIP_50uLF_L_0001, 42; TIP_50uLF_L_0001, 43; TIP_50uLF_L_0001, 44
[2025-07-28 09:55:07,665] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17624984ab53', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 41;TIP_50uLF_L_0001, 42;TIP_50uLF_L_0001, 43;TIP_50uLF_L_0001, 44', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:55:07,665] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,665] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624984ace4', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,666] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,666] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624984b037', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,667] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:55:07,667] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17624984b351', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,667] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:55:07,667] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17624984b593', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:55:07,675] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 45; TIP_50uLF_L_0001, 46; TIP_50uLF_L_0001, 47; TIP_50uLF_L_0001, 48
[2025-07-28 09:55:07,675] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17624984d495', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 45;TIP_50uLF_L_0001, 46;TIP_50uLF_L_0001, 47;TIP_50uLF_L_0001, 48', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:55:07,676] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,676] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624984d6fc', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,677] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,677] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17624984db1a', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,678] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:55:07,678] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17624984df2b', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,679] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:55:07,679] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17624984e21f', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:55:07,687] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 49; TIP_50uLF_L_0001, 50; TIP_50uLF_L_0001, 51; TIP_50uLF_L_0001, 52
[2025-07-28 09:55:07,687] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1762498501c8', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 49;TIP_50uLF_L_0001, 50;TIP_50uLF_L_0001, 51;TIP_50uLF_L_0001, 52', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-28 09:55:07,687] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, None, None, None, None] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,688] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176249850438', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '1111000000000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,689] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, 50, 50, 50] from positions [(skip); (skip); (skip); (skip); RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:55:07,689] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x176249850919', 'aspirateSequence': '', 'labwarePositions': 'RGT_Beads, 1;RGT_Beads, 2;RGT_Beads, 3;RGT_Beads, 4', 'channelVariable': '0000111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 5, 'pressureLLD': 0, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,690] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 09:55:07,690] JSONLogger INFO {'command': 'channelDispense', 'id': '0x176249850cfc', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 2, 'liquidFollowing': False, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-28 09:55:07,690] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 09:55:07,690] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x176249850faf', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-28 09:55:07,691] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 09:55:07,691] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-28 09:55:07,691] pyhamilton.interface INFO disconnected from server
[2025-07-28 09:55:07,791] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 09:55:07,792] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 09:55:07,795] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 09:55:07,797] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 09:55:07,798] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 09:55:07,798] pyhamilton.interface INFO server thread exited
[2025-07-28 09:55:50,100] root INFO ###########################################################################################################################
[2025-07-28 09:55:50,101] root INFO #                                                                                                                         #
[2025-07-28 09:55:50,101] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-28 09:55:50,101] root INFO #                                                                                                                         #
[2025-07-28 09:55:50,101] root INFO ###########################################################################################################################
[2025-07-28 09:55:50,102] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 09:55:50,102] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 09:55:50,103] pyhamilton.interface INFO started the server thread
[2025-07-28 09:55:50,104] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 09:55:50,127] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4
[2025-07-28 09:55:52,191] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-28 09:55:52,372] pyhamilton.interface INFO aspirate: Aspirate volumes [0, 0, 0, 0] from positions [RGT_Beads, 1; RGT_Beads, 2; RGT_Beads, 3; RGT_Beads, 4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-28 09:56:19,507] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 09:56:19,693] pyhamilton.interface INFO disconnected from server
[2025-07-28 09:56:19,794] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 09:56:19,795] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 09:56:19,800] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 09:56:19,803] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 09:56:19,804] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 09:56:19,805] pyhamilton.interface INFO server thread exited
[2025-07-28 09:56:19,816] root ERROR Traceback (most recent call last):
[2025-07-28 09:56:19,822] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 35, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 09:56:19,822] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 121, in pip_transfer    troughs, performed_additional_volume_transfer = manage_multiple_troughs(ham_int, source_positions, total_volume_needed, liquid_class, 0, 0, check_volumes=True)                                                    ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 09:56:19,823] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\trough_manager.py", line 40, in manage_multiple_troughs    trough = select_trough(ham_int, aspiration_positions, volume, liquid_class, prealiquot_volume, postaliquot_volume)
[2025-07-28 09:56:19,823] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\trough_manager.py", line 20, in select_trough    trough_volumes = check_volumes_in_troughs(ham_int, aspiration_positions, liquid_class)
[2025-07-28 09:56:19,823] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\trough_manager.py", line 13, in check_volumes_in_troughs    response = ham_int.aspirate(trough_positions, vols, liquidClass=liquid_class, capacitiveLLD=1)
[2025-07-28 09:56:19,823] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 808, in aspirate    response = self.wait_on_response(        self.send_command(    ...<7 lines>...        return_data=['step-return2', 'step-return3']    )
[2025-07-28 09:56:19,823] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 668, in wait_on_response    for _ in wait(delays=delays, timeout=timeout):             ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 09:56:19,824] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\waiter\__init__.py", line 91, in __iter__    time.sleep(min(delay, remaining))    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 09:56:19,824] root ERROR KeyboardInterrupt
[2025-07-28 09:56:19,824] root ERROR During handling of the above exception, another exception occurred:
[2025-07-28 09:56:19,825] root ERROR Traceback (most recent call last):
[2025-07-28 09:56:19,828] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 26, in <module>    with HamiltonInterface(windowed=True, simulating=False) as ham_int:         ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 09:56:19,828] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 588, in __exit__    self.stop()    ~~~~~~~~~^^
[2025-07-28 09:56:19,829] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 552, in stop    self.wait_on_response(self.send_command(command='end', id=hex(0)), timeout=1.5)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 09:56:19,829] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 668, in wait_on_response    for _ in wait(delays=delays, timeout=timeout):             ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 09:56:19,829] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\waiter\__init__.py", line 91, in __iter__    time.sleep(min(delay, remaining))    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 09:56:19,830] root ERROR KeyboardInterrupt
[2025-07-28 09:59:48,448] root INFO ###########################################################################################################################
[2025-07-28 09:59:48,449] root INFO #                                                                                                                         #
[2025-07-28 09:59:48,449] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-28 09:59:48,450] root INFO #                                                                                                                         #
[2025-07-28 09:59:48,450] root INFO ###########################################################################################################################
[2025-07-28 09:59:48,451] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 09:59:48,451] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 09:59:48,452] pyhamilton.interface INFO started the server thread
[2025-07-28 09:59:48,452] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 09:59:48,460] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1
[2025-07-28 09:59:51,410] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-28 09:59:51,597] pyhamilton.interface INFO aspirate: Aspirate volumes [0] from positions [rgt_cont_60ml_BC_A00_0001, 1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-28 09:59:53,611] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 2
[2025-07-28 09:59:54,613] pyhamilton.interface INFO aspirate: Aspirate volumes [50, None, None, None, None, None, None, None] from positions [rgt_cont_60ml_BC_A00_0001, 1; (skip); (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:59:56,618] pyhamilton.interface INFO aspirate: Aspirate volumes [None, 50, None, None, None, None, None, None] from positions [(skip); rgt_cont_60ml_BC_A00_0001, 1; (skip); (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:59:58,624] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, 50, None, None, None, None, None] from positions [(skip); (skip); rgt_cont_60ml_BC_A00_0001, 1; (skip); (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 09:59:59,627] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, 50, None, None, None, None] from positions [(skip); (skip); (skip); rgt_cont_60ml_BC_A00_0001, 1; (skip); (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 10:00:01,632] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, 50, None, None, None] from positions [(skip); (skip); (skip); (skip); rgt_cont_60ml_BC_A00_0001, 1; (skip); (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 10:00:03,636] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, 50, None, None] from positions [(skip); (skip); (skip); (skip); (skip); rgt_cont_60ml_BC_A00_0001, 1; (skip); (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 10:00:04,639] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, 50, None] from positions [(skip); (skip); (skip); (skip); (skip); (skip); rgt_cont_60ml_BC_A00_0001, 1; (skip)] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 10:00:09,644] pyhamilton.interface INFO aspirate: Aspirate volumes [None, None, None, None, None, None, None, 50] from positions [(skip); (skip); (skip); (skip); (skip); (skip); (skip); rgt_cont_60ml_BC_A00_0001, 1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 10:00:11,649] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 10:00:13,653] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 10:00:15,155] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 10:00:15,155] pyhamilton.interface INFO disconnected from server
[2025-07-28 10:00:15,256] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 10:00:15,256] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 10:00:15,261] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 10:00:15,264] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 10:00:15,264] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 10:00:15,265] pyhamilton.interface INFO server thread exited
[2025-07-28 10:00:15,268] root ERROR Traceback (most recent call last):
[2025-07-28 10:00:15,269] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 35, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:00:15,270] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 155, in pip_transfer    dispense_heights = response.liquidHeights                       ^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:00:15,270] root ERROR AttributeError: 'HamiltonResponse' object has no attribute 'liquidHeights'
[2025-07-28 10:05:47,433] root INFO ###########################################################################################################################
[2025-07-28 10:05:47,433] root INFO #                                                                                                                         #
[2025-07-28 10:05:47,433] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-28 10:05:47,433] root INFO #                                                                                                                         #
[2025-07-28 10:05:47,433] root INFO ###########################################################################################################################
[2025-07-28 10:05:47,434] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 10:05:47,434] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 10:05:47,435] pyhamilton.interface INFO started the server thread
[2025-07-28 10:05:47,435] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 10:05:47,470] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-28 10:05:49,334] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-28 10:05:49,475] pyhamilton.interface INFO aspirate: Aspirate volumes [0, 0, 0, 0, 0, 0, 0, 0] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-28 10:05:52,480] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 10:05:53,981] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 10:05:53,982] pyhamilton.interface INFO disconnected from server
[2025-07-28 10:05:54,083] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 10:05:54,084] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 10:05:54,088] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 10:05:54,089] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 10:05:54,090] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 10:05:54,090] pyhamilton.interface INFO server thread exited
[2025-07-28 10:05:54,093] root ERROR Traceback (most recent call last):
[2025-07-28 10:05:54,094] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 35, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:05:54,095] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 121, in pip_transfer    troughs, performed_additional_volume_transfer = manage_multiple_troughs(ham_int, source_positions, total_volume_needed, liquid_class, 0, 0, check_volumes=True)                                                    ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:05:54,095] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\trough_manager.py", line 40, in manage_multiple_troughs    trough = select_trough(ham_int, aspiration_positions, volume, liquid_class, prealiquot_volume, postaliquot_volume)
[2025-07-28 10:05:54,095] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\trough_manager.py", line 20, in select_trough    trough_volumes = check_volumes_in_troughs(ham_int, aspiration_positions, liquid_class)
[2025-07-28 10:05:54,095] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\trough_manager.py", line 13, in check_volumes_in_troughs    response = ham_int.aspirate(trough_positions, vols, liquidClass=liquid_class, capacitiveLLD=1)
[2025-07-28 10:05:54,095] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 838, in aspirate    liquidVolumes=float(response.return_data[1]),                  ~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:05:54,095] root ERROR ValueError: could not convert string to float: '-29.00653;-28.95292;-28.89930;-28.84568;-28.79207;-28.73845;-28.68484;-28.63122'
[2025-07-28 10:17:04,900] root INFO ###########################################################################################################################
[2025-07-28 10:17:04,900] root INFO #                                                                                                                         #
[2025-07-28 10:17:04,900] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-28 10:17:04,901] root INFO #                                                                                                                         #
[2025-07-28 10:17:04,901] root INFO ###########################################################################################################################
[2025-07-28 10:17:04,901] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 10:17:04,902] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 10:17:04,902] pyhamilton.interface INFO started the server thread
[2025-07-28 10:17:04,902] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 10:17:04,936] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-28 10:17:06,876] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-28 10:17:07,059] pyhamilton.interface INFO aspirate: Aspirate volumes [0, 0, 0, 0, 0, 0, 0, 0] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-28 10:17:10,065] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 10:17:11,566] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 10:17:11,566] pyhamilton.interface INFO disconnected from server
[2025-07-28 10:17:11,667] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 10:17:11,668] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 10:17:11,672] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 10:17:11,675] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 10:17:11,675] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 10:17:11,676] pyhamilton.interface INFO server thread exited
[2025-07-28 10:17:11,679] root ERROR Traceback (most recent call last):
[2025-07-28 10:17:11,681] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 34, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:17:11,682] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 121, in pip_transfer    troughs, performed_additional_volume_transfer = manage_multiple_troughs(ham_int, source_positions, total_volume_needed, liquid_class, 0, 0, check_volumes=True)                                                    ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:17:11,683] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\trough_manager.py", line 40, in manage_multiple_troughs    trough = select_trough(ham_int, aspiration_positions, volume, liquid_class, prealiquot_volume, postaliquot_volume)
[2025-07-28 10:17:11,683] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\trough_manager.py", line 20, in select_trough    trough_volumes = check_volumes_in_troughs(ham_int, aspiration_positions, liquid_class)
[2025-07-28 10:17:11,684] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\trough_manager.py", line 15, in check_volumes_in_troughs    volume = min(response.liquidVolumes[0]) if type(response.liquidVolumes) is list else response.liquidVolumes             ~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:17:11,685] root ERROR TypeError: 'float' object is not iterable
[2025-07-28 10:18:37,680] root INFO ###########################################################################################################################
[2025-07-28 10:18:37,681] root INFO #                                                                                                                         #
[2025-07-28 10:18:37,681] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-28 10:18:37,681] root INFO #                                                                                                                         #
[2025-07-28 10:18:37,681] root INFO ###########################################################################################################################
[2025-07-28 10:18:37,683] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 10:18:37,683] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 10:18:37,684] pyhamilton.interface INFO started the server thread
[2025-07-28 10:18:37,684] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 10:18:37,716] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-28 10:18:40,791] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-28 10:18:41,061] pyhamilton.interface INFO aspirate: Aspirate volumes [0, 0, 0, 0, 0, 0, 0, 0] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-28 10:18:43,065] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 10:18:44,566] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 10:18:44,567] pyhamilton.interface INFO disconnected from server
[2025-07-28 10:18:44,667] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 10:18:44,668] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 10:18:44,673] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 10:18:44,675] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 10:18:44,676] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 10:18:44,677] pyhamilton.interface INFO server thread exited
[2025-07-28 10:18:44,680] root ERROR Traceback (most recent call last):
[2025-07-28 10:18:44,682] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 34, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:18:44,682] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 121, in pip_transfer    troughs, performed_additional_volume_transfer = manage_multiple_troughs(ham_int, source_positions, total_volume_needed, liquid_class, 0, 0, check_volumes=True)                                                    ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:18:44,682] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\trough_manager.py", line 40, in manage_multiple_troughs    trough = select_trough(ham_int, aspiration_positions, volume, liquid_class, prealiquot_volume, postaliquot_volume)
[2025-07-28 10:18:44,683] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\trough_manager.py", line 20, in select_trough    trough_volumes = check_volumes_in_troughs(ham_int, aspiration_positions, liquid_class)
[2025-07-28 10:18:44,683] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\trough_manager.py", line 15, in check_volumes_in_troughs    volume = min(response.liquidVolumes[0]) if type(response.liquidVolumes) is list else response.liquidVolumes             ~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:18:44,683] root ERROR TypeError: 'float' object is not iterable
[2025-07-28 10:19:53,028] root INFO ###########################################################################################################################
[2025-07-28 10:19:53,030] root INFO #                                                                                                                         #
[2025-07-28 10:19:53,030] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-28 10:19:53,030] root INFO #                                                                                                                         #
[2025-07-28 10:19:53,031] root INFO ###########################################################################################################################
[2025-07-28 10:19:53,032] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 10:19:53,034] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 10:19:53,034] pyhamilton.interface INFO started the server thread
[2025-07-28 10:19:53,035] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 10:19:53,093] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-28 10:19:56,246] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-28 10:19:56,412] pyhamilton.interface INFO aspirate: Aspirate volumes [0, 0, 0, 0, 0, 0, 0, 0] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-28 10:19:58,449] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12; TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16
[2025-07-28 10:19:59,457] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 10:20:01,462] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 10:20:03,467] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 10:20:04,529] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 17; TIP_50uLF_L_0001, 18; TIP_50uLF_L_0001, 19; TIP_50uLF_L_0001, 20; TIP_50uLF_L_0001, 21; TIP_50uLF_L_0001, 22; TIP_50uLF_L_0001, 23; TIP_50uLF_L_0001, 24
[2025-07-28 10:20:05,533] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 10:20:07,539] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 10:20:09,542] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 10:20:10,575] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 25; TIP_50uLF_L_0001, 26; TIP_50uLF_L_0001, 27; TIP_50uLF_L_0001, 28; TIP_50uLF_L_0001, 29; TIP_50uLF_L_0001, 30; TIP_50uLF_L_0001, 31; TIP_50uLF_L_0001, 32
[2025-07-28 10:20:14,579] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 10:20:16,584] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 10:20:18,588] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 10:20:19,622] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 33; TIP_50uLF_L_0001, 34; TIP_50uLF_L_0001, 35; TIP_50uLF_L_0001, 36; TIP_50uLF_L_0001, 37; TIP_50uLF_L_0001, 38; TIP_50uLF_L_0001, 39; TIP_50uLF_L_0001, 40
[2025-07-28 10:20:20,624] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 10:20:22,629] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 10:20:24,634] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 10:20:25,677] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 41; TIP_50uLF_L_0001, 42; TIP_50uLF_L_0001, 43; TIP_50uLF_L_0001, 44; TIP_50uLF_L_0001, 45; TIP_50uLF_L_0001, 46; TIP_50uLF_L_0001, 47; TIP_50uLF_L_0001, 48
[2025-07-28 10:20:26,680] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 10:20:28,683] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-07-28 10:20:31,686] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-28 10:20:33,717] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 49; TIP_50uLF_L_0001, 50; TIP_50uLF_L_0001, 51; TIP_50uLF_L_0001, 52; TIP_50uLF_L_0001, 53; TIP_50uLF_L_0001, 54; TIP_50uLF_L_0001, 55; TIP_50uLF_L_0001, 56
[2025-07-28 10:20:37,712] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 10:20:37,870] pyhamilton.interface INFO disconnected from server
[2025-07-28 10:20:37,971] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 10:20:37,972] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 10:20:37,977] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 10:20:37,980] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 10:20:37,981] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 10:20:37,981] pyhamilton.interface INFO server thread exited
[2025-07-28 10:20:37,990] root ERROR Traceback (most recent call last):
[2025-07-28 10:20:37,993] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 34, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:20:37,994] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 131, in pip_transfer    tracked_tip_pick_up(ham_int, tips, num_tips)    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:20:37,994] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_handling_wrappers.py", line 211, in tracked_tip_pick_up    ham_int.tip_pick_up(tips_poss)    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
[2025-07-28 10:20:37,995] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 915, in tip_pick_up    self.wait_on_response(    ~~~~~~~~~~~~~~~~~~~~~^        self.send_command(        ^^^^^^^^^^^^^^^^^^    ...<5 lines>...        raise_first_exception=True        ^^^^^^^^^^^^^^^^^^^^^^^^^^    )    ^
[2025-07-28 10:20:37,995] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 668, in wait_on_response    for _ in wait(delays=delays, timeout=timeout):             ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:20:37,996] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\waiter\__init__.py", line 91, in __iter__    time.sleep(min(delay, remaining))    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:20:37,996] root ERROR KeyboardInterrupt
[2025-07-28 10:20:37,997] root ERROR During handling of the above exception, another exception occurred:
[2025-07-28 10:20:37,998] root ERROR Traceback (most recent call last):
[2025-07-28 10:20:38,002] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 26, in <module>    with HamiltonInterface(windowed=True, simulating=False) as ham_int:         ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:20:38,002] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 588, in __exit__    self.stop()    ~~~~~~~~~^^
[2025-07-28 10:20:38,003] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 552, in stop    self.wait_on_response(self.send_command(command='end', id=hex(0)), timeout=1.5)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:20:38,004] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 668, in wait_on_response    for _ in wait(delays=delays, timeout=timeout):             ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:20:38,004] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\waiter\__init__.py", line 91, in __iter__    time.sleep(min(delay, remaining))    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:20:38,005] root ERROR KeyboardInterrupt
[2025-07-28 10:26:11,388] root INFO ###########################################################################################################################
[2025-07-28 10:26:11,389] root INFO #                                                                                                                         #
[2025-07-28 10:26:11,389] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-07-28 10:26:11,389] root INFO #                                                                                                                         #
[2025-07-28 10:26:11,389] root INFO ###########################################################################################################################
[2025-07-28 10:26:11,390] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 10:26:11,390] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 10:26:11,391] pyhamilton.interface INFO started the server thread
[2025-07-28 10:26:11,391] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 10:26:11,428] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-28 10:26:14,346] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-28 10:26:14,557] pyhamilton.interface INFO aspirate: Aspirate volumes [0, 0, 0, 0, 0, 0, 0, 0] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-07-28 10:26:17,602] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12; TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16
[2025-07-28 10:26:18,607] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-07-28 10:26:19,187] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 10:26:19,362] pyhamilton.interface INFO disconnected from server
[2025-07-28 10:26:19,463] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 10:26:19,464] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 10:26:19,467] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 10:26:19,469] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 10:26:19,469] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 10:26:19,470] pyhamilton.interface INFO server thread exited
[2025-07-28 10:26:19,473] root ERROR Traceback (most recent call last):
[2025-07-28 10:26:19,476] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 35, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:26:19,476] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 139, in pip_transfer    response = ham_int.aspirate(positions, vols, liquidClass=liquid_class,                    mixCycles=prewet_cycles, mixVolume=prewet_volume,                    liquidHeight=aspirate_height_from_bottom,                    capacitiveLLD=aspirate_capacitative_LLD, aspirateMode=aspirate_mode,                    liquidFollowing=liquid_following_aspiration)
[2025-07-28 10:26:19,477] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 808, in aspirate    response = self.wait_on_response(        self.send_command(    ...<7 lines>...        return_data=['step-return2', 'step-return3']    )
[2025-07-28 10:26:19,477] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 668, in wait_on_response    for _ in wait(delays=delays, timeout=timeout):             ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:26:19,478] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\waiter\__init__.py", line 91, in __iter__    time.sleep(min(delay, remaining))    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:26:19,478] root ERROR KeyboardInterrupt
[2025-07-28 10:26:19,479] root ERROR During handling of the above exception, another exception occurred:
[2025-07-28 10:26:19,479] root ERROR Traceback (most recent call last):
[2025-07-28 10:26:19,480] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 27, in <module>    with HamiltonInterface(windowed=True, simulating=False) as ham_int:         ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:26:19,480] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 588, in __exit__    self.stop()    ~~~~~~~~~^^
[2025-07-28 10:26:19,481] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 552, in stop    self.wait_on_response(self.send_command(command='end', id=hex(0)), timeout=1.5)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:26:19,481] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 668, in wait_on_response    for _ in wait(delays=delays, timeout=timeout):             ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:26:19,481] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\waiter\__init__.py", line 91, in __iter__    time.sleep(min(delay, remaining))    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:26:19,482] root ERROR KeyboardInterrupt
[2025-07-28 10:26:54,219] root INFO ########################################################################################################################
[2025-07-28 10:26:54,219] root INFO #                                                                                                                      #
[2025-07-28 10:26:54,219] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\mix_plate.py     #
[2025-07-28 10:26:54,219] root INFO #                                                                                                                      #
[2025-07-28 10:26:54,220] root INFO ########################################################################################################################
[2025-07-28 10:26:54,220] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 10:26:54,220] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 10:26:54,220] pyhamilton.interface INFO started the server thread
[2025-07-28 10:26:54,221] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 10:26:54,221] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 10:26:55,722] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 10:26:55,723] pyhamilton.interface INFO disconnected from server
[2025-07-28 10:26:55,823] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 10:26:55,824] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 10:26:55,831] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 10:26:55,834] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 10:26:55,835] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 10:26:55,835] pyhamilton.interface INFO server thread exited
[2025-07-28 10:26:55,837] root ERROR Traceback (most recent call last):
[2025-07-28 10:26:55,838] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\mix_plate.py", line 35, in <module>    mix_plate(ham_int, tips, MIDI_OffMagnet, 100, liquid_class='Tip_50ulFilter_Water_DispenseSurface_Empty')    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:26:55,839] root ERROR TypeError: mix_plate() got multiple values for argument 'liquid_class'
[2025-07-28 10:47:47,432] root INFO ########################################################################################################################
[2025-07-28 10:47:47,433] root INFO #                                                                                                                      #
[2025-07-28 10:47:47,433] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\mix_plate.py     #
[2025-07-28 10:47:47,433] root INFO #                                                                                                                      #
[2025-07-28 10:47:47,434] root INFO ########################################################################################################################
[2025-07-28 10:47:47,435] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 10:47:47,436] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 10:47:47,436] pyhamilton.interface INFO started the server thread
[2025-07-28 10:47:47,436] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 10:47:47,438] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 10:47:48,939] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 10:47:48,940] pyhamilton.interface INFO disconnected from server
[2025-07-28 10:47:49,042] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 10:47:49,042] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 10:47:49,046] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 10:47:49,048] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 10:47:49,049] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 10:47:49,049] pyhamilton.interface INFO server thread exited
[2025-07-28 10:47:49,051] root ERROR Traceback (most recent call last):
[2025-07-28 10:47:49,053] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\mix_plate.py", line 32, in <module>    mix_plate(ham_int, tips, MIDI_OffMagnet, 100, liquid_class='Tip_50ulFilter_Water_DispenseSurface_Empty')    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:47:49,053] root ERROR TypeError: mix_plate() got multiple values for argument 'liquid_class'
[2025-07-28 10:48:47,273] root INFO ########################################################################################################################
[2025-07-28 10:48:47,274] root INFO #                                                                                                                      #
[2025-07-28 10:48:47,274] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\mix_plate.py     #
[2025-07-28 10:48:47,274] root INFO #                                                                                                                      #
[2025-07-28 10:48:47,274] root INFO ########################################################################################################################
[2025-07-28 10:48:47,275] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 10:48:47,276] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 10:48:47,276] pyhamilton.interface INFO started the server thread
[2025-07-28 10:48:47,276] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 10:48:47,742] pyhamilton.interface INFO tip_pick_up_96: Pick up tips at TIP_50uLF_L_0001
[2025-07-28 10:48:48,744] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 10:48:50,246] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 10:48:50,246] pyhamilton.interface INFO disconnected from server
[2025-07-28 10:48:50,347] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 10:48:50,348] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 10:48:50,352] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 10:48:50,354] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 10:48:50,355] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 10:48:50,355] pyhamilton.interface INFO server thread exited
[2025-07-28 10:48:50,360] root ERROR Traceback (most recent call last):
[2025-07-28 10:48:50,363] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\mix_plate.py", line 32, in <module>    mix_plate(ham_int, tips, MIDI_OffMagnet, 100, liquid_class='Tip_50ulFilter_Water_DispenseSurface_Empty')    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:48:50,364] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 182, in mix_plate    tracked_tip_pick_up_96(ham_int, tips)    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
[2025-07-28 10:48:50,364] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_handling_wrappers.py", line 223, in tracked_tip_pick_up_96    ham_int.tip_pick_up_96(tip_rack)    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
[2025-07-28 10:48:50,365] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 967, in tip_pick_up_96    self.wait_on_response(    ~~~~~~~~~~~~~~~~~~~~~^        self.send_command(        ^^^^^^^^^^^^^^^^^^    ...<4 lines>...        raise_first_exception=True        ^^^^^^^^^^^^^^^^^^^^^^^^^^    )    ^
[2025-07-28 10:48:50,365] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 679, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:48:50,366] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 698, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-07-28 10:48:50,367] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 408, in raise_first_exception    raise HamiltonReturnParseError(self.raw)
[2025-07-28 10:48:50,367] root ERROR pyhamilton.oemerr.HamiltonReturnParseError: {"command":"STAR-return","step-name":"mph96TipPickUp","step-return1":"1[01,01,30,2,,,","step-return2":"2","step-return3":"","step-return4":"","id":"0x17630973293a"}
[2025-07-28 10:51:26,111] root INFO ########################################################################################################################
[2025-07-28 10:51:26,112] root INFO #                                                                                                                      #
[2025-07-28 10:51:26,112] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\mix_plate.py     #
[2025-07-28 10:51:26,112] root INFO #                                                                                                                      #
[2025-07-28 10:51:26,112] root INFO ########################################################################################################################
[2025-07-28 10:51:26,113] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 10:51:26,114] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 10:51:26,114] pyhamilton.interface INFO started the server thread
[2025-07-28 10:51:26,114] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 10:51:26,500] pyhamilton.interface INFO tip_pick_up_96: Pick up tips at TIP_50uLF_L_0001
[2025-07-28 10:51:28,503] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 10:51:30,003] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 10:51:30,004] pyhamilton.interface INFO disconnected from server
[2025-07-28 10:51:30,104] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 10:51:30,104] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 10:51:30,110] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 10:51:30,112] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 10:51:30,113] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 10:51:30,113] pyhamilton.interface INFO server thread exited
[2025-07-28 10:51:30,114] root ERROR Traceback (most recent call last):
[2025-07-28 10:51:30,117] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\mix_plate.py", line 32, in <module>    mix_plate(ham_int, tips, MIDI_OffMagnet, 100, liquid_class='Tip_50ulFilter_Water_DispenseSurface_Empty')    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:51:30,118] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 187, in mix_plate    ham_int.aspirate_96(plate, volume=0, liquid_class=liquid_class, mixCycles=mix_cycles, mixVolume=mix_volume,    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                        liquid_height=liquid_height, capacitative_LLD=cLLD, liquidFollowing=liquidFollowing)                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:51:30,118] root ERROR TypeError: HamiltonInterface.aspirate_96() missing 1 required positional argument: 'vol'
[2025-07-28 10:57:01,744] root INFO ########################################################################################################################
[2025-07-28 10:57:01,745] root INFO #                                                                                                                      #
[2025-07-28 10:57:01,745] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\mix_plate.py     #
[2025-07-28 10:57:01,746] root INFO #                                                                                                                      #
[2025-07-28 10:57:01,746] root INFO ########################################################################################################################
[2025-07-28 10:57:01,747] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 10:57:01,747] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 10:57:01,747] pyhamilton.interface INFO started the server thread
[2025-07-28 10:57:01,747] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 10:57:02,125] pyhamilton.interface INFO tip_pick_up_96: Pick up tips at TIP_50uLF_L_0001
[2025-07-28 10:57:04,126] pyhamilton.interface INFO aspirate_96: Aspirate volume 0 from MIDI_Pipette with extra options {'liquid_class': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 100, 'liquid_height': 0, 'capacitative_LLD': 5, 'liquidFollowing': True}
[2025-07-28 10:57:04,127] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 10:57:05,628] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 10:57:05,629] pyhamilton.interface INFO disconnected from server
[2025-07-28 10:57:05,730] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 10:57:05,730] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 10:57:05,735] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 10:57:05,737] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 10:57:05,737] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 10:57:05,738] pyhamilton.interface INFO server thread exited
[2025-07-28 10:57:05,741] root ERROR Traceback (most recent call last):
[2025-07-28 10:57:05,743] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\mix_plate.py", line 32, in <module>    mix_plate(ham_int, tips, MIDI_OffMagnet, 100, liquid_class='Tip_50ulFilter_Water_DispenseSurface_Empty')    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:57:05,744] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 187, in mix_plate    ham_int.aspirate_96(plate, 0, liquid_class=liquid_class, mixCycles=mix_cycles, mixVolume=mix_volume,    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                        liquid_height=liquid_height, capacitative_LLD=cLLD, liquidFollowing=liquidFollowing)                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 10:57:05,745] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 1016, in aspirate_96    self.send_command(    ~~~~~~~~~~~~~~~~~^        ASPIRATE96,        ^^^^^^^^^^^    ...<2 lines>...        **more_options        ^^^^^^^^^^^^^^    ),    ^
[2025-07-28 10:57:05,745] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 625, in send_command    send_cmd_dict = template.assemble_cmd(**cmd_dict)
[2025-07-28 10:57:05,746] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 66, in assemble_cmd    self.assert_valid_cmd(assembled_cmd)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
[2025-07-28 10:57:05,747] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 114, in assert_valid_cmd    raise ValueError('\n'.join(prints))
[2025-07-28 10:57:05,748] root ERROR ValueError: Assert valid command "mph96Aspirate" failed: template parameter keys (left) do not match given keys (right)    airTransportRetractDist       airTransportRetractDist    aspirateMode                  aspirateMode    aspirateSequence              aspirateSequence    aspirateVolume                aspirateVolume    capacitiveLLD                  (?)  capacitative_LLD    channelVariable               capacitiveLLD    command                       channelVariable    id                            command    labwarePositions              id    liquidClass                   labwarePositions    liquidFollowing               liquidClass    liquidHeight                  liquidFollowing    mixCycles                     liquidHeight    mixPosition                    (?)  liquid_class    mixVolume                      (?)  liquid_height    sequenceCounting              mixCycles    submergeDepth                 mixPosition                                  mixVolume                                  sequenceCounting                                  submergeDepth
[2025-07-28 10:58:11,946] root INFO ########################################################################################################################
[2025-07-28 10:58:11,946] root INFO #                                                                                                                      #
[2025-07-28 10:58:11,947] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\mix_plate.py     #
[2025-07-28 10:58:11,947] root INFO #                                                                                                                      #
[2025-07-28 10:58:11,947] root INFO ########################################################################################################################
[2025-07-28 10:58:11,948] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 10:58:11,948] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 10:58:11,949] pyhamilton.interface INFO started the server thread
[2025-07-28 10:58:11,949] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 10:58:12,338] pyhamilton.interface INFO tip_pick_up_96: Pick up tips at TIP_50uLF_L_0001
[2025-07-28 10:58:15,341] pyhamilton.interface INFO aspirate_96: Aspirate volume 0 from MIDI_Pipette with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 100, 'liquidHeight': 0, 'capacitiveLLD': 5, 'liquidFollowing': True}
[2025-07-28 10:58:17,343] pyhamilton.interface INFO tip_eject_96: Eject tips to default waste
[2025-07-28 10:58:18,346] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 10:58:19,847] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 10:58:19,847] pyhamilton.interface INFO disconnected from server
[2025-07-28 10:58:19,948] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 10:58:19,949] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 10:58:19,953] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 10:58:19,955] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 10:58:19,956] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 10:58:19,956] pyhamilton.interface INFO server thread exited
[2025-07-28 11:06:39,384] root INFO ##########################################################################################################################
[2025-07-28 11:06:39,385] root INFO #                                                                                                                        #
[2025-07-28 11:06:39,385] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\transfer_96.py     #
[2025-07-28 11:06:39,385] root INFO #                                                                                                                        #
[2025-07-28 11:06:39,385] root INFO ##########################################################################################################################
[2025-07-28 11:06:39,386] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 11:06:39,386] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 11:06:39,387] pyhamilton.interface INFO started the server thread
[2025-07-28 11:06:39,387] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 11:06:39,387] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 11:06:40,888] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 11:06:40,889] pyhamilton.interface INFO disconnected from server
[2025-07-28 11:06:40,989] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 11:06:40,990] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 11:06:40,997] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 11:06:41,000] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 11:06:41,002] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 11:06:41,002] pyhamilton.interface INFO server thread exited
[2025-07-28 11:06:41,005] root ERROR Traceback (most recent call last):
[2025-07-28 11:06:41,005] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\transfer_96.py", line 33, in <module>    transfer_96(ham_int, tips, MIDI_OffMagnet, 100, liquid_class='Tip_50ulFilter_Water_DispenseSurface_Empty')    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 11:06:41,006] root ERROR TypeError: transfer_96() missing 1 required positional argument: 'volume'
[2025-07-28 11:08:02,701] root INFO ##########################################################################################################################
[2025-07-28 11:08:02,702] root INFO #                                                                                                                        #
[2025-07-28 11:08:02,702] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\transfer_96.py     #
[2025-07-28 11:08:02,703] root INFO #                                                                                                                        #
[2025-07-28 11:08:02,703] root INFO ##########################################################################################################################
[2025-07-28 11:08:02,704] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 11:08:02,705] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 11:08:02,705] pyhamilton.interface INFO started the server thread
[2025-07-28 11:08:02,705] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 11:08:02,707] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 11:08:04,208] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 11:08:04,209] pyhamilton.interface INFO disconnected from server
[2025-07-28 11:08:04,310] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 11:08:04,311] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 11:08:04,317] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 11:08:04,321] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 11:08:04,322] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 11:08:04,322] pyhamilton.interface INFO server thread exited
[2025-07-28 11:08:04,324] root ERROR Traceback (most recent call last):
[2025-07-28 11:08:04,326] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\transfer_96.py", line 35, in <module>    transfer_96(ham_int, tips, MIDI_OffMagnet, 100, liquid_class='Tip_50ulFilter_Water_DispenseSurface_Empty')    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 11:08:04,327] root ERROR TypeError: transfer_96() missing 1 required positional argument: 'volume'
[2025-07-28 11:09:00,002] root INFO ##########################################################################################################################
[2025-07-28 11:09:00,003] root INFO #                                                                                                                        #
[2025-07-28 11:09:00,003] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\transfer_96.py     #
[2025-07-28 11:09:00,003] root INFO #                                                                                                                        #
[2025-07-28 11:09:00,004] root INFO ##########################################################################################################################
[2025-07-28 11:09:00,005] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 11:09:00,006] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 11:09:00,007] pyhamilton.interface INFO started the server thread
[2025-07-28 11:09:00,008] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 11:09:00,666] pyhamilton.interface INFO tip_pick_up_96: Pick up tips at TIP_50uLF_L_0001
[2025-07-28 11:09:02,669] pyhamilton.interface INFO aspirate_96: Aspirate volume 100 from MIDI_Pipette with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mix_cycles': 0, 'liquid_height': 0}
[2025-07-28 11:09:02,670] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 11:09:04,171] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 11:09:04,171] pyhamilton.interface INFO disconnected from server
[2025-07-28 11:09:04,271] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 11:09:04,273] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 11:09:04,279] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 11:09:04,283] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 11:09:04,284] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 11:09:04,284] pyhamilton.interface INFO server thread exited
[2025-07-28 11:09:04,289] root ERROR Traceback (most recent call last):
[2025-07-28 11:09:04,292] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\transfer_96.py", line 35, in <module>    transfer_96(ham_int, tips, MIDI_OffMagnet, MIDI_OnMagnet, 100, liquid_class='Tip_50ulFilter_Water_DispenseSurface_Empty')    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 11:09:04,293] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 236, in transfer_96    ham_int.aspirate_96(source_plate, volume, liquidClass=liquid_class, mix_cycles=mix_cycles, liquid_height=liquid_height)    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 11:09:04,293] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 1016, in aspirate_96    self.send_command(    ~~~~~~~~~~~~~~~~~^        ASPIRATE96,        ^^^^^^^^^^^    ...<2 lines>...        **more_options        ^^^^^^^^^^^^^^    ),    ^
[2025-07-28 11:09:04,294] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 625, in send_command    send_cmd_dict = template.assemble_cmd(**cmd_dict)
[2025-07-28 11:09:04,294] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 66, in assemble_cmd    self.assert_valid_cmd(assembled_cmd)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
[2025-07-28 11:09:04,294] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 114, in assert_valid_cmd    raise ValueError('\n'.join(prints))
[2025-07-28 11:09:04,295] root ERROR ValueError: Assert valid command "mph96Aspirate" failed: template parameter keys (left) do not match given keys (right)    airTransportRetractDist       airTransportRetractDist    aspirateMode                  aspirateMode    aspirateSequence              aspirateSequence    aspirateVolume                aspirateVolume    capacitiveLLD                 capacitiveLLD    channelVariable               channelVariable    command                       command    id                            id    labwarePositions              labwarePositions    liquidClass                   liquidClass    liquidFollowing               liquidFollowing    liquidHeight                  liquidHeight    mixCycles                      (?)  liquid_height    mixPosition                   mixCycles    mixVolume                     mixPosition    sequenceCounting              mixVolume    submergeDepth                  (?)  mix_cycles                                  sequenceCounting                                  submergeDepth
[2025-07-28 11:10:34,789] root INFO ##########################################################################################################################
[2025-07-28 11:10:34,790] root INFO #                                                                                                                        #
[2025-07-28 11:10:34,791] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\transfer_96.py     #
[2025-07-28 11:10:34,791] root INFO #                                                                                                                        #
[2025-07-28 11:10:34,791] root INFO ##########################################################################################################################
[2025-07-28 11:10:34,793] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 11:10:34,793] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 11:10:34,794] pyhamilton.interface INFO started the server thread
[2025-07-28 11:10:34,794] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 11:10:35,418] pyhamilton.interface INFO tip_pick_up_96: Pick up tips at TIP_50uLF_L_0001
[2025-07-28 11:10:37,420] pyhamilton.interface INFO aspirate_96: Aspirate volume 20 from MIDI_Pipette with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'liquidHeight': 0}
[2025-07-28 11:10:39,423] pyhamilton.interface INFO dispense_96: Dispense volume 20 into MIDI_OnMagnet with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'liquidHeight': 0}
[2025-07-28 11:10:41,426] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 11:10:42,927] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 11:10:42,927] pyhamilton.interface INFO disconnected from server
[2025-07-28 11:10:43,028] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 11:10:43,029] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 11:10:43,038] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 11:10:43,041] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 11:10:43,042] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 11:10:43,042] pyhamilton.interface INFO server thread exited
[2025-07-28 11:10:43,045] root ERROR Traceback (most recent call last):
[2025-07-28 11:10:43,047] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\transfer_96.py", line 35, in <module>    transfer_96(ham_int, tips, MIDI_OffMagnet, MIDI_OnMagnet, 20, liquid_class='Tip_50ulFilter_Water_DispenseSurface_Empty')    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 11:10:43,048] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 238, in transfer_96    ham_int.eject_tips_96()    ^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 11:10:43,048] root ERROR AttributeError: 'HamiltonInterface' object has no attribute 'eject_tips_96'
[2025-07-28 12:17:14,299] root INFO ##########################################################################################################################
[2025-07-28 12:17:14,300] root INFO #                                                                                                                        #
[2025-07-28 12:17:14,300] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\transfer_96.py     #
[2025-07-28 12:17:14,300] root INFO #                                                                                                                        #
[2025-07-28 12:17:14,300] root INFO ##########################################################################################################################
[2025-07-28 12:17:14,301] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 12:17:14,302] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 12:17:14,302] pyhamilton.interface INFO started the server thread
[2025-07-28 12:17:14,302] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 12:17:14,893] pyhamilton.interface INFO tip_pick_up_96: Pick up tips at TIP_50uLF_L_0001
[2025-07-28 12:17:16,895] pyhamilton.interface INFO aspirate_96: Aspirate volume 20 from MIDI_Pipette with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'liquidHeight': 0}
[2025-07-28 12:17:18,898] pyhamilton.interface INFO dispense_96: Dispense volume 20 into MIDI_OnMagnet with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'liquidHeight': 0}
[2025-07-28 12:17:20,900] pyhamilton.interface INFO tip_eject_96: Eject tips to default waste
[2025-07-28 12:17:21,902] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 12:17:23,403] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 12:17:23,403] pyhamilton.interface INFO disconnected from server
[2025-07-28 12:17:23,504] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 12:17:23,504] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 12:17:23,509] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 12:17:23,511] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 12:17:23,512] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 12:17:23,512] pyhamilton.interface INFO server thread exited
[2025-07-28 13:14:58,661] root INFO ##################################################################################################################
[2025-07-28 13:14:58,663] root INFO #                                                                                                                #
[2025-07-28 13:14:58,664] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-07-28 13:14:58,664] root INFO #                                                                                                                #
[2025-07-28 13:14:58,664] root INFO ##################################################################################################################
[2025-07-28 13:14:58,666] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 13:14:58,667] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 13:14:58,667] pyhamilton.interface INFO started the server thread
[2025-07-28 13:14:58,668] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 13:14:59,670] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 13:15:01,171] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 13:15:01,171] pyhamilton.interface INFO disconnected from server
[2025-07-28 13:15:01,272] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 13:15:01,273] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 13:15:01,281] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 13:15:01,284] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 13:15:01,284] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 13:15:01,285] pyhamilton.interface INFO server thread exited
[2025-07-28 13:15:01,289] root ERROR Traceback (most recent call last):
[2025-07-28 13:15:01,292] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py", line 32, in <module>    hhs_create_star_device(ham_int, 'STAR', 0)    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
[2025-07-28 13:15:01,293] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 24, in hhs_create_star_device    response = ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout, return_data=return_field)
[2025-07-28 13:15:01,293] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 679, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 13:15:01,294] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 698, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-07-28 13:15:01,295] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 404, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-07-28 13:15:01,295] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"HHS-return","step-name":"HHS_CreateStarDevice","step-return1":0,"step-return2":0,"step-return3":"","step-return4":"","id":"0x1765143ce046"} )
[2025-07-28 13:19:40,795] root INFO ##################################################################################################################
[2025-07-28 13:19:40,795] root INFO #                                                                                                                #
[2025-07-28 13:19:40,795] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-07-28 13:19:40,796] root INFO #                                                                                                                #
[2025-07-28 13:19:40,796] root INFO ##################################################################################################################
[2025-07-28 13:19:40,797] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 13:19:40,798] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 13:19:40,798] pyhamilton.interface INFO started the server thread
[2025-07-28 13:19:40,798] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 13:19:41,799] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 13:19:43,300] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 13:19:43,301] pyhamilton.interface INFO disconnected from server
[2025-07-28 13:19:43,402] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 13:19:43,403] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 13:19:43,405] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 13:19:43,406] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 13:19:43,407] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 13:19:43,407] pyhamilton.interface INFO server thread exited
[2025-07-28 13:19:43,409] root ERROR Traceback (most recent call last):
[2025-07-28 13:19:43,410] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py", line 32, in <module>    hhs_create_star_device(ham_int, 'ML_STAR', 1)    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 13:19:43,410] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 24, in hhs_create_star_device    response = ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout, return_data=return_field)
[2025-07-28 13:19:43,411] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 679, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 13:19:43,411] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 698, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-07-28 13:19:43,411] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 404, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-07-28 13:19:43,411] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"HHS-return","step-name":"HHS_CreateStarDevice","step-return1":0,"step-return2":0,"step-return3":"","step-return4":"","id":"0x1765250dd429"} )
[2025-07-28 13:22:34,590] root INFO ##################################################################################################################
[2025-07-28 13:22:34,590] root INFO #                                                                                                                #
[2025-07-28 13:22:34,591] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-07-28 13:22:34,591] root INFO #                                                                                                                #
[2025-07-28 13:22:34,591] root INFO ##################################################################################################################
[2025-07-28 13:22:34,592] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 13:22:34,592] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 13:22:34,592] pyhamilton.interface INFO started the server thread
[2025-07-28 13:22:34,592] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 13:22:35,594] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 13:22:37,095] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 13:22:37,095] pyhamilton.interface INFO disconnected from server
[2025-07-28 13:22:37,196] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 13:22:37,197] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 13:22:37,202] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 13:22:37,204] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 13:22:37,205] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 13:22:37,205] pyhamilton.interface INFO server thread exited
[2025-07-28 13:22:37,209] root ERROR Traceback (most recent call last):
[2025-07-28 13:22:37,211] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py", line 32, in <module>    hhs_create_star_device(ham_int, 'ML_STAR', 1)    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 13:22:37,211] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 24, in hhs_create_star_device    response = ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout, return_data=return_field)
[2025-07-28 13:22:37,212] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 679, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 13:22:37,212] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 698, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-07-28 13:22:37,213] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 404, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-07-28 13:22:37,214] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"HHS-return","step-name":"HHS_CreateStarDevice","step-return1":0,"step-return2":0,"step-return3":"","step-return4":"","id":"0x17652f69b7d6"} )
[2025-07-28 13:23:37,042] root INFO ##################################################################################################################
[2025-07-28 13:23:37,043] root INFO #                                                                                                                #
[2025-07-28 13:23:37,043] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-07-28 13:23:37,043] root INFO #                                                                                                                #
[2025-07-28 13:23:37,044] root INFO ##################################################################################################################
[2025-07-28 13:23:37,045] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 13:23:37,046] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 13:23:37,046] pyhamilton.interface INFO started the server thread
[2025-07-28 13:23:37,046] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 13:23:38,048] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 13:23:39,549] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 13:23:39,550] pyhamilton.interface INFO disconnected from server
[2025-07-28 13:23:39,650] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 13:23:39,651] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 13:23:39,654] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 13:23:39,656] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 13:23:39,656] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 13:23:39,657] pyhamilton.interface INFO server thread exited
[2025-07-28 13:23:39,660] root ERROR Traceback (most recent call last):
[2025-07-28 13:23:39,662] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py", line 32, in <module>    hhs_set_simulation(ham_int, True)  # Set simulation mode if needed    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
[2025-07-28 13:23:39,662] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 87, in hhs_set_simulation    ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout)    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 13:23:39,663] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 679, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 13:23:39,663] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 698, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-07-28 13:23:39,663] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 404, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-07-28 13:23:39,664] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"HHS-return","step-name":"HHS_SetSimulation","step-return1":0,"step-return2":"","step-return3":"","step-return4":"","id":"0x17653322b3a0"} )
[2025-07-28 13:32:10,352] root INFO ##################################################################################################################
[2025-07-28 13:32:10,353] root INFO #                                                                                                                #
[2025-07-28 13:32:10,353] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-07-28 13:32:10,353] root INFO #                                                                                                                #
[2025-07-28 13:32:10,353] root INFO ##################################################################################################################
[2025-07-28 13:32:10,355] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 13:32:10,355] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 13:32:10,356] pyhamilton.interface INFO started the server thread
[2025-07-28 13:32:10,356] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 13:32:11,358] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 13:32:12,859] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 13:32:12,860] pyhamilton.interface INFO disconnected from server
[2025-07-28 13:32:12,961] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 13:32:12,961] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 13:32:12,966] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 13:32:12,968] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 13:32:12,969] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 13:32:12,969] pyhamilton.interface INFO server thread exited
[2025-07-28 13:32:12,971] root ERROR Traceback (most recent call last):
[2025-07-28 13:32:12,973] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py", line 32, in <module>    hhs_set_simulation(ham_int, True)  # Set simulation mode if needed    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
[2025-07-28 13:32:12,974] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 87, in hhs_set_simulation    ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout)    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 13:32:12,974] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 679, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 13:32:12,975] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 698, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-07-28 13:32:12,976] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 404, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-07-28 13:32:12,976] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"HHS-return","step-name":"HHS_SetSimulation","step-return1":0,"step-return2":"","step-return3":"","step-return4":"","id":"0x176551bb2f74"} )
[2025-07-28 13:41:48,128] root INFO ##################################################################################################################
[2025-07-28 13:41:48,129] root INFO #                                                                                                                #
[2025-07-28 13:41:48,129] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-07-28 13:41:48,129] root INFO #                                                                                                                #
[2025-07-28 13:41:48,129] root INFO ##################################################################################################################
[2025-07-28 13:41:48,131] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 13:41:48,131] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 13:41:48,132] pyhamilton.interface INFO started the server thread
[2025-07-28 13:41:48,132] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 13:41:49,134] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 13:41:50,635] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 13:41:50,636] pyhamilton.interface INFO disconnected from server
[2025-07-28 13:41:50,736] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 13:41:50,737] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 13:41:50,741] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 13:41:50,743] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 13:41:50,744] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 13:41:50,744] pyhamilton.interface INFO server thread exited
[2025-07-28 13:41:50,749] root ERROR Traceback (most recent call last):
[2025-07-28 13:41:50,751] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py", line 32, in <module>    hhs_set_simulation(ham_int, True)  # Set simulation mode if needed    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
[2025-07-28 13:41:50,752] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 87, in hhs_set_simulation    ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout)    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 13:41:50,752] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 679, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 13:41:50,753] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 698, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-07-28 13:41:50,754] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 404, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-07-28 13:41:50,754] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"HHS-return","step-name":"HHS_SetSimulation","step-return1":0,"step-return2":"","step-return3":"","step-return4":"","id":"0x1765742b56d6"} )
[2025-07-28 13:43:02,616] root INFO ##################################################################################################################
[2025-07-28 13:43:02,617] root INFO #                                                                                                                #
[2025-07-28 13:43:02,617] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-07-28 13:43:02,618] root INFO #                                                                                                                #
[2025-07-28 13:43:02,618] root INFO ##################################################################################################################
[2025-07-28 13:43:02,619] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 13:43:02,621] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 13:43:02,621] pyhamilton.interface INFO started the server thread
[2025-07-28 13:43:02,622] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 13:43:03,625] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 13:43:05,126] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 13:43:05,127] pyhamilton.interface INFO disconnected from server
[2025-07-28 13:43:05,228] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 13:43:05,229] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 13:43:05,235] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 13:43:05,238] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 13:43:05,239] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 13:43:05,240] pyhamilton.interface INFO server thread exited
[2025-07-28 13:43:05,244] root ERROR Traceback (most recent call last):
[2025-07-28 13:43:05,246] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py", line 32, in <module>    hhs_set_simulation(ham_int, True)  # Set simulation mode if needed    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
[2025-07-28 13:43:05,246] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 87, in hhs_set_simulation    ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout)    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 13:43:05,247] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 679, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 13:43:05,248] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 698, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-07-28 13:43:05,249] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 404, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-07-28 13:43:05,250] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"HHS-return","step-name":"HHS_SetSimulation","step-return1":0,"step-return2":"","step-return3":"","step-return4":"","id":"0x1765789bfdbc"} )
[2025-07-28 13:44:35,266] root INFO ##################################################################################################################
[2025-07-28 13:44:35,267] root INFO #                                                                                                                #
[2025-07-28 13:44:35,267] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-07-28 13:44:35,268] root INFO #                                                                                                                #
[2025-07-28 13:44:35,268] root INFO ##################################################################################################################
[2025-07-28 13:44:35,269] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 13:44:35,270] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 13:44:35,270] pyhamilton.interface INFO started the server thread
[2025-07-28 13:44:35,271] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 13:44:36,273] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 13:44:37,774] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 13:44:37,775] pyhamilton.interface INFO disconnected from server
[2025-07-28 13:44:37,875] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 13:44:37,876] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 13:44:37,883] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 13:44:37,886] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 13:44:37,886] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 13:44:37,887] pyhamilton.interface INFO server thread exited
[2025-07-28 13:44:37,891] root ERROR Traceback (most recent call last):
[2025-07-28 13:44:37,894] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py", line 32, in <module>    hhs_set_simulation(ham_int, True)  # Set simulation mode if needed    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
[2025-07-28 13:44:37,894] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 87, in hhs_set_simulation    ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout)    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 13:44:37,895] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 679, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 13:44:37,896] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 698, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-07-28 13:44:37,897] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 404, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-07-28 13:44:37,898] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"HHS-return","step-name":"HHS_SetSimulation","step-return1":0,"step-return2":"","step-return3":"","step-return4":"","id":"0x17657e21afb1"} )
[2025-07-28 13:59:44,315] root INFO ##################################################################################################################
[2025-07-28 13:59:44,316] root INFO #                                                                                                                #
[2025-07-28 13:59:44,316] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-07-28 13:59:44,316] root INFO #                                                                                                                #
[2025-07-28 13:59:44,316] root INFO ##################################################################################################################
[2025-07-28 13:59:44,318] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 13:59:44,319] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 13:59:44,319] pyhamilton.interface INFO started the server thread
[2025-07-28 13:59:44,319] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 13:59:45,321] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 13:59:46,823] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 13:59:46,824] pyhamilton.interface INFO disconnected from server
[2025-07-28 13:59:46,925] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 13:59:46,926] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 13:59:46,933] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 13:59:46,936] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 13:59:46,937] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 13:59:46,938] pyhamilton.interface INFO server thread exited
[2025-07-28 13:59:46,943] root ERROR Traceback (most recent call last):
[2025-07-28 13:59:46,946] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py", line 32, in <module>    hhs_set_simulation(ham_int, 1)  # Set simulation mode if needed    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
[2025-07-28 13:59:46,946] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 87, in hhs_set_simulation    ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout)    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 13:59:46,947] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 679, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 13:59:46,948] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 698, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-07-28 13:59:46,949] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 404, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-07-28 13:59:46,950] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"HHS-return","step-name":"HHS_SetSimulation","step-return1":0,"step-return2":"","step-return3":"","step-return4":"","id":"0x1765b450a926"} )
[2025-07-28 14:11:33,009] root INFO ##################################################################################################################
[2025-07-28 14:11:33,010] root INFO #                                                                                                                #
[2025-07-28 14:11:33,010] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-07-28 14:11:33,010] root INFO #                                                                                                                #
[2025-07-28 14:11:33,010] root INFO ##################################################################################################################
[2025-07-28 14:11:33,012] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 14:11:33,012] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 14:11:33,013] pyhamilton.interface INFO started the server thread
[2025-07-28 14:11:33,013] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 14:11:34,016] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 14:11:35,516] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 14:11:35,517] pyhamilton.interface INFO disconnected from server
[2025-07-28 14:11:35,618] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 14:11:35,619] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 14:11:35,626] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 14:11:35,630] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 14:11:35,631] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 14:11:35,631] pyhamilton.interface INFO server thread exited
[2025-07-28 14:11:35,637] root ERROR Traceback (most recent call last):
[2025-07-28 14:11:35,641] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py", line 32, in <module>    hhs_set_simulation(ham_int, 1)  # Set simulation mode if needed    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
[2025-07-28 14:11:35,642] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 87, in hhs_set_simulation    ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout)    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 14:11:35,643] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 679, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 14:11:35,643] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 698, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-07-28 14:11:35,644] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 404, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-07-28 14:11:35,645] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"HHS-return","step-name":"HHS_SetSimulation","step-return1":0,"step-return2":"","step-return3":"","step-return4":"","id":"0x1765de8e7ad6"} )
[2025-07-28 14:45:37,562] root INFO ##################################################################################################################
[2025-07-28 14:45:37,564] root INFO #                                                                                                                #
[2025-07-28 14:45:37,565] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-07-28 14:45:37,565] root INFO #                                                                                                                #
[2025-07-28 14:45:37,565] root INFO ##################################################################################################################
[2025-07-28 14:45:37,566] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 14:45:37,568] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 14:45:37,568] pyhamilton.interface INFO started the server thread
[2025-07-28 14:45:37,569] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 14:45:38,572] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 14:45:40,073] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 14:45:40,073] pyhamilton.interface INFO disconnected from server
[2025-07-28 14:45:40,174] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 14:45:40,175] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 14:45:40,181] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 14:45:40,184] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 14:45:40,184] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 14:45:40,185] pyhamilton.interface INFO server thread exited
[2025-07-28 14:45:40,187] root ERROR Traceback (most recent call last):
[2025-07-28 14:45:40,189] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py", line 32, in <module>    hhs_set_simulation(ham_int, 1)  # Set simulation mode if needed    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
[2025-07-28 14:45:40,189] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 87, in hhs_set_simulation    ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout)    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 14:45:40,190] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 679, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-28 14:45:40,190] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 698, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-07-28 14:45:40,191] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 404, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-07-28 14:45:40,191] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"HHS-return","step-name":"HHS_SetSimulation","step-return1":0,"step-return2":"","step-return3":"","step-return4":"","id":"0x1766586beed6"} )
[2025-07-28 14:50:41,780] root INFO ##################################################################################################################
[2025-07-28 14:50:41,781] root INFO #                                                                                                                #
[2025-07-28 14:50:41,781] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-07-28 14:50:41,781] root INFO #                                                                                                                #
[2025-07-28 14:50:41,781] root INFO ##################################################################################################################
[2025-07-28 14:50:41,782] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-28 14:50:41,782] pyhamilton.interface INFO started the oem application for simulation
[2025-07-28 14:50:41,782] pyhamilton.interface INFO started the server thread
[2025-07-28 14:50:41,782] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-28 14:50:45,786] pyhamilton.interface INFO sending end run command to simulator
[2025-07-28 14:50:47,288] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-28 14:50:47,288] pyhamilton.interface INFO disconnected from server
[2025-07-28 14:50:47,388] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-28 14:50:47,389] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-28 14:50:47,394] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-28 14:50:47,396] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-28 14:50:47,397] pyhamilton.interface INFO dummy get request sent to server
[2025-07-28 14:50:47,398] pyhamilton.interface INFO server thread exited
[2025-07-29 12:54:22,432] root INFO #############################################################################################################################
[2025-07-29 12:54:22,432] root INFO #                                                                                                                           #
[2025-07-29 12:54:22,433] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 12:54:22,433] root INFO #                                                                                                                           #
[2025-07-29 12:54:22,433] root INFO #############################################################################################################################
[2025-07-29 12:54:22,433] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 12:54:22,434] pyhamilton.interface INFO running in simulation mode
[2025-07-29 12:54:22,434] pyhamilton.interface INFO started the server thread
[2025-07-29 12:54:22,434] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 12:54:22,946] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8; TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12; TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16; TIP_50uLF_L_0001, 17; TIP_50uLF_L_0001, 18; TIP_50uLF_L_0001, 19; TIP_50uLF_L_0001, 20; TIP_50uLF_L_0001, 21; TIP_50uLF_L_0001, 22; TIP_50uLF_L_0001, 23; TIP_50uLF_L_0001, 24; TIP_50uLF_L_0001, 25; TIP_50uLF_L_0001, 26; TIP_50uLF_L_0001, 27; TIP_50uLF_L_0001, 28; TIP_50uLF_L_0001, 29; TIP_50uLF_L_0001, 30; TIP_50uLF_L_0001, 31; TIP_50uLF_L_0001, 32; TIP_50uLF_L_0001, 33; TIP_50uLF_L_0001, 34; TIP_50uLF_L_0001, 35; TIP_50uLF_L_0001, 36; TIP_50uLF_L_0001, 37; TIP_50uLF_L_0001, 38; TIP_50uLF_L_0001, 39; TIP_50uLF_L_0001, 40; TIP_50uLF_L_0001, 41; TIP_50uLF_L_0001, 42; TIP_50uLF_L_0001, 43; TIP_50uLF_L_0001, 44; TIP_50uLF_L_0001, 45; TIP_50uLF_L_0001, 46; TIP_50uLF_L_0001, 47; TIP_50uLF_L_0001, 48; TIP_50uLF_L_0001, 49; TIP_50uLF_L_0001, 50; TIP_50uLF_L_0001, 51; TIP_50uLF_L_0001, 52; TIP_50uLF_L_0001, 53; TIP_50uLF_L_0001, 54; TIP_50uLF_L_0001, 55; TIP_50uLF_L_0001, 56; TIP_50uLF_L_0001, 57; TIP_50uLF_L_0001, 58; TIP_50uLF_L_0001, 59; TIP_50uLF_L_0001, 60; TIP_50uLF_L_0001, 61; TIP_50uLF_L_0001, 62; TIP_50uLF_L_0001, 63; TIP_50uLF_L_0001, 64; TIP_50uLF_L_0001, 65; TIP_50uLF_L_0001, 66; TIP_50uLF_L_0001, 67; TIP_50uLF_L_0001, 68; TIP_50uLF_L_0001, 69; TIP_50uLF_L_0001, 70; TIP_50uLF_L_0001, 71; TIP_50uLF_L_0001, 72; TIP_50uLF_L_0001, 73; TIP_50uLF_L_0001, 74; TIP_50uLF_L_0001, 75; TIP_50uLF_L_0001, 76; TIP_50uLF_L_0001, 77; TIP_50uLF_L_0001, 78; TIP_50uLF_L_0001, 79; TIP_50uLF_L_0001, 80; TIP_50uLF_L_0001, 81; TIP_50uLF_L_0001, 82; TIP_50uLF_L_0001, 83; TIP_50uLF_L_0001, 84; TIP_50uLF_L_0001, 85; TIP_50uLF_L_0001, 86; TIP_50uLF_L_0001, 87; TIP_50uLF_L_0001, 88; TIP_50uLF_L_0001, 89; TIP_50uLF_L_0001, 90; TIP_50uLF_L_0001, 91; TIP_50uLF_L_0001, 92; TIP_50uLF_L_0001, 93; TIP_50uLF_L_0001, 94; TIP_50uLF_L_0001, 95; TIP_50uLF_L_0001, 96
[2025-07-29 12:54:22,946] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 12:54:22,946] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-29 12:54:22,946] pyhamilton.interface INFO disconnected from server
[2025-07-29 12:54:23,047] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 12:54:23,048] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 12:54:23,054] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 12:54:23,058] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 12:54:23,058] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 12:54:23,059] pyhamilton.interface INFO server thread exited
[2025-07-29 12:54:23,060] root ERROR Traceback (most recent call last):
[2025-07-29 12:54:23,061] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 57, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 12:54:23,061] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 242, in multi_dispense    tracked_tip_pick_up(ham_int, tips, num_tips)    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 12:54:23,062] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_handling_wrappers.py", line 211, in tracked_tip_pick_up    ham_int.tip_pick_up(tips_poss)    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
[2025-07-29 12:54:23,062] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 913, in tip_pick_up    raise ValueError('Can only pick up 8 tips at a time')
[2025-07-29 12:54:23,063] root ERROR ValueError: Can only pick up 8 tips at a time
[2025-07-29 12:55:16,187] root INFO #############################################################################################################################
[2025-07-29 12:55:16,187] root INFO #                                                                                                                           #
[2025-07-29 12:55:16,187] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 12:55:16,187] root INFO #                                                                                                                           #
[2025-07-29 12:55:16,187] root INFO #############################################################################################################################
[2025-07-29 12:55:16,188] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 12:55:16,188] pyhamilton.interface INFO running in simulation mode
[2025-07-29 12:55:16,188] pyhamilton.interface INFO started the server thread
[2025-07-29 12:55:16,188] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 12:55:16,693] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8; TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12; TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16; TIP_50uLF_L_0001, 17; TIP_50uLF_L_0001, 18; TIP_50uLF_L_0001, 19; TIP_50uLF_L_0001, 20; TIP_50uLF_L_0001, 21; TIP_50uLF_L_0001, 22; TIP_50uLF_L_0001, 23; TIP_50uLF_L_0001, 24; TIP_50uLF_L_0001, 25; TIP_50uLF_L_0001, 26; TIP_50uLF_L_0001, 27; TIP_50uLF_L_0001, 28; TIP_50uLF_L_0001, 29; TIP_50uLF_L_0001, 30; TIP_50uLF_L_0001, 31; TIP_50uLF_L_0001, 32; TIP_50uLF_L_0001, 33; TIP_50uLF_L_0001, 34; TIP_50uLF_L_0001, 35; TIP_50uLF_L_0001, 36; TIP_50uLF_L_0001, 37; TIP_50uLF_L_0001, 38; TIP_50uLF_L_0001, 39; TIP_50uLF_L_0001, 40; TIP_50uLF_L_0001, 41; TIP_50uLF_L_0001, 42; TIP_50uLF_L_0001, 43; TIP_50uLF_L_0001, 44; TIP_50uLF_L_0001, 45; TIP_50uLF_L_0001, 46; TIP_50uLF_L_0001, 47; TIP_50uLF_L_0001, 48; TIP_50uLF_L_0001, 49; TIP_50uLF_L_0001, 50; TIP_50uLF_L_0001, 51; TIP_50uLF_L_0001, 52; TIP_50uLF_L_0001, 53; TIP_50uLF_L_0001, 54; TIP_50uLF_L_0001, 55; TIP_50uLF_L_0001, 56; TIP_50uLF_L_0001, 57; TIP_50uLF_L_0001, 58; TIP_50uLF_L_0001, 59; TIP_50uLF_L_0001, 60; TIP_50uLF_L_0001, 61; TIP_50uLF_L_0001, 62; TIP_50uLF_L_0001, 63; TIP_50uLF_L_0001, 64; TIP_50uLF_L_0001, 65; TIP_50uLF_L_0001, 66; TIP_50uLF_L_0001, 67; TIP_50uLF_L_0001, 68; TIP_50uLF_L_0001, 69; TIP_50uLF_L_0001, 70; TIP_50uLF_L_0001, 71; TIP_50uLF_L_0001, 72; TIP_50uLF_L_0001, 73; TIP_50uLF_L_0001, 74; TIP_50uLF_L_0001, 75; TIP_50uLF_L_0001, 76; TIP_50uLF_L_0001, 77; TIP_50uLF_L_0001, 78; TIP_50uLF_L_0001, 79; TIP_50uLF_L_0001, 80; TIP_50uLF_L_0001, 81; TIP_50uLF_L_0001, 82; TIP_50uLF_L_0001, 83; TIP_50uLF_L_0001, 84; TIP_50uLF_L_0001, 85; TIP_50uLF_L_0001, 86; TIP_50uLF_L_0001, 87; TIP_50uLF_L_0001, 88; TIP_50uLF_L_0001, 89; TIP_50uLF_L_0001, 90; TIP_50uLF_L_0001, 91; TIP_50uLF_L_0001, 92; TIP_50uLF_L_0001, 93; TIP_50uLF_L_0001, 94; TIP_50uLF_L_0001, 95; TIP_50uLF_L_0001, 96
[2025-07-29 12:55:16,693] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 12:55:16,693] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-29 12:55:16,693] pyhamilton.interface INFO disconnected from server
[2025-07-29 12:55:16,794] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 12:55:16,795] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 12:55:16,797] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 12:55:16,799] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 12:55:16,800] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 12:55:16,800] pyhamilton.interface INFO server thread exited
[2025-07-29 12:55:16,802] root ERROR Traceback (most recent call last):
[2025-07-29 12:55:16,803] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 57, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 12:55:16,804] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 242, in multi_dispense    tracked_tip_pick_up(ham_int, tips, num_tips)    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 12:55:16,804] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_handling_wrappers.py", line 211, in tracked_tip_pick_up    ham_int.tip_pick_up(tips_poss)    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
[2025-07-29 12:55:16,805] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 913, in tip_pick_up    raise ValueError('Can only pick up 8 tips at a time')
[2025-07-29 12:55:16,805] root ERROR ValueError: Can only pick up 8 tips at a time
[2025-07-29 12:55:36,988] root INFO #############################################################################################################################
[2025-07-29 12:55:36,988] root INFO #                                                                                                                           #
[2025-07-29 12:55:36,988] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 12:55:36,988] root INFO #                                                                                                                           #
[2025-07-29 12:55:36,988] root INFO #############################################################################################################################
[2025-07-29 12:55:36,988] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 12:55:36,989] pyhamilton.interface INFO running in simulation mode
[2025-07-29 12:55:36,989] pyhamilton.interface INFO started the server thread
[2025-07-29 12:55:36,989] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 12:55:37,507] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8; TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12; TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16; TIP_50uLF_L_0001, 17; TIP_50uLF_L_0001, 18; TIP_50uLF_L_0001, 19; TIP_50uLF_L_0001, 20; TIP_50uLF_L_0001, 21; TIP_50uLF_L_0001, 22; TIP_50uLF_L_0001, 23; TIP_50uLF_L_0001, 24; TIP_50uLF_L_0001, 25; TIP_50uLF_L_0001, 26; TIP_50uLF_L_0001, 27; TIP_50uLF_L_0001, 28; TIP_50uLF_L_0001, 29; TIP_50uLF_L_0001, 30; TIP_50uLF_L_0001, 31; TIP_50uLF_L_0001, 32; TIP_50uLF_L_0001, 33; TIP_50uLF_L_0001, 34; TIP_50uLF_L_0001, 35; TIP_50uLF_L_0001, 36; TIP_50uLF_L_0001, 37; TIP_50uLF_L_0001, 38; TIP_50uLF_L_0001, 39; TIP_50uLF_L_0001, 40; TIP_50uLF_L_0001, 41; TIP_50uLF_L_0001, 42; TIP_50uLF_L_0001, 43; TIP_50uLF_L_0001, 44; TIP_50uLF_L_0001, 45; TIP_50uLF_L_0001, 46; TIP_50uLF_L_0001, 47; TIP_50uLF_L_0001, 48; TIP_50uLF_L_0001, 49; TIP_50uLF_L_0001, 50; TIP_50uLF_L_0001, 51; TIP_50uLF_L_0001, 52; TIP_50uLF_L_0001, 53; TIP_50uLF_L_0001, 54; TIP_50uLF_L_0001, 55; TIP_50uLF_L_0001, 56; TIP_50uLF_L_0001, 57; TIP_50uLF_L_0001, 58; TIP_50uLF_L_0001, 59; TIP_50uLF_L_0001, 60; TIP_50uLF_L_0001, 61; TIP_50uLF_L_0001, 62; TIP_50uLF_L_0001, 63; TIP_50uLF_L_0001, 64; TIP_50uLF_L_0001, 65; TIP_50uLF_L_0001, 66; TIP_50uLF_L_0001, 67; TIP_50uLF_L_0001, 68; TIP_50uLF_L_0001, 69; TIP_50uLF_L_0001, 70; TIP_50uLF_L_0001, 71; TIP_50uLF_L_0001, 72; TIP_50uLF_L_0001, 73; TIP_50uLF_L_0001, 74; TIP_50uLF_L_0001, 75; TIP_50uLF_L_0001, 76; TIP_50uLF_L_0001, 77; TIP_50uLF_L_0001, 78; TIP_50uLF_L_0001, 79; TIP_50uLF_L_0001, 80; TIP_50uLF_L_0001, 81; TIP_50uLF_L_0001, 82; TIP_50uLF_L_0001, 83; TIP_50uLF_L_0001, 84; TIP_50uLF_L_0001, 85; TIP_50uLF_L_0001, 86; TIP_50uLF_L_0001, 87; TIP_50uLF_L_0001, 88; TIP_50uLF_L_0001, 89; TIP_50uLF_L_0001, 90; TIP_50uLF_L_0001, 91; TIP_50uLF_L_0001, 92; TIP_50uLF_L_0001, 93; TIP_50uLF_L_0001, 94; TIP_50uLF_L_0001, 95; TIP_50uLF_L_0001, 96
[2025-07-29 12:55:37,507] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 12:55:37,507] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-29 12:55:37,508] pyhamilton.interface INFO disconnected from server
[2025-07-29 12:55:37,608] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 12:55:37,609] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 12:55:37,612] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 12:55:37,614] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 12:55:37,615] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 12:55:37,615] pyhamilton.interface INFO server thread exited
[2025-07-29 12:55:37,619] root ERROR Traceback (most recent call last):
[2025-07-29 12:55:37,620] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 57, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 12:55:37,620] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 243, in multi_dispense    tracked_tip_pick_up(ham_int, tips, num_tips)    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 12:55:37,621] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_handling_wrappers.py", line 211, in tracked_tip_pick_up    ham_int.tip_pick_up(tips_poss)    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
[2025-07-29 12:55:37,621] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 913, in tip_pick_up    raise ValueError('Can only pick up 8 tips at a time')
[2025-07-29 12:55:37,621] root ERROR ValueError: Can only pick up 8 tips at a time
[2025-07-29 12:56:03,847] root INFO #############################################################################################################################
[2025-07-29 12:56:03,848] root INFO #                                                                                                                           #
[2025-07-29 12:56:03,848] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 12:56:03,848] root INFO #                                                                                                                           #
[2025-07-29 12:56:03,848] root INFO #############################################################################################################################
[2025-07-29 12:56:03,848] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 12:56:03,848] pyhamilton.interface INFO running in simulation mode
[2025-07-29 12:56:03,848] pyhamilton.interface INFO started the server thread
[2025-07-29 12:56:03,848] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 12:56:04,357] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8; TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12; TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16; TIP_50uLF_L_0001, 17; TIP_50uLF_L_0001, 18; TIP_50uLF_L_0001, 19; TIP_50uLF_L_0001, 20; TIP_50uLF_L_0001, 21; TIP_50uLF_L_0001, 22; TIP_50uLF_L_0001, 23; TIP_50uLF_L_0001, 24; TIP_50uLF_L_0001, 25; TIP_50uLF_L_0001, 26; TIP_50uLF_L_0001, 27; TIP_50uLF_L_0001, 28; TIP_50uLF_L_0001, 29; TIP_50uLF_L_0001, 30; TIP_50uLF_L_0001, 31; TIP_50uLF_L_0001, 32; TIP_50uLF_L_0001, 33; TIP_50uLF_L_0001, 34; TIP_50uLF_L_0001, 35; TIP_50uLF_L_0001, 36; TIP_50uLF_L_0001, 37; TIP_50uLF_L_0001, 38; TIP_50uLF_L_0001, 39; TIP_50uLF_L_0001, 40; TIP_50uLF_L_0001, 41; TIP_50uLF_L_0001, 42; TIP_50uLF_L_0001, 43; TIP_50uLF_L_0001, 44; TIP_50uLF_L_0001, 45; TIP_50uLF_L_0001, 46; TIP_50uLF_L_0001, 47; TIP_50uLF_L_0001, 48; TIP_50uLF_L_0001, 49; TIP_50uLF_L_0001, 50; TIP_50uLF_L_0001, 51; TIP_50uLF_L_0001, 52; TIP_50uLF_L_0001, 53; TIP_50uLF_L_0001, 54; TIP_50uLF_L_0001, 55; TIP_50uLF_L_0001, 56; TIP_50uLF_L_0001, 57; TIP_50uLF_L_0001, 58; TIP_50uLF_L_0001, 59; TIP_50uLF_L_0001, 60; TIP_50uLF_L_0001, 61; TIP_50uLF_L_0001, 62; TIP_50uLF_L_0001, 63; TIP_50uLF_L_0001, 64; TIP_50uLF_L_0001, 65; TIP_50uLF_L_0001, 66; TIP_50uLF_L_0001, 67; TIP_50uLF_L_0001, 68; TIP_50uLF_L_0001, 69; TIP_50uLF_L_0001, 70; TIP_50uLF_L_0001, 71; TIP_50uLF_L_0001, 72; TIP_50uLF_L_0001, 73; TIP_50uLF_L_0001, 74; TIP_50uLF_L_0001, 75; TIP_50uLF_L_0001, 76; TIP_50uLF_L_0001, 77; TIP_50uLF_L_0001, 78; TIP_50uLF_L_0001, 79; TIP_50uLF_L_0001, 80; TIP_50uLF_L_0001, 81; TIP_50uLF_L_0001, 82; TIP_50uLF_L_0001, 83; TIP_50uLF_L_0001, 84; TIP_50uLF_L_0001, 85; TIP_50uLF_L_0001, 86; TIP_50uLF_L_0001, 87; TIP_50uLF_L_0001, 88; TIP_50uLF_L_0001, 89; TIP_50uLF_L_0001, 90; TIP_50uLF_L_0001, 91; TIP_50uLF_L_0001, 92; TIP_50uLF_L_0001, 93; TIP_50uLF_L_0001, 94; TIP_50uLF_L_0001, 95; TIP_50uLF_L_0001, 96
[2025-07-29 12:56:04,357] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 12:56:04,357] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-29 12:56:04,357] pyhamilton.interface INFO disconnected from server
[2025-07-29 12:56:04,458] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 12:56:04,458] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 12:56:04,461] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 12:56:04,463] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 12:56:04,464] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 12:56:04,464] pyhamilton.interface INFO server thread exited
[2025-07-29 12:56:04,467] root ERROR Traceback (most recent call last):
[2025-07-29 12:56:04,468] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 57, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 12:56:04,469] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 243, in multi_dispense    tracked_tip_pick_up(ham_int, tips, num_tips)    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 12:56:04,469] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_handling_wrappers.py", line 211, in tracked_tip_pick_up    ham_int.tip_pick_up(tips_poss)    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
[2025-07-29 12:56:04,469] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 913, in tip_pick_up    raise ValueError('Can only pick up 8 tips at a time')
[2025-07-29 12:56:04,470] root ERROR ValueError: Can only pick up 8 tips at a time
[2025-07-29 12:56:55,211] root INFO #############################################################################################################################
[2025-07-29 12:56:55,211] root INFO #                                                                                                                           #
[2025-07-29 12:56:55,211] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 12:56:55,211] root INFO #                                                                                                                           #
[2025-07-29 12:56:55,211] root INFO #############################################################################################################################
[2025-07-29 12:56:55,212] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 12:56:55,212] pyhamilton.interface INFO running in simulation mode
[2025-07-29 12:56:55,212] pyhamilton.interface INFO started the server thread
[2025-07-29 12:56:55,212] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 12:56:55,713] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8; TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12; TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16; TIP_50uLF_L_0001, 17; TIP_50uLF_L_0001, 18; TIP_50uLF_L_0001, 19; TIP_50uLF_L_0001, 20; TIP_50uLF_L_0001, 21; TIP_50uLF_L_0001, 22; TIP_50uLF_L_0001, 23; TIP_50uLF_L_0001, 24; TIP_50uLF_L_0001, 25; TIP_50uLF_L_0001, 26; TIP_50uLF_L_0001, 27; TIP_50uLF_L_0001, 28; TIP_50uLF_L_0001, 29; TIP_50uLF_L_0001, 30; TIP_50uLF_L_0001, 31; TIP_50uLF_L_0001, 32; TIP_50uLF_L_0001, 33; TIP_50uLF_L_0001, 34; TIP_50uLF_L_0001, 35; TIP_50uLF_L_0001, 36; TIP_50uLF_L_0001, 37; TIP_50uLF_L_0001, 38; TIP_50uLF_L_0001, 39; TIP_50uLF_L_0001, 40; TIP_50uLF_L_0001, 41; TIP_50uLF_L_0001, 42; TIP_50uLF_L_0001, 43; TIP_50uLF_L_0001, 44; TIP_50uLF_L_0001, 45; TIP_50uLF_L_0001, 46; TIP_50uLF_L_0001, 47; TIP_50uLF_L_0001, 48; TIP_50uLF_L_0001, 49; TIP_50uLF_L_0001, 50; TIP_50uLF_L_0001, 51; TIP_50uLF_L_0001, 52; TIP_50uLF_L_0001, 53; TIP_50uLF_L_0001, 54; TIP_50uLF_L_0001, 55; TIP_50uLF_L_0001, 56; TIP_50uLF_L_0001, 57; TIP_50uLF_L_0001, 58; TIP_50uLF_L_0001, 59; TIP_50uLF_L_0001, 60; TIP_50uLF_L_0001, 61; TIP_50uLF_L_0001, 62; TIP_50uLF_L_0001, 63; TIP_50uLF_L_0001, 64; TIP_50uLF_L_0001, 65; TIP_50uLF_L_0001, 66; TIP_50uLF_L_0001, 67; TIP_50uLF_L_0001, 68; TIP_50uLF_L_0001, 69; TIP_50uLF_L_0001, 70; TIP_50uLF_L_0001, 71; TIP_50uLF_L_0001, 72; TIP_50uLF_L_0001, 73; TIP_50uLF_L_0001, 74; TIP_50uLF_L_0001, 75; TIP_50uLF_L_0001, 76; TIP_50uLF_L_0001, 77; TIP_50uLF_L_0001, 78; TIP_50uLF_L_0001, 79; TIP_50uLF_L_0001, 80; TIP_50uLF_L_0001, 81; TIP_50uLF_L_0001, 82; TIP_50uLF_L_0001, 83; TIP_50uLF_L_0001, 84; TIP_50uLF_L_0001, 85; TIP_50uLF_L_0001, 86; TIP_50uLF_L_0001, 87; TIP_50uLF_L_0001, 88; TIP_50uLF_L_0001, 89; TIP_50uLF_L_0001, 90; TIP_50uLF_L_0001, 91; TIP_50uLF_L_0001, 92; TIP_50uLF_L_0001, 93; TIP_50uLF_L_0001, 94; TIP_50uLF_L_0001, 95; TIP_50uLF_L_0001, 96
[2025-07-29 12:56:55,713] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 12:56:55,714] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-29 12:56:55,714] pyhamilton.interface INFO disconnected from server
[2025-07-29 12:56:55,814] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 12:56:55,815] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 12:56:55,817] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 12:56:55,819] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 12:56:55,820] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 12:56:55,820] pyhamilton.interface INFO server thread exited
[2025-07-29 12:56:55,822] root ERROR Traceback (most recent call last):
[2025-07-29 12:56:55,823] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 57, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 12:56:55,823] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 238, in multi_dispense    tracked_tip_pick_up(ham_int, tips, num_tips)    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 12:56:55,824] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_handling_wrappers.py", line 211, in tracked_tip_pick_up    ham_int.tip_pick_up(tips_poss)    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
[2025-07-29 12:56:55,824] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 913, in tip_pick_up    raise ValueError('Can only pick up 8 tips at a time')
[2025-07-29 12:56:55,824] root ERROR ValueError: Can only pick up 8 tips at a time
[2025-07-29 14:21:04,946] root INFO #############################################################################################################################
[2025-07-29 14:21:04,946] root INFO #                                                                                                                           #
[2025-07-29 14:21:04,946] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 14:21:04,946] root INFO #                                                                                                                           #
[2025-07-29 14:21:04,946] root INFO #############################################################################################################################
[2025-07-29 14:21:04,947] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 14:21:04,947] pyhamilton.interface INFO running in simulation mode
[2025-07-29 14:21:04,947] pyhamilton.interface INFO started the server thread
[2025-07-29 14:21:04,947] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 14:21:05,441] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-29 14:21:05,663] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 14:21:05,664] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-29 14:21:05,664] pyhamilton.interface INFO disconnected from server
[2025-07-29 14:21:05,765] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 14:21:05,765] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 14:21:05,769] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 14:21:05,771] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 14:21:05,772] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 14:21:05,772] pyhamilton.interface INFO server thread exited
[2025-07-29 14:21:05,775] root ERROR Traceback (most recent call last):
[2025-07-29 14:21:05,776] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 57, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 14:21:05,776] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 243, in multi_dispense    dispense_batches = build_dispense_batches(aspiration_volumes, column_dispense_positions, column_dispense_volumes)                                              ^^^^^^^^^^^^^^^^^^
[2025-07-29 14:21:05,777] root ERROR UnboundLocalError: cannot access local variable 'aspiration_volumes' where it is not associated with a value
[2025-07-29 14:22:29,527] root INFO #############################################################################################################################
[2025-07-29 14:22:29,528] root INFO #                                                                                                                           #
[2025-07-29 14:22:29,528] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 14:22:29,528] root INFO #                                                                                                                           #
[2025-07-29 14:22:29,528] root INFO #############################################################################################################################
[2025-07-29 14:22:29,529] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 14:22:29,529] pyhamilton.interface INFO running in simulation mode
[2025-07-29 14:22:29,529] pyhamilton.interface INFO started the server thread
[2025-07-29 14:22:29,529] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 14:22:29,937] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-29 14:22:30,297] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-29 14:22:30,297] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a2393316b', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1;TIP_50uLF_L_0001, 2;TIP_50uLF_L_0001, 3;TIP_50uLF_L_0001, 4;TIP_50uLF_L_0001, 5;TIP_50uLF_L_0001, 6;TIP_50uLF_L_0001, 7;TIP_50uLF_L_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:22:30,298] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0}
[2025-07-29 14:22:30,298] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a23933412', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 0, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:22:30,299] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 14:22:30,299] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-29 14:22:30,299] pyhamilton.interface INFO disconnected from server
[2025-07-29 14:22:30,400] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 14:22:30,401] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 14:22:30,404] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 14:22:30,406] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 14:22:30,407] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 14:22:30,407] pyhamilton.interface INFO server thread exited
[2025-07-29 14:22:30,411] root ERROR Traceback (most recent call last):
[2025-07-29 14:22:30,416] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 57, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 14:22:30,417] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 267, in multi_dispense    response = ham_int.aspirate(positions, vols, liquidClass=liquid_class,                        mixCycles=0, mixVolume=0,                        liquidHeight=liquid_height,                        capacitiveLLD=1, aspirateMode=2,                        submergeDepth=2)
[2025-07-29 14:22:30,417] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 797, in aspirate    '; '.join((labware_pos_str(*pt) if pt else '(skip)' for pt in pos_tuples)) +    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 14:22:30,417] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 797, in <genexpr>    '; '.join((labware_pos_str(*pt) if pt else '(skip)' for pt in pos_tuples)) +               ~~~~~~~~~~~~~~~^^^^^
[2025-07-29 14:22:30,419] root ERROR TypeError: labware_pos_str() takes 2 positional arguments but 96 were given
[2025-07-29 14:25:30,907] root INFO #############################################################################################################################
[2025-07-29 14:25:30,907] root INFO #                                                                                                                           #
[2025-07-29 14:25:30,907] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 14:25:30,907] root INFO #                                                                                                                           #
[2025-07-29 14:25:30,907] root INFO #############################################################################################################################
[2025-07-29 14:25:30,908] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 14:25:30,908] pyhamilton.interface INFO running in simulation mode
[2025-07-29 14:25:30,908] pyhamilton.interface INFO started the server thread
[2025-07-29 14:25:30,908] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 14:25:31,323] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-29 14:25:31,568] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-29 14:25:31,569] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a2e612bd2', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1;TIP_50uLF_L_0001, 2;TIP_50uLF_L_0001, 3;TIP_50uLF_L_0001, 4;TIP_50uLF_L_0001, 5;TIP_50uLF_L_0001, 6;TIP_50uLF_L_0001, 7;TIP_50uLF_L_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:25:31,569] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0}
[2025-07-29 14:25:31,569] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a2e612ed8', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 0, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:25:31,570] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 14:25:31,571] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-29 14:25:31,571] pyhamilton.interface INFO disconnected from server
[2025-07-29 14:25:31,671] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 14:25:31,672] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 14:25:31,675] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 14:25:31,677] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 14:25:31,678] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 14:25:31,678] pyhamilton.interface INFO server thread exited
[2025-07-29 14:25:31,681] root ERROR Traceback (most recent call last):
[2025-07-29 14:25:31,683] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 57, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 14:25:31,684] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 267, in multi_dispense    response = ham_int.aspirate(positions, vols, liquidClass=liquid_class,                        mixCycles=0, mixVolume=0,                        liquidHeight=liquid_height,                        capacitiveLLD=1, aspirateMode=2,                        submergeDepth=2)
[2025-07-29 14:25:31,684] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 797, in aspirate    '; '.join((labware_pos_str(*pt) if pt else '(skip)' for pt in pos_tuples)) +    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 14:25:31,684] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 797, in <genexpr>    '; '.join((labware_pos_str(*pt) if pt else '(skip)' for pt in pos_tuples)) +               ~~~~~~~~~~~~~~~^^^^^
[2025-07-29 14:25:31,685] root ERROR TypeError: labware_pos_str() takes 2 positional arguments but 96 were given
[2025-07-29 14:26:02,538] root INFO #############################################################################################################################
[2025-07-29 14:26:02,539] root INFO #                                                                                                                           #
[2025-07-29 14:26:02,539] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 14:26:02,539] root INFO #                                                                                                                           #
[2025-07-29 14:26:02,539] root INFO #############################################################################################################################
[2025-07-29 14:26:02,540] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 14:26:02,540] pyhamilton.interface INFO running in simulation mode
[2025-07-29 14:26:02,540] pyhamilton.interface INFO started the server thread
[2025-07-29 14:26:02,540] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 14:26:02,952] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-29 14:26:03,171] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-29 14:26:03,172] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a304364a1', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1;TIP_50uLF_L_0001, 2;TIP_50uLF_L_0001, 3;TIP_50uLF_L_0001, 4;TIP_50uLF_L_0001, 5;TIP_50uLF_L_0001, 6;TIP_50uLF_L_0001, 7;TIP_50uLF_L_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:26:03,172] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0}
[2025-07-29 14:26:03,172] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a30436749', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 0, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:26:03,173] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 14:26:03,173] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-29 14:26:03,173] pyhamilton.interface INFO disconnected from server
[2025-07-29 14:26:03,274] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 14:26:03,275] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 14:26:03,277] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 14:26:03,279] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 14:26:03,280] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 14:26:03,280] pyhamilton.interface INFO server thread exited
[2025-07-29 14:26:03,283] root ERROR Traceback (most recent call last):
[2025-07-29 14:26:03,285] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 57, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 14:26:03,287] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 268, in multi_dispense    response = ham_int.aspirate(positions, vols, liquidClass=liquid_class,                        mixCycles=0, mixVolume=0,                        liquidHeight=liquid_height,                        capacitiveLLD=1, aspirateMode=2,                        submergeDepth=2)
[2025-07-29 14:26:03,287] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 797, in aspirate    '; '.join((labware_pos_str(*pt) if pt else '(skip)' for pt in pos_tuples)) +    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 14:26:03,288] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 797, in <genexpr>    '; '.join((labware_pos_str(*pt) if pt else '(skip)' for pt in pos_tuples)) +               ~~~~~~~~~~~~~~~^^^^^
[2025-07-29 14:26:03,288] root ERROR TypeError: labware_pos_str() takes 2 positional arguments but 96 were given
[2025-07-29 14:27:43,466] root INFO #############################################################################################################################
[2025-07-29 14:27:43,467] root INFO #                                                                                                                           #
[2025-07-29 14:27:43,467] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 14:27:43,467] root INFO #                                                                                                                           #
[2025-07-29 14:27:43,467] root INFO #############################################################################################################################
[2025-07-29 14:27:43,468] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 14:27:43,468] pyhamilton.interface INFO running in simulation mode
[2025-07-29 14:27:43,468] pyhamilton.interface INFO started the server thread
[2025-07-29 14:27:43,468] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 14:27:43,880] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-29 14:27:44,239] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-29 14:27:44,239] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a3649906b', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1;TIP_50uLF_L_0001, 2;TIP_50uLF_L_0001, 3;TIP_50uLF_L_0001, 4;TIP_50uLF_L_0001, 5;TIP_50uLF_L_0001, 6;TIP_50uLF_L_0001, 7;TIP_50uLF_L_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:27:44,240] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:27:44,240] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a36499338', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:27:44,241] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:27:44,241] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a364997b4', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:27:44,242] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 14:27:44,242] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-29 14:27:44,242] pyhamilton.interface INFO disconnected from server
[2025-07-29 14:27:44,342] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 14:27:44,343] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 14:27:44,346] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 14:27:44,348] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 14:27:44,348] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 14:27:44,349] pyhamilton.interface INFO server thread exited
[2025-07-29 14:27:44,351] root ERROR Traceback (most recent call last):
[2025-07-29 14:27:44,353] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 57, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 14:27:44,353] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 279, in multi_dispense    ham_int.eject_tips()    ^^^^^^^^^^^^^^^^^^
[2025-07-29 14:27:44,354] root ERROR AttributeError: 'HamiltonInterface' object has no attribute 'eject_tips'
[2025-07-29 14:28:35,379] root INFO #############################################################################################################################
[2025-07-29 14:28:35,380] root INFO #                                                                                                                           #
[2025-07-29 14:28:35,380] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 14:28:35,380] root INFO #                                                                                                                           #
[2025-07-29 14:28:35,380] root INFO #############################################################################################################################
[2025-07-29 14:28:35,380] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 14:28:35,381] pyhamilton.interface INFO running in simulation mode
[2025-07-29 14:28:35,381] pyhamilton.interface INFO started the server thread
[2025-07-29 14:28:35,381] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 14:28:35,787] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-29 14:28:36,259] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-29 14:28:36,259] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a396351ea', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1;TIP_50uLF_L_0001, 2;TIP_50uLF_L_0001, 3;TIP_50uLF_L_0001, 4;TIP_50uLF_L_0001, 5;TIP_50uLF_L_0001, 6;TIP_50uLF_L_0001, 7;TIP_50uLF_L_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:28:36,259] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:28:36,260] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a39635530', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:28:36,261] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:28:36,261] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a396359d1', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:28:36,261] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:28:36,262] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a39635ca6', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:28:36,262] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:28:36,262] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a39635eec', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:28:36,263] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:28:36,263] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a39636174', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:28:36,263] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:28:36,263] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a3963639b', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:28:36,264] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:28:36,264] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a3963661a', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:28:36,264] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:28:36,264] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a3963678e', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:28:36,265] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:28:36,265] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a39636a13', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:28:36,265] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:28:36,266] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a39636c10', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:28:36,266] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:28:36,266] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a39636e9f', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:28:36,267] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:28:36,267] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a396370b8', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:28:36,267] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:28:36,267] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a3963731c', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:28:36,334] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12; TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16
[2025-07-29 14:28:36,335] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a39647a40', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9;TIP_50uLF_L_0001, 10;TIP_50uLF_L_0001, 11;TIP_50uLF_L_0001, 12;TIP_50uLF_L_0001, 13;TIP_50uLF_L_0001, 14;TIP_50uLF_L_0001, 15;TIP_50uLF_L_0001, 16', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:28:36,335] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:28:36,335] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a39647cf4', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:28:36,336] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:28:36,337] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a396481e0', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:28:36,337] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:28:36,337] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a3964848f', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:28:36,338] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:28:36,338] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a3964868f', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:28:36,338] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:28:36,339] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a396489ee', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:28:36,339] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:28:36,339] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a39648c6c', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:28:36,340] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:28:36,340] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a39648f2b', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:28:36,340] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:28:36,341] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a39649125', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:28:36,341] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:28:36,341] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a39649398', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:28:36,342] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:28:36,342] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a396495b1', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:28:36,342] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:28:36,342] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a39649847', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:28:36,343] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:28:36,343] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a39649a30', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:28:36,343] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:28:36,344] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a39649cb2', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:28:36,344] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 14:28:36,344] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-29 14:28:36,344] pyhamilton.interface INFO disconnected from server
[2025-07-29 14:28:36,444] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 14:28:36,445] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 14:28:36,448] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 14:28:36,451] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 14:28:36,452] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 14:28:36,452] pyhamilton.interface INFO server thread exited
[2025-07-29 14:32:53,248] root INFO #############################################################################################################################
[2025-07-29 14:32:53,249] root INFO #                                                                                                                           #
[2025-07-29 14:32:53,249] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 14:32:53,249] root INFO #                                                                                                                           #
[2025-07-29 14:32:53,249] root INFO #############################################################################################################################
[2025-07-29 14:32:53,249] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 14:32:53,249] pyhamilton.interface INFO running in simulation mode
[2025-07-29 14:32:53,250] pyhamilton.interface INFO started the server thread
[2025-07-29 14:32:53,250] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 14:32:53,676] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-29 14:32:53,927] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-29 14:32:53,927] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a48bf0726', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1;TIP_50uLF_L_0001, 2;TIP_50uLF_L_0001, 3;TIP_50uLF_L_0001, 4;TIP_50uLF_L_0001, 5;TIP_50uLF_L_0001, 6;TIP_50uLF_L_0001, 7;TIP_50uLF_L_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:32:53,928] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:32:53,928] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a48bf0a03', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:32:53,929] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 14:32:53,929] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-29 14:32:53,929] pyhamilton.interface INFO disconnected from server
[2025-07-29 14:32:54,030] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 14:32:54,030] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 14:32:54,034] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 14:32:54,036] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 14:32:54,036] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 14:32:54,037] pyhamilton.interface INFO server thread exited
[2025-07-29 14:32:54,039] root ERROR Traceback (most recent call last):
[2025-07-29 14:32:54,040] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 57, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 14:32:54,040] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 283, in multi_dispense    print_transfers(aspiration_positions, column, column_volumes)    ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 14:32:54,040] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 100, in print_transfers    source_plate, source_well_idx = source_well_tuple    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 14:32:54,041] root ERROR ValueError: too many values to unpack (expected 2)
[2025-07-29 14:33:55,294] root INFO #############################################################################################################################
[2025-07-29 14:33:55,294] root INFO #                                                                                                                           #
[2025-07-29 14:33:55,295] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 14:33:55,295] root INFO #                                                                                                                           #
[2025-07-29 14:33:55,295] root INFO #############################################################################################################################
[2025-07-29 14:33:55,295] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 14:33:55,295] pyhamilton.interface INFO running in simulation mode
[2025-07-29 14:33:55,295] pyhamilton.interface INFO started the server thread
[2025-07-29 14:33:55,295] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 14:33:55,684] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-29 14:33:55,924] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-29 14:33:55,924] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a4c71068d', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1;TIP_50uLF_L_0001, 2;TIP_50uLF_L_0001, 3;TIP_50uLF_L_0001, 4;TIP_50uLF_L_0001, 5;TIP_50uLF_L_0001, 6;TIP_50uLF_L_0001, 7;TIP_50uLF_L_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:33:55,925] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:33:55,925] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a4c710977', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:33:55,926] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 14:33:55,926] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-29 14:33:55,926] pyhamilton.interface INFO disconnected from server
[2025-07-29 14:33:56,027] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 14:33:56,027] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 14:33:56,030] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 14:33:56,032] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 14:33:56,033] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 14:33:56,033] pyhamilton.interface INFO server thread exited
[2025-07-29 14:33:56,037] root ERROR Traceback (most recent call last):
[2025-07-29 14:33:56,038] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 57, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 14:33:56,039] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 287, in multi_dispense    print_transfers(aspiration_positions, column, column_volumes)    ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 14:33:56,040] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 104, in print_transfers    source_plate, source_well_idx = source_well_tuple    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 14:33:56,041] root ERROR ValueError: too many values to unpack (expected 2)
[2025-07-29 14:35:00,020] root INFO #############################################################################################################################
[2025-07-29 14:35:00,020] root INFO #                                                                                                                           #
[2025-07-29 14:35:00,020] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 14:35:00,020] root INFO #                                                                                                                           #
[2025-07-29 14:35:00,020] root INFO #############################################################################################################################
[2025-07-29 14:35:00,021] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 14:35:00,021] pyhamilton.interface INFO running in simulation mode
[2025-07-29 14:35:00,021] pyhamilton.interface INFO started the server thread
[2025-07-29 14:35:00,021] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 14:35:00,416] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-29 14:35:00,771] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-29 14:35:00,771] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a504e81a8', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1;TIP_50uLF_L_0001, 2;TIP_50uLF_L_0001, 3;TIP_50uLF_L_0001, 4;TIP_50uLF_L_0001, 5;TIP_50uLF_L_0001, 6;TIP_50uLF_L_0001, 7;TIP_50uLF_L_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:35:00,771] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:35:00,772] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a504e8507', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:00,775] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:00,775] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a504e9280', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:00,776] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:00,776] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a504e95ad', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:00,779] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:00,779] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a504ea2ad', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:00,780] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:00,780] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a504ea52a', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:00,783] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:00,783] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a504eb1cd', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:00,784] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:00,784] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a504eb470', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:00,786] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:00,786] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a504ebe55', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:00,787] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:00,787] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a504ec218', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:00,789] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:00,789] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a504ec824', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:00,789] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:00,790] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a504ecacd', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:00,790] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:00,791] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a504ecfc8', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:00,792] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:00,792] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a504ed404', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:00,861] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12; TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16
[2025-07-29 14:35:00,861] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a504fe24c', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9;TIP_50uLF_L_0001, 10;TIP_50uLF_L_0001, 11;TIP_50uLF_L_0001, 12;TIP_50uLF_L_0001, 13;TIP_50uLF_L_0001, 14;TIP_50uLF_L_0001, 15;TIP_50uLF_L_0001, 16', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:35:00,861] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:35:00,862] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a504fe4e6', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:00,865] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:00,865] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a504ff08c', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:00,865] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:00,866] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a504ff3d5', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:00,867] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:00,867] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a504ffabb', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:00,868] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:00,868] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a504ffe1c', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:00,869] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:00,869] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a50500153', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:00,869] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:00,870] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a505003cf', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:00,870] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:00,870] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a505006f7', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:00,871] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:00,871] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a505009a0', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:00,872] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:00,872] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a50500ce1', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:00,873] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:00,873] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a505010f8', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:00,874] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:00,874] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a505016ae', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:00,875] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:00,875] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a5050198e', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:00,875] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 14:35:00,875] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-29 14:35:00,875] pyhamilton.interface INFO disconnected from server
[2025-07-29 14:35:00,976] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 14:35:00,976] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 14:35:00,980] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 14:35:00,983] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 14:35:00,984] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 14:35:00,984] pyhamilton.interface INFO server thread exited
[2025-07-29 14:35:19,885] root INFO #############################################################################################################################
[2025-07-29 14:35:19,885] root INFO #                                                                                                                           #
[2025-07-29 14:35:19,885] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 14:35:19,885] root INFO #                                                                                                                           #
[2025-07-29 14:35:19,885] root INFO #############################################################################################################################
[2025-07-29 14:35:19,886] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 14:35:19,886] pyhamilton.interface INFO running in simulation mode
[2025-07-29 14:35:19,886] pyhamilton.interface INFO started the server thread
[2025-07-29 14:35:19,887] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 14:35:20,286] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-29 14:35:20,582] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-29 14:35:20,582] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a517cce7e', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1;TIP_50uLF_L_0001, 2;TIP_50uLF_L_0001, 3;TIP_50uLF_L_0001, 4;TIP_50uLF_L_0001, 5;TIP_50uLF_L_0001, 6;TIP_50uLF_L_0001, 7;TIP_50uLF_L_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:35:20,583] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:35:20,583] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a517ccff6', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:20,584] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:20,584] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a517cd6eb', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:20,585] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:20,585] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a517cda22', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:20,586] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:20,586] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a517cdd87', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:20,587] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:20,587] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a517ce086', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:20,588] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:20,588] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a517ce41c', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:20,588] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:20,588] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a517ce694', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:20,590] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:20,591] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a517cef08', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:20,592] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:20,592] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a517cf363', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:20,592] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:20,593] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a517cf6b1', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:20,593] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:20,593] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a517cf974', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:20,594] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:20,594] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a517cfce9', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:20,595] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:20,595] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a517cffd7', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:20,666] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12; TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16
[2025-07-29 14:35:20,666] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a517e1519', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9;TIP_50uLF_L_0001, 10;TIP_50uLF_L_0001, 11;TIP_50uLF_L_0001, 12;TIP_50uLF_L_0001, 13;TIP_50uLF_L_0001, 14;TIP_50uLF_L_0001, 15;TIP_50uLF_L_0001, 16', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:35:20,666] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:35:20,666] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a517e1620', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:20,668] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:20,668] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a517e1edf', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:20,669] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:20,669] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a517e216e', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:20,670] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:20,671] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a517e2767', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:20,671] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:20,671] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a517e2ac1', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:20,673] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:20,673] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a517e2fdc', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:20,674] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:20,674] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a517e33dc', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:20,675] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:20,675] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a517e39e7', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:20,676] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:20,676] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a517e3c65', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:20,678] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:20,678] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a517e4373', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:20,678] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:20,678] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a517e461d', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:20,679] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:35:20,680] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a517e4a8d', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:35:20,680] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:35:20,680] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a517e4d31', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:35:20,680] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 14:35:20,680] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-29 14:35:20,680] pyhamilton.interface INFO disconnected from server
[2025-07-29 14:35:20,781] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 14:35:20,782] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 14:35:20,785] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 14:35:20,787] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 14:35:20,788] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 14:35:20,788] pyhamilton.interface INFO server thread exited
[2025-07-29 14:36:07,694] root INFO #############################################################################################################################
[2025-07-29 14:36:07,694] root INFO #                                                                                                                           #
[2025-07-29 14:36:07,694] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 14:36:07,694] root INFO #                                                                                                                           #
[2025-07-29 14:36:07,694] root INFO #############################################################################################################################
[2025-07-29 14:36:07,695] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 14:36:07,695] pyhamilton.interface INFO running in simulation mode
[2025-07-29 14:36:07,695] pyhamilton.interface INFO started the server thread
[2025-07-29 14:36:07,695] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 14:36:08,082] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-29 14:36:08,543] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-29 14:36:08,543] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a54589fd8', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1;TIP_50uLF_L_0001, 2;TIP_50uLF_L_0001, 3;TIP_50uLF_L_0001, 4;TIP_50uLF_L_0001, 5;TIP_50uLF_L_0001, 6;TIP_50uLF_L_0001, 7;TIP_50uLF_L_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:36:08,543] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:36:08,543] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a5458a11a', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:36:08,544] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:36:08,545] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a5458a73b', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:36:08,545] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:36:08,545] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a5458aa0c', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:36:08,547] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:36:08,547] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a5458b117', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:36:08,548] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:36:08,548] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a5458b3b9', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:36:08,550] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:36:08,550] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a5458bcc7', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:36:08,551] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:36:08,551] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a5458bf78', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:36:08,552] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:36:08,553] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a5458c629', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:36:08,553] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:36:08,553] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a5458c88b', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:36:08,555] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:36:08,555] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a5458d041', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:36:08,556] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:36:08,556] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a5458d3b3', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:36:08,557] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:36:08,557] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a5458d7f2', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:36:08,558] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:36:08,558] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a5458db6b', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:36:08,620] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12; TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16
[2025-07-29 14:36:08,620] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a5459ccec', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9;TIP_50uLF_L_0001, 10;TIP_50uLF_L_0001, 11;TIP_50uLF_L_0001, 12;TIP_50uLF_L_0001, 13;TIP_50uLF_L_0001, 14;TIP_50uLF_L_0001, 15;TIP_50uLF_L_0001, 16', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:36:08,620] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:36:08,620] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a5459cdb6', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:36:08,621] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:36:08,622] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a5459d404', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:36:08,622] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:36:08,622] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a5459d6c3', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:36:08,623] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:36:08,623] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a5459da09', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:36:08,624] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:36:08,624] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a5459de31', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:36:08,625] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:36:08,625] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a5459e186', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:36:08,626] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:36:08,626] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a5459e451', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:36:08,627] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:36:08,627] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a5459e863', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:36:08,627] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:36:08,627] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a5459eac2', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:36:08,629] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:36:08,629] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a5459efde', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:36:08,629] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:36:08,629] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a5459f24c', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:36:08,630] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:36:08,631] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a5459f6d7', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:36:08,631] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:36:08,631] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a5459f93a', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:36:08,631] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 14:36:08,631] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-29 14:36:08,631] pyhamilton.interface INFO disconnected from server
[2025-07-29 14:36:08,732] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 14:36:08,732] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 14:36:08,736] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 14:36:08,739] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 14:36:08,740] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 14:36:08,740] pyhamilton.interface INFO server thread exited
[2025-07-29 14:41:06,703] root INFO #############################################################################################################################
[2025-07-29 14:41:06,703] root INFO #                                                                                                                           #
[2025-07-29 14:41:06,703] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 14:41:06,703] root INFO #                                                                                                                           #
[2025-07-29 14:41:06,703] root INFO #############################################################################################################################
[2025-07-29 14:41:06,704] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 14:41:06,704] pyhamilton.interface INFO running in simulation mode
[2025-07-29 14:41:06,704] pyhamilton.interface INFO started the server thread
[2025-07-29 14:41:06,704] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 14:41:07,124] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-29 14:41:07,484] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-29 14:41:07,484] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a662a1c0f', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1;TIP_50uLF_L_0001, 2;TIP_50uLF_L_0001, 3;TIP_50uLF_L_0001, 4;TIP_50uLF_L_0001, 5;TIP_50uLF_L_0001, 6;TIP_50uLF_L_0001, 7;TIP_50uLF_L_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:07,484] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:07,485] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a662a1d67', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:07,486] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:07,487] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a662a2542', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:07,487] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:07,487] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a662a2841', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:07,555] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12; TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16
[2025-07-29 14:41:07,555] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a662b30d6', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9;TIP_50uLF_L_0001, 10;TIP_50uLF_L_0001, 11;TIP_50uLF_L_0001, 12;TIP_50uLF_L_0001, 13;TIP_50uLF_L_0001, 14;TIP_50uLF_L_0001, 15;TIP_50uLF_L_0001, 16', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:07,555] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:07,555] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a662b31e6', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:07,557] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:07,557] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a662b381e', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:07,558] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:07,558] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a662b3b05', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:07,617] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 17; TIP_50uLF_L_0001, 18; TIP_50uLF_L_0001, 19; TIP_50uLF_L_0001, 20; TIP_50uLF_L_0001, 21; TIP_50uLF_L_0001, 22; TIP_50uLF_L_0001, 23; TIP_50uLF_L_0001, 24
[2025-07-29 14:41:07,617] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a662c2390', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 17;TIP_50uLF_L_0001, 18;TIP_50uLF_L_0001, 19;TIP_50uLF_L_0001, 20;TIP_50uLF_L_0001, 21;TIP_50uLF_L_0001, 22;TIP_50uLF_L_0001, 23;TIP_50uLF_L_0001, 24', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:07,617] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:07,617] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a662c24ac', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:07,619] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:07,619] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a662c2af0', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:07,620] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:07,620] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a662c2dcc', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:07,679] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 25; TIP_50uLF_L_0001, 26; TIP_50uLF_L_0001, 27; TIP_50uLF_L_0001, 28; TIP_50uLF_L_0001, 29; TIP_50uLF_L_0001, 30; TIP_50uLF_L_0001, 31; TIP_50uLF_L_0001, 32
[2025-07-29 14:41:07,679] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a662d14d4', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 25;TIP_50uLF_L_0001, 26;TIP_50uLF_L_0001, 27;TIP_50uLF_L_0001, 28;TIP_50uLF_L_0001, 29;TIP_50uLF_L_0001, 30;TIP_50uLF_L_0001, 31;TIP_50uLF_L_0001, 32', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:07,679] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:07,679] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a662d15a8', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:07,681] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:07,681] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a662d1c0e', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:07,681] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:07,682] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a662d1f18', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:07,741] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 33; TIP_50uLF_L_0001, 34; TIP_50uLF_L_0001, 35; TIP_50uLF_L_0001, 36; TIP_50uLF_L_0001, 37; TIP_50uLF_L_0001, 38; TIP_50uLF_L_0001, 39; TIP_50uLF_L_0001, 40
[2025-07-29 14:41:07,741] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a662e08fc', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 33;TIP_50uLF_L_0001, 34;TIP_50uLF_L_0001, 35;TIP_50uLF_L_0001, 36;TIP_50uLF_L_0001, 37;TIP_50uLF_L_0001, 38;TIP_50uLF_L_0001, 39;TIP_50uLF_L_0001, 40', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:07,742] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:07,742] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a662e09cd', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:07,743] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:07,743] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a662e101c', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:07,744] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:07,744] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a662e13e9', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:07,801] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 41; TIP_50uLF_L_0001, 42; TIP_50uLF_L_0001, 43; TIP_50uLF_L_0001, 44; TIP_50uLF_L_0001, 45; TIP_50uLF_L_0001, 46; TIP_50uLF_L_0001, 47; TIP_50uLF_L_0001, 48
[2025-07-29 14:41:07,801] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a662ef117', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 41;TIP_50uLF_L_0001, 42;TIP_50uLF_L_0001, 43;TIP_50uLF_L_0001, 44;TIP_50uLF_L_0001, 45;TIP_50uLF_L_0001, 46;TIP_50uLF_L_0001, 47;TIP_50uLF_L_0001, 48', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:07,801] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:07,801] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a662ef1e9', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:07,802] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:07,802] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a662ef756', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:07,803] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:07,803] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a662efa0c', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:07,861] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 49; TIP_50uLF_L_0001, 50; TIP_50uLF_L_0001, 51; TIP_50uLF_L_0001, 52; TIP_50uLF_L_0001, 53; TIP_50uLF_L_0001, 54; TIP_50uLF_L_0001, 55; TIP_50uLF_L_0001, 56
[2025-07-29 14:41:07,861] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a662fdb31', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 49;TIP_50uLF_L_0001, 50;TIP_50uLF_L_0001, 51;TIP_50uLF_L_0001, 52;TIP_50uLF_L_0001, 53;TIP_50uLF_L_0001, 54;TIP_50uLF_L_0001, 55;TIP_50uLF_L_0001, 56', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:07,861] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:07,861] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a662fdc03', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:07,862] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:07,863] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a662fe25f', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:07,863] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:07,863] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a662fe5a8', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:07,919] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 57; TIP_50uLF_L_0001, 58; TIP_50uLF_L_0001, 59; TIP_50uLF_L_0001, 60; TIP_50uLF_L_0001, 61; TIP_50uLF_L_0001, 62; TIP_50uLF_L_0001, 63; TIP_50uLF_L_0001, 64
[2025-07-29 14:41:07,919] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a6630bfbb', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 57;TIP_50uLF_L_0001, 58;TIP_50uLF_L_0001, 59;TIP_50uLF_L_0001, 60;TIP_50uLF_L_0001, 61;TIP_50uLF_L_0001, 62;TIP_50uLF_L_0001, 63;TIP_50uLF_L_0001, 64', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:07,919] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:07,920] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a6630c096', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:07,921] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:07,921] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a6630c65e', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:07,922] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:07,922] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a6630c97e', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:07,979] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 65; TIP_50uLF_L_0001, 66; TIP_50uLF_L_0001, 67; TIP_50uLF_L_0001, 68; TIP_50uLF_L_0001, 69; TIP_50uLF_L_0001, 70; TIP_50uLF_L_0001, 71; TIP_50uLF_L_0001, 72
[2025-07-29 14:41:07,979] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a6631a9f7', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 65;TIP_50uLF_L_0001, 66;TIP_50uLF_L_0001, 67;TIP_50uLF_L_0001, 68;TIP_50uLF_L_0001, 69;TIP_50uLF_L_0001, 70;TIP_50uLF_L_0001, 71;TIP_50uLF_L_0001, 72', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:07,979] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:07,980] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a6631aac6', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:07,981] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:07,981] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a6631b041', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:07,981] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:07,982] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a6631b317', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:08,038] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 73; TIP_50uLF_L_0001, 74; TIP_50uLF_L_0001, 75; TIP_50uLF_L_0001, 76; TIP_50uLF_L_0001, 77; TIP_50uLF_L_0001, 78; TIP_50uLF_L_0001, 79; TIP_50uLF_L_0001, 80
[2025-07-29 14:41:08,038] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a66328eb8', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 73;TIP_50uLF_L_0001, 74;TIP_50uLF_L_0001, 75;TIP_50uLF_L_0001, 76;TIP_50uLF_L_0001, 77;TIP_50uLF_L_0001, 78;TIP_50uLF_L_0001, 79;TIP_50uLF_L_0001, 80', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:08,038] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:08,038] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a66328f87', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:08,039] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:08,039] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a66329501', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:08,040] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:08,040] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a66329837', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:08,099] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 81; TIP_50uLF_L_0001, 82; TIP_50uLF_L_0001, 83; TIP_50uLF_L_0001, 84; TIP_50uLF_L_0001, 85; TIP_50uLF_L_0001, 86; TIP_50uLF_L_0001, 87; TIP_50uLF_L_0001, 88
[2025-07-29 14:41:08,100] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a66337fc7', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 81;TIP_50uLF_L_0001, 82;TIP_50uLF_L_0001, 83;TIP_50uLF_L_0001, 84;TIP_50uLF_L_0001, 85;TIP_50uLF_L_0001, 86;TIP_50uLF_L_0001, 87;TIP_50uLF_L_0001, 88', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:08,100] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:08,100] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a6633808e', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:08,101] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:08,101] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a663386c0', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:08,102] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:08,102] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a66338b1b', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:08,172] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 89; TIP_50uLF_L_0001, 90; TIP_50uLF_L_0001, 91; TIP_50uLF_L_0001, 92; TIP_50uLF_L_0001, 93; TIP_50uLF_L_0001, 94; TIP_50uLF_L_0001, 95; TIP_50uLF_L_0001, 96
[2025-07-29 14:41:08,172] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a66349aa8', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 89;TIP_50uLF_L_0001, 90;TIP_50uLF_L_0001, 91;TIP_50uLF_L_0001, 92;TIP_50uLF_L_0001, 93;TIP_50uLF_L_0001, 94;TIP_50uLF_L_0001, 95;TIP_50uLF_L_0001, 96', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:08,172] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:08,172] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a66349b68', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:08,174] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:08,174] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a6634a268', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:08,175] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:08,175] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a6634a540', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:08,175] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 14:41:08,175] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-29 14:41:08,175] pyhamilton.interface INFO disconnected from server
[2025-07-29 14:41:08,276] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 14:41:08,276] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 14:41:08,280] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 14:41:08,282] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 14:41:08,283] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 14:41:08,283] pyhamilton.interface INFO server thread exited
[2025-07-29 14:41:18,727] root INFO #############################################################################################################################
[2025-07-29 14:41:18,727] root INFO #                                                                                                                           #
[2025-07-29 14:41:18,727] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 14:41:18,727] root INFO #                                                                                                                           #
[2025-07-29 14:41:18,727] root INFO #############################################################################################################################
[2025-07-29 14:41:18,727] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 14:41:18,727] pyhamilton.interface INFO running in simulation mode
[2025-07-29 14:41:18,727] pyhamilton.interface INFO started the server thread
[2025-07-29 14:41:18,728] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 14:41:19,137] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-29 14:41:19,448] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-29 14:41:19,448] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a66e0a921', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1;TIP_50uLF_L_0001, 2;TIP_50uLF_L_0001, 3;TIP_50uLF_L_0001, 4;TIP_50uLF_L_0001, 5;TIP_50uLF_L_0001, 6;TIP_50uLF_L_0001, 7;TIP_50uLF_L_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:19,448] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:19,448] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a66e0aa72', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:19,449] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:19,449] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a66e0addd', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:19,450] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:19,450] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a66e0b0b5', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:19,517] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12; TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16
[2025-07-29 14:41:19,517] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a66e1b830', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 9;TIP_50uLF_L_0001, 10;TIP_50uLF_L_0001, 11;TIP_50uLF_L_0001, 12;TIP_50uLF_L_0001, 13;TIP_50uLF_L_0001, 14;TIP_50uLF_L_0001, 15;TIP_50uLF_L_0001, 16', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:19,517] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:19,518] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a66e1b956', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:19,518] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:19,518] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a66e1bc97', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:19,519] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:19,519] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a66e1bf15', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:19,586] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 17; TIP_50uLF_L_0001, 18; TIP_50uLF_L_0001, 19; TIP_50uLF_L_0001, 20; TIP_50uLF_L_0001, 21; TIP_50uLF_L_0001, 22; TIP_50uLF_L_0001, 23; TIP_50uLF_L_0001, 24
[2025-07-29 14:41:19,587] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a66e2c745', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 17;TIP_50uLF_L_0001, 18;TIP_50uLF_L_0001, 19;TIP_50uLF_L_0001, 20;TIP_50uLF_L_0001, 21;TIP_50uLF_L_0001, 22;TIP_50uLF_L_0001, 23;TIP_50uLF_L_0001, 24', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:19,587] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:19,587] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a66e2c80e', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:19,587] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:19,588] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a66e2cb5d', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:19,588] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:19,588] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a66e2cdc6', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:19,648] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 25; TIP_50uLF_L_0001, 26; TIP_50uLF_L_0001, 27; TIP_50uLF_L_0001, 28; TIP_50uLF_L_0001, 29; TIP_50uLF_L_0001, 30; TIP_50uLF_L_0001, 31; TIP_50uLF_L_0001, 32
[2025-07-29 14:41:19,648] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a66e3b5b5', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 25;TIP_50uLF_L_0001, 26;TIP_50uLF_L_0001, 27;TIP_50uLF_L_0001, 28;TIP_50uLF_L_0001, 29;TIP_50uLF_L_0001, 30;TIP_50uLF_L_0001, 31;TIP_50uLF_L_0001, 32', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:19,648] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:19,648] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a66e3b67a', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:19,648] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:19,649] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a66e3b9ae', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:19,649] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:19,649] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a66e3bc26', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:19,708] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 33; TIP_50uLF_L_0001, 34; TIP_50uLF_L_0001, 35; TIP_50uLF_L_0001, 36; TIP_50uLF_L_0001, 37; TIP_50uLF_L_0001, 38; TIP_50uLF_L_0001, 39; TIP_50uLF_L_0001, 40
[2025-07-29 14:41:19,708] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a66e4a1b3', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 33;TIP_50uLF_L_0001, 34;TIP_50uLF_L_0001, 35;TIP_50uLF_L_0001, 36;TIP_50uLF_L_0001, 37;TIP_50uLF_L_0001, 38;TIP_50uLF_L_0001, 39;TIP_50uLF_L_0001, 40', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:19,708] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:19,708] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a66e4a2e7', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:19,709] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:19,709] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a66e4a5cb', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:19,710] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:19,710] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a66e4a820', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:19,772] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 41; TIP_50uLF_L_0001, 42; TIP_50uLF_L_0001, 43; TIP_50uLF_L_0001, 44; TIP_50uLF_L_0001, 45; TIP_50uLF_L_0001, 46; TIP_50uLF_L_0001, 47; TIP_50uLF_L_0001, 48
[2025-07-29 14:41:19,773] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a66e59d72', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 41;TIP_50uLF_L_0001, 42;TIP_50uLF_L_0001, 43;TIP_50uLF_L_0001, 44;TIP_50uLF_L_0001, 45;TIP_50uLF_L_0001, 46;TIP_50uLF_L_0001, 47;TIP_50uLF_L_0001, 48', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:19,773] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:19,773] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a66e59e37', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:19,773] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:19,774] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a66e5a1b4', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:19,774] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:19,774] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a66e5a459', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:19,835] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 49; TIP_50uLF_L_0001, 50; TIP_50uLF_L_0001, 51; TIP_50uLF_L_0001, 52; TIP_50uLF_L_0001, 53; TIP_50uLF_L_0001, 54; TIP_50uLF_L_0001, 55; TIP_50uLF_L_0001, 56
[2025-07-29 14:41:19,835] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a66e69331', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 49;TIP_50uLF_L_0001, 50;TIP_50uLF_L_0001, 51;TIP_50uLF_L_0001, 52;TIP_50uLF_L_0001, 53;TIP_50uLF_L_0001, 54;TIP_50uLF_L_0001, 55;TIP_50uLF_L_0001, 56', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:19,836] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:19,836] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a66e69431', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:19,836] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:19,836] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a66e69713', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:19,837] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:19,837] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a66e69975', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:19,895] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 57; TIP_50uLF_L_0001, 58; TIP_50uLF_L_0001, 59; TIP_50uLF_L_0001, 60; TIP_50uLF_L_0001, 61; TIP_50uLF_L_0001, 62; TIP_50uLF_L_0001, 63; TIP_50uLF_L_0001, 64
[2025-07-29 14:41:19,896] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a66e77e27', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 57;TIP_50uLF_L_0001, 58;TIP_50uLF_L_0001, 59;TIP_50uLF_L_0001, 60;TIP_50uLF_L_0001, 61;TIP_50uLF_L_0001, 62;TIP_50uLF_L_0001, 63;TIP_50uLF_L_0001, 64', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:19,896] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:19,896] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a66e77f04', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:19,896] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:19,897] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a66e781dc', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:19,897] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:19,897] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a66e78452', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:19,959] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 65; TIP_50uLF_L_0001, 66; TIP_50uLF_L_0001, 67; TIP_50uLF_L_0001, 68; TIP_50uLF_L_0001, 69; TIP_50uLF_L_0001, 70; TIP_50uLF_L_0001, 71; TIP_50uLF_L_0001, 72
[2025-07-29 14:41:19,959] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a66e874ab', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 65;TIP_50uLF_L_0001, 66;TIP_50uLF_L_0001, 67;TIP_50uLF_L_0001, 68;TIP_50uLF_L_0001, 69;TIP_50uLF_L_0001, 70;TIP_50uLF_L_0001, 71;TIP_50uLF_L_0001, 72', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:19,959] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:19,959] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a66e8756c', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:19,959] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:19,960] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a66e87837', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:19,960] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:19,960] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a66e87a87', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:20,021] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 73; TIP_50uLF_L_0001, 74; TIP_50uLF_L_0001, 75; TIP_50uLF_L_0001, 76; TIP_50uLF_L_0001, 77; TIP_50uLF_L_0001, 78; TIP_50uLF_L_0001, 79; TIP_50uLF_L_0001, 80
[2025-07-29 14:41:20,022] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a66e96a20', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 73;TIP_50uLF_L_0001, 74;TIP_50uLF_L_0001, 75;TIP_50uLF_L_0001, 76;TIP_50uLF_L_0001, 77;TIP_50uLF_L_0001, 78;TIP_50uLF_L_0001, 79;TIP_50uLF_L_0001, 80', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:20,022] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:20,022] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a66e96ae8', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:20,022] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:20,023] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a66e96dc8', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:20,023] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:20,023] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a66e97038', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:20,083] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 81; TIP_50uLF_L_0001, 82; TIP_50uLF_L_0001, 83; TIP_50uLF_L_0001, 84; TIP_50uLF_L_0001, 85; TIP_50uLF_L_0001, 86; TIP_50uLF_L_0001, 87; TIP_50uLF_L_0001, 88
[2025-07-29 14:41:20,084] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a66ea5c91', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 81;TIP_50uLF_L_0001, 82;TIP_50uLF_L_0001, 83;TIP_50uLF_L_0001, 84;TIP_50uLF_L_0001, 85;TIP_50uLF_L_0001, 86;TIP_50uLF_L_0001, 87;TIP_50uLF_L_0001, 88', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:20,084] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:20,084] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a66ea5d9c', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:20,084] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:20,085] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a66ea6072', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:20,085] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:20,085] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a66ea62c6', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:20,151] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 89; TIP_50uLF_L_0001, 90; TIP_50uLF_L_0001, 91; TIP_50uLF_L_0001, 92; TIP_50uLF_L_0001, 93; TIP_50uLF_L_0001, 94; TIP_50uLF_L_0001, 95; TIP_50uLF_L_0001, 96
[2025-07-29 14:41:20,151] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x177a66eb63fb', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 89;TIP_50uLF_L_0001, 90;TIP_50uLF_L_0001, 91;TIP_50uLF_L_0001, 92;TIP_50uLF_L_0001, 93;TIP_50uLF_L_0001, 94;TIP_50uLF_L_0001, 95;TIP_50uLF_L_0001, 96', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-07-29 14:41:20,151] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 14:41:20,151] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x177a66eb64c5', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:20,152] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 14:41:20,152] JSONLogger INFO {'command': 'channelDispense', 'id': '0x177a66eb67cb', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-07-29 14:41:20,153] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 14:41:20,153] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x177a66eb6a2e', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-07-29 14:41:20,153] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 14:41:20,153] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-07-29 14:41:20,153] pyhamilton.interface INFO disconnected from server
[2025-07-29 14:41:20,254] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 14:41:20,254] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 14:41:20,260] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 14:41:20,262] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 14:41:20,264] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 14:41:20,264] pyhamilton.interface INFO server thread exited
[2025-07-29 15:15:29,997] root INFO #############################################################################################################################
[2025-07-29 15:15:29,997] root INFO #                                                                                                                           #
[2025-07-29 15:15:29,998] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 15:15:29,998] root INFO #                                                                                                                           #
[2025-07-29 15:15:29,998] root INFO #############################################################################################################################
[2025-07-29 15:15:29,998] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 15:15:29,999] pyhamilton.interface INFO started the oem application for simulation
[2025-07-29 15:15:29,999] pyhamilton.interface INFO started the server thread
[2025-07-29 15:15:29,999] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 15:15:31,010] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-29 15:15:31,350] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-29 15:15:32,352] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 15:15:34,355] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 15:15:36,358] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 15:15:37,457] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12; TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16
[2025-07-29 15:15:38,460] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 15:15:40,465] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 15:15:42,468] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 15:15:43,605] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 17; TIP_50uLF_L_0001, 18; TIP_50uLF_L_0001, 19; TIP_50uLF_L_0001, 20; TIP_50uLF_L_0001, 21; TIP_50uLF_L_0001, 22; TIP_50uLF_L_0001, 23; TIP_50uLF_L_0001, 24
[2025-07-29 15:15:45,609] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 15:15:50,613] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 15:15:56,620] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 15:15:58,584] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 15:15:59,167] pyhamilton.interface INFO disconnected from server
[2025-07-29 15:15:59,268] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 15:15:59,268] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 15:15:59,272] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 15:15:59,276] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 15:15:59,280] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 15:15:59,280] pyhamilton.interface INFO server thread exited
[2025-07-29 15:15:59,287] root ERROR Traceback (most recent call last):
[2025-07-29 15:15:59,290] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 56, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:15:59,290] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 305, in multi_dispense    ham_int.tip_eject()    ~~~~~~~~~~~~~~~~~^^
[2025-07-29 15:15:59,291] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 947, in tip_eject    self.wait_on_response(    ~~~~~~~~~~~~~~~~~~~~~^        self.send_command(        ^^^^^^^^^^^^^^^^^^    ...<5 lines>...        raise_first_exception=True        ^^^^^^^^^^^^^^^^^^^^^^^^^^    )    ^
[2025-07-29 15:15:59,292] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 668, in wait_on_response    for _ in wait(delays=delays, timeout=timeout):             ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:15:59,292] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\waiter\__init__.py", line 91, in __iter__    time.sleep(min(delay, remaining))    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:15:59,293] root ERROR KeyboardInterrupt
[2025-07-29 15:15:59,293] root ERROR During handling of the above exception, another exception occurred:
[2025-07-29 15:15:59,294] root ERROR Traceback (most recent call last):
[2025-07-29 15:15:59,297] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 49, in <module>    with HamiltonInterface(windowed=True, simulating=False) as ham_int:         ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:15:59,298] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 588, in __exit__    self.stop()    ~~~~~~~~~^^
[2025-07-29 15:15:59,298] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 552, in stop    self.wait_on_response(self.send_command(command='end', id=hex(0)), timeout=1.5)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:15:59,299] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 668, in wait_on_response    for _ in wait(delays=delays, timeout=timeout):             ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:15:59,299] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\waiter\__init__.py", line 91, in __iter__    time.sleep(min(delay, remaining))    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:15:59,299] root ERROR KeyboardInterrupt
[2025-07-29 15:18:18,078] root INFO #############################################################################################################################
[2025-07-29 15:18:18,078] root INFO #                                                                                                                           #
[2025-07-29 15:18:18,078] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 15:18:18,078] root INFO #                                                                                                                           #
[2025-07-29 15:18:18,078] root INFO #############################################################################################################################
[2025-07-29 15:18:18,079] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 15:18:18,079] pyhamilton.interface INFO started the oem application for simulation
[2025-07-29 15:18:18,079] pyhamilton.interface INFO started the server thread
[2025-07-29 15:18:18,080] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 15:18:18,975] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-29 15:18:19,219] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-29 15:18:20,221] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 15:18:23,225] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 15:18:25,228] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 15:18:26,325] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12; TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16
[2025-07-29 15:18:27,327] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 15:18:29,330] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 15:18:31,335] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 15:18:33,439] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 17; TIP_50uLF_L_0001, 18; TIP_50uLF_L_0001, 19; TIP_50uLF_L_0001, 20; TIP_50uLF_L_0001, 21; TIP_50uLF_L_0001, 22; TIP_50uLF_L_0001, 23; TIP_50uLF_L_0001, 24
[2025-07-29 15:18:36,442] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 15:18:41,940] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 15:18:42,143] pyhamilton.interface INFO disconnected from server
[2025-07-29 15:18:42,244] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 15:18:42,244] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 15:18:42,249] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 15:18:42,251] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 15:18:42,252] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 15:18:42,252] pyhamilton.interface INFO server thread exited
[2025-07-29 15:18:42,258] root ERROR Traceback (most recent call last):
[2025-07-29 15:18:42,261] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 56, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:18:42,262] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 291, in multi_dispense    response = ham_int.aspirate(positions, vols, liquidClass=liquid_class,                        mixCycles=0, mixVolume=0,                        liquidHeight=liquid_height,                        capacitiveLLD=1, aspirateMode=2,                        submergeDepth=2)
[2025-07-29 15:18:42,263] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 808, in aspirate    response = self.wait_on_response(        self.send_command(    ...<7 lines>...        return_data=['step-return2', 'step-return3']    )
[2025-07-29 15:18:42,264] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 668, in wait_on_response    for _ in wait(delays=delays, timeout=timeout):             ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:18:42,265] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\waiter\__init__.py", line 91, in __iter__    time.sleep(min(delay, remaining))    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:18:42,266] root ERROR KeyboardInterrupt
[2025-07-29 15:18:42,266] root ERROR During handling of the above exception, another exception occurred:
[2025-07-29 15:18:42,267] root ERROR Traceback (most recent call last):
[2025-07-29 15:18:42,270] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 49, in <module>    with HamiltonInterface(windowed=True, simulating=False) as ham_int:         ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:18:42,271] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 588, in __exit__    self.stop()    ~~~~~~~~~^^
[2025-07-29 15:18:42,271] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 552, in stop    self.wait_on_response(self.send_command(command='end', id=hex(0)), timeout=1.5)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:18:42,272] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 668, in wait_on_response    for _ in wait(delays=delays, timeout=timeout):             ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:18:42,273] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\waiter\__init__.py", line 91, in __iter__    time.sleep(min(delay, remaining))    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:18:42,274] root ERROR KeyboardInterrupt
[2025-07-29 15:20:01,548] root INFO #############################################################################################################################
[2025-07-29 15:20:01,548] root INFO #                                                                                                                           #
[2025-07-29 15:20:01,548] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 15:20:01,548] root INFO #                                                                                                                           #
[2025-07-29 15:20:01,549] root INFO #############################################################################################################################
[2025-07-29 15:20:01,549] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 15:20:01,550] pyhamilton.interface INFO started the oem application for simulation
[2025-07-29 15:20:01,550] pyhamilton.interface INFO started the server thread
[2025-07-29 15:20:01,550] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 15:20:02,387] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-29 15:20:02,634] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-07-29 15:20:03,636] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 15:20:05,639] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 15:20:07,644] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 15:20:09,766] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12; TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16
[2025-07-29 15:20:10,770] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 15:20:12,775] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 15:20:14,780] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 15:20:15,968] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 17; TIP_50uLF_L_0001, 18; TIP_50uLF_L_0001, 19; TIP_50uLF_L_0001, 20; TIP_50uLF_L_0001, 21; TIP_50uLF_L_0001, 22; TIP_50uLF_L_0001, 23; TIP_50uLF_L_0001, 24
[2025-07-29 15:20:16,971] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 15:20:18,975] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 15:20:20,980] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 15:20:22,131] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 25; TIP_50uLF_L_0001, 26; TIP_50uLF_L_0001, 27; TIP_50uLF_L_0001, 28; TIP_50uLF_L_0001, 29; TIP_50uLF_L_0001, 30; TIP_50uLF_L_0001, 31; TIP_50uLF_L_0001, 32
[2025-07-29 15:20:25,136] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 15:20:31,142] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 15:20:38,149] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 15:20:41,247] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 33; TIP_50uLF_L_0001, 34; TIP_50uLF_L_0001, 35; TIP_50uLF_L_0001, 36; TIP_50uLF_L_0001, 37; TIP_50uLF_L_0001, 38; TIP_50uLF_L_0001, 39; TIP_50uLF_L_0001, 40
[2025-07-29 15:20:44,075] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 15:20:44,270] pyhamilton.interface INFO disconnected from server
[2025-07-29 15:20:44,371] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 15:20:44,372] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 15:20:44,379] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 15:20:44,381] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 15:20:44,382] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 15:20:44,383] pyhamilton.interface INFO server thread exited
[2025-07-29 15:20:44,387] root ERROR Traceback (most recent call last):
[2025-07-29 15:20:44,389] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 56, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:20:44,389] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 280, in multi_dispense    tracked_tip_pick_up(ham_int, tips, len(batch[0][0]))  # Pick up tips for the first column of the batch    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:20:44,389] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_handling_wrappers.py", line 211, in tracked_tip_pick_up    ham_int.tip_pick_up(tips_poss)    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
[2025-07-29 15:20:44,390] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 915, in tip_pick_up    self.wait_on_response(    ~~~~~~~~~~~~~~~~~~~~~^        self.send_command(        ^^^^^^^^^^^^^^^^^^    ...<5 lines>...        raise_first_exception=True        ^^^^^^^^^^^^^^^^^^^^^^^^^^    )    ^
[2025-07-29 15:20:44,390] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 668, in wait_on_response    for _ in wait(delays=delays, timeout=timeout):             ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:20:44,391] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\waiter\__init__.py", line 91, in __iter__    time.sleep(min(delay, remaining))    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:20:44,392] root ERROR KeyboardInterrupt
[2025-07-29 15:20:44,393] root ERROR During handling of the above exception, another exception occurred:
[2025-07-29 15:20:44,393] root ERROR Traceback (most recent call last):
[2025-07-29 15:20:44,396] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 49, in <module>    with HamiltonInterface(windowed=True, simulating=False) as ham_int:         ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:20:44,397] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 588, in __exit__    self.stop()    ~~~~~~~~~^^
[2025-07-29 15:20:44,398] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 552, in stop    self.wait_on_response(self.send_command(command='end', id=hex(0)), timeout=1.5)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:20:44,399] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 668, in wait_on_response    for _ in wait(delays=delays, timeout=timeout):             ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:20:44,399] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\waiter\__init__.py", line 91, in __iter__    time.sleep(min(delay, remaining))    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:20:44,400] root ERROR KeyboardInterrupt
[2025-07-29 15:23:09,600] root INFO #############################################################################################################################
[2025-07-29 15:23:09,601] root INFO #                                                                                                                           #
[2025-07-29 15:23:09,601] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 15:23:09,601] root INFO #                                                                                                                           #
[2025-07-29 15:23:09,601] root INFO #############################################################################################################################
[2025-07-29 15:23:09,602] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 15:23:09,602] pyhamilton.interface INFO started the oem application for simulation
[2025-07-29 15:23:09,602] pyhamilton.interface INFO started the server thread
[2025-07-29 15:23:09,603] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 15:23:10,567] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-29 15:23:10,785] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 1; HTF_L_0001, 2; HTF_L_0001, 3; HTF_L_0001, 4; HTF_L_0001, 5; HTF_L_0001, 6; HTF_L_0001, 7; HTF_L_0001, 8
[2025-07-29 15:23:11,786] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 15:23:14,788] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 15:23:16,290] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-29 15:23:16,290] pyhamilton.interface INFO disconnected from server
[2025-07-29 15:23:16,390] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 15:23:16,391] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 15:23:16,394] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 15:23:16,396] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 15:23:16,397] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 15:23:16,398] pyhamilton.interface INFO server thread exited
[2025-07-29 15:23:16,401] root ERROR Traceback (most recent call last):
[2025-07-29 15:23:16,402] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 56, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:23:16,402] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 291, in multi_dispense    response = ham_int.aspirate(positions, vols, liquidClass=liquid_class,                        mixCycles=0, mixVolume=0,                        liquidHeight=liquid_height,                        capacitiveLLD=1, aspirateMode=2,                        submergeDepth=2)
[2025-07-29 15:23:16,403] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 808, in aspirate    response = self.wait_on_response(        self.send_command(    ...<7 lines>...        return_data=['step-return2', 'step-return3']    )
[2025-07-29 15:23:16,403] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 679, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:23:16,403] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 698, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-07-29 15:23:16,403] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 404, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-07-29 15:23:16,403] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"STAR-return","step-name":"channelAspirate","step-return1":"2","step-return2":"","step-return3":"","step-return4":"","id":"0x177afc9fe936"} )
[2025-07-29 15:23:50,330] root INFO #############################################################################################################################
[2025-07-29 15:23:50,331] root INFO #                                                                                                                           #
[2025-07-29 15:23:50,331] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 15:23:50,332] root INFO #                                                                                                                           #
[2025-07-29 15:23:50,332] root INFO #############################################################################################################################
[2025-07-29 15:23:50,333] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 15:23:50,333] pyhamilton.interface INFO started the oem application for simulation
[2025-07-29 15:23:50,333] pyhamilton.interface INFO started the server thread
[2025-07-29 15:23:50,333] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 15:23:51,271] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-29 15:23:51,421] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 15:23:52,922] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-29 15:23:52,922] pyhamilton.interface INFO disconnected from server
[2025-07-29 15:23:53,023] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-07-29 15:23:53,023] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-07-29 15:23:53,026] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-07-29 15:23:53,028] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-07-29 15:23:53,029] pyhamilton.interface INFO dummy get request sent to server
[2025-07-29 15:23:53,029] pyhamilton.interface INFO server thread exited
[2025-07-29 15:23:53,031] root ERROR Traceback (most recent call last):
[2025-07-29 15:23:53,032] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 56, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_1000ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:23:53,033] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 275, in multi_dispense    dispense_batches = build_dispense_batches(max_channel_volumes, column_dispense_positions, column_dispense_volumes)
[2025-07-29 15:23:53,033] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 61, in build_dispense_batches    batch_positions = get_fitting_dispense_positions(aspiration_volumes, disp_vols, disp_pos)
[2025-07-29 15:23:53,033] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 37, in get_fitting_dispense_positions    if all(v <= a for v, a in zip(new_total, asp_vols)):       ~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-07-29 15:23:53,033] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 37, in <genexpr>    if all(v <= a for v, a in zip(new_total, asp_vols)):           ^^^^^^
[2025-07-29 15:23:53,033] root ERROR TypeError: '<=' not supported between instances of 'int' and 'NoneType'
[2025-07-29 15:25:17,964] root INFO #############################################################################################################################
[2025-07-29 15:25:17,964] root INFO #                                                                                                                           #
[2025-07-29 15:25:17,965] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-07-29 15:25:17,965] root INFO #                                                                                                                           #
[2025-07-29 15:25:17,965] root INFO #############################################################################################################################
[2025-07-29 15:25:17,966] pyhamilton.interface INFO starting a Hamilton interface
[2025-07-29 15:25:17,967] pyhamilton.interface INFO started the oem application for simulation
[2025-07-29 15:25:17,968] pyhamilton.interface INFO started the server thread
[2025-07-29 15:25:17,969] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-07-29 15:25:18,921] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-07-29 15:25:19,169] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 1; HTF_L_0001, 2; HTF_L_0001, 3; HTF_L_0001, 4; HTF_L_0001, 5; HTF_L_0001, 6; HTF_L_0001, 7; HTF_L_0001, 8
[2025-07-29 15:25:20,171] pyhamilton.interface INFO aspirate: Aspirate volumes [600, 600, 600, 600, 600, 600, 600, 600] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'HighVolumeFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-07-29 15:25:23,178] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'HighVolumeFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 15:25:25,182] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'HighVolumeFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 15:25:27,185] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'HighVolumeFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 15:25:29,189] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'HighVolumeFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 15:25:31,197] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'HighVolumeFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 15:25:32,202] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'HighVolumeFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 15:25:36,206] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'HighVolumeFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 15:25:42,213] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'HighVolumeFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 15:25:47,219] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'HighVolumeFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 15:25:52,223] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'HighVolumeFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 15:25:57,228] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'HighVolumeFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 15:26:03,234] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'HighVolumeFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-07-29 15:26:08,239] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-07-29 15:26:11,242] pyhamilton.interface INFO sending end run command to simulator
[2025-07-29 15:26:12,743] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-07-29 15:26:12,744] pyhamilton.interface INFO disconnected from server
[2025-07-29 15:26:12,845] pyhamilton.interface INFO server thread exited
[2025-08-04 14:49:58,852] root INFO #############################################################################################################################
[2025-08-04 14:49:58,853] root INFO #                                                                                                                           #
[2025-08-04 14:49:58,853] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-08-04 14:49:58,853] root INFO #                                                                                                                           #
[2025-08-04 14:49:58,853] root INFO #############################################################################################################################
[2025-08-04 14:49:58,853] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-04 14:49:58,854] pyhamilton.interface INFO running in simulation mode
[2025-08-04 14:49:58,854] pyhamilton.interface INFO started the server thread
[2025-08-04 14:49:58,854] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-04 14:49:59,160] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-08-04 14:49:59,362] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-08-04 14:49:59,555] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-08-04 14:49:59,638] pyhamilton.interface INFO sending end run command to simulator
[2025-08-04 14:49:59,638] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-08-04 14:49:59,640] pyhamilton.interface INFO disconnected from server
[2025-08-04 14:49:59,741] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-04 14:49:59,741] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-04 14:49:59,743] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-04 14:49:59,746] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-04 14:49:59,746] pyhamilton.interface INFO dummy get request sent to server
[2025-08-04 14:49:59,747] pyhamilton.interface INFO server thread exited
[2025-08-04 14:49:59,748] root ERROR Traceback (most recent call last):
[2025-08-04 14:49:59,749] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 57, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'HighVolumeFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-04 14:49:59,750] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 288, in multi_dispense    raise ValueError(f"Tip type does not match liquid class: {tips.volume_capacity} != {get_liquid_class_volume(liquid_class)}")
[2025-08-04 14:49:59,750] root ERROR ValueError: Tip type does not match liquid class: 50 != 1000
[2025-08-04 14:50:29,596] root INFO #############################################################################################################################
[2025-08-04 14:50:29,596] root INFO #                                                                                                                           #
[2025-08-04 14:50:29,597] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-08-04 14:50:29,597] root INFO #                                                                                                                           #
[2025-08-04 14:50:29,597] root INFO #############################################################################################################################
[2025-08-04 14:50:29,597] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-04 14:50:29,597] pyhamilton.interface INFO running in simulation mode
[2025-08-04 14:50:29,597] pyhamilton.interface INFO started the server thread
[2025-08-04 14:50:29,597] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-04 14:50:29,885] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-08-04 14:50:30,079] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-08-04 14:50:30,223] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 1; HTF_L_0001, 2; HTF_L_0001, 3; HTF_L_0001, 4; HTF_L_0001, 5; HTF_L_0001, 6; HTF_L_0001, 7; HTF_L_0001, 8
[2025-08-04 14:50:30,223] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f33ac1112e', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 1;HTF_L_0001, 2;HTF_L_0001, 3;HTF_L_0001, 4;HTF_L_0001, 5;HTF_L_0001, 6;HTF_L_0001, 7;HTF_L_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 14:50:30,223] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 14:50:30,223] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f33ac11225', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:30,223] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 14:50:30,223] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f33ac112bf', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:30,223] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 14:50:30,223] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f33ac11344', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 14:50:30,323] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-08-04 14:50:30,466] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 9; HTF_L_0001, 10; HTF_L_0001, 11; HTF_L_0001, 12; HTF_L_0001, 13; HTF_L_0001, 14; HTF_L_0001, 15; HTF_L_0001, 16
[2025-08-04 14:50:30,466] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f33ac4c69e', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 9;HTF_L_0001, 10;HTF_L_0001, 11;HTF_L_0001, 12;HTF_L_0001, 13;HTF_L_0001, 14;HTF_L_0001, 15;HTF_L_0001, 16', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 14:50:30,466] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 14:50:30,466] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f33ac4c73c', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:30,466] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 14:50:30,466] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f33ac4c800', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:30,466] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 14:50:30,466] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f33ac4c887', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 14:50:30,564] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-08-04 14:50:30,708] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 17; HTF_L_0001, 18; HTF_L_0001, 19; HTF_L_0001, 20; HTF_L_0001, 21; HTF_L_0001, 22; HTF_L_0001, 23; HTF_L_0001, 24
[2025-08-04 14:50:30,708] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f33ac87ae0', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 17;HTF_L_0001, 18;HTF_L_0001, 19;HTF_L_0001, 20;HTF_L_0001, 21;HTF_L_0001, 22;HTF_L_0001, 23;HTF_L_0001, 24', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 14:50:30,709] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 14:50:30,709] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f33ac87b7e', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:30,709] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 14:50:30,709] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f33ac87c45', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:30,709] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 14:50:30,709] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f33ac87ccf', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 14:50:30,809] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-08-04 14:50:30,954] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 25; HTF_L_0001, 26; HTF_L_0001, 27; HTF_L_0001, 28; HTF_L_0001, 29; HTF_L_0001, 30; HTF_L_0001, 31; HTF_L_0001, 32
[2025-08-04 14:50:30,954] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f33acc3a49', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 25;HTF_L_0001, 26;HTF_L_0001, 27;HTF_L_0001, 28;HTF_L_0001, 29;HTF_L_0001, 30;HTF_L_0001, 31;HTF_L_0001, 32', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 14:50:30,954] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 14:50:30,954] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f33acc3ae6', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:30,954] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 14:50:30,954] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f33acc3ba2', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:30,954] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 14:50:30,955] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f33acc3c26', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 14:50:31,059] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-08-04 14:50:31,193] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 33; HTF_L_0001, 34; HTF_L_0001, 35; HTF_L_0001, 36; HTF_L_0001, 37; HTF_L_0001, 38; HTF_L_0001, 39; HTF_L_0001, 40
[2025-08-04 14:50:31,193] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f33acfe01c', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 33;HTF_L_0001, 34;HTF_L_0001, 35;HTF_L_0001, 36;HTF_L_0001, 37;HTF_L_0001, 38;HTF_L_0001, 39;HTF_L_0001, 40', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 14:50:31,193] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 14:50:31,193] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f33acfe0b9', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:31,193] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 14:50:31,193] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f33acfe144', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:31,193] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 14:50:31,194] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f33acfe1c5', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 14:50:31,358] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-08-04 14:50:31,652] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 41; HTF_L_0001, 42; HTF_L_0001, 43; HTF_L_0001, 44; HTF_L_0001, 45; HTF_L_0001, 46; HTF_L_0001, 47; HTF_L_0001, 48
[2025-08-04 14:50:31,652] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f33ad6e082', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 41;HTF_L_0001, 42;HTF_L_0001, 43;HTF_L_0001, 44;HTF_L_0001, 45;HTF_L_0001, 46;HTF_L_0001, 47;HTF_L_0001, 48', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 14:50:31,652] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 14:50:31,652] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f33ad6e119', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:31,652] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 14:50:31,652] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f33ad6e1c9', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:31,652] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 14:50:31,652] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f33ad6e24e', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 14:50:32,215] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-08-04 14:50:32,533] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 49; HTF_L_0001, 50; HTF_L_0001, 51; HTF_L_0001, 52; HTF_L_0001, 53; HTF_L_0001, 54; HTF_L_0001, 55; HTF_L_0001, 56
[2025-08-04 14:50:32,533] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f33ae453bf', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 49;HTF_L_0001, 50;HTF_L_0001, 51;HTF_L_0001, 52;HTF_L_0001, 53;HTF_L_0001, 54;HTF_L_0001, 55;HTF_L_0001, 56', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 14:50:32,534] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 14:50:32,534] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f33ae45460', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:32,534] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 14:50:32,534] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f33ae454ed', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:32,534] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 14:50:32,534] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f33ae4556e', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 14:50:33,157] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-08-04 14:50:33,451] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 57; HTF_L_0001, 58; HTF_L_0001, 59; HTF_L_0001, 60; HTF_L_0001, 61; HTF_L_0001, 62; HTF_L_0001, 63; HTF_L_0001, 64
[2025-08-04 14:50:33,452] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f33af2561e', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 57;HTF_L_0001, 58;HTF_L_0001, 59;HTF_L_0001, 60;HTF_L_0001, 61;HTF_L_0001, 62;HTF_L_0001, 63;HTF_L_0001, 64', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 14:50:33,452] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 14:50:33,452] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f33af256b4', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:33,452] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 14:50:33,452] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f33af25745', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:33,452] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 14:50:33,452] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f33af257c4', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 14:50:34,009] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-08-04 14:50:34,317] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 65; HTF_L_0001, 66; HTF_L_0001, 67; HTF_L_0001, 68; HTF_L_0001, 69; HTF_L_0001, 70; HTF_L_0001, 71; HTF_L_0001, 72
[2025-08-04 14:50:34,318] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f33aff8cd8', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 65;HTF_L_0001, 66;HTF_L_0001, 67;HTF_L_0001, 68;HTF_L_0001, 69;HTF_L_0001, 70;HTF_L_0001, 71;HTF_L_0001, 72', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 14:50:34,318] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 14:50:34,318] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f33aff8d71', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:34,318] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 14:50:34,318] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f33aff8df8', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:34,318] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 14:50:34,318] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f33aff8ea5', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 14:50:34,840] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-08-04 14:50:35,140] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 73; HTF_L_0001, 74; HTF_L_0001, 75; HTF_L_0001, 76; HTF_L_0001, 77; HTF_L_0001, 78; HTF_L_0001, 79; HTF_L_0001, 80
[2025-08-04 14:50:35,141] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f33b0c1be4', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 73;HTF_L_0001, 74;HTF_L_0001, 75;HTF_L_0001, 76;HTF_L_0001, 77;HTF_L_0001, 78;HTF_L_0001, 79;HTF_L_0001, 80', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 14:50:35,141] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 14:50:35,141] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f33b0c1c89', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:35,141] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 14:50:35,141] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f33b0c1d19', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:35,141] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 14:50:35,141] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f33b0c1d9c', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 14:50:35,774] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-08-04 14:50:36,232] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 81; HTF_L_0001, 82; HTF_L_0001, 83; HTF_L_0001, 84; HTF_L_0001, 85; HTF_L_0001, 86; HTF_L_0001, 87; HTF_L_0001, 88
[2025-08-04 14:50:36,232] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f33b1cc200', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 81;HTF_L_0001, 82;HTF_L_0001, 83;HTF_L_0001, 84;HTF_L_0001, 85;HTF_L_0001, 86;HTF_L_0001, 87;HTF_L_0001, 88', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 14:50:36,232] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 14:50:36,232] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f33b1cc2cf', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:36,232] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 14:50:36,232] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f33b1cc395', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:36,232] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 14:50:36,232] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f33b1cc45e', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 14:50:38,043] root ERROR C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py:35: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.  df = pd.read_sql("SELECT * FROM LiquidClass", conn)
[2025-08-04 14:50:38,655] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 89; HTF_L_0001, 90; HTF_L_0001, 91; HTF_L_0001, 92; HTF_L_0001, 93; HTF_L_0001, 94; HTF_L_0001, 95; HTF_L_0001, 96
[2025-08-04 14:50:38,655] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f33b41bbae', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 89;HTF_L_0001, 90;HTF_L_0001, 91;HTF_L_0001, 92;HTF_L_0001, 93;HTF_L_0001, 94;HTF_L_0001, 95;HTF_L_0001, 96', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 14:50:38,655] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 14:50:38,655] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f33b41bc79', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:38,655] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 14:50:38,655] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f33b41bd2a', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 14:50:38,655] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 14:50:38,655] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f33b41bdd0', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 14:50:38,656] pyhamilton.interface INFO sending end run command to simulator
[2025-08-04 14:50:38,656] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-08-04 14:50:38,656] pyhamilton.interface INFO disconnected from server
[2025-08-04 14:50:38,756] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-04 14:50:38,757] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-04 14:50:38,762] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-04 14:50:38,765] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-04 14:50:38,766] pyhamilton.interface INFO dummy get request sent to server
[2025-08-04 14:50:38,766] pyhamilton.interface INFO server thread exited
[2025-08-04 14:55:35,654] root INFO #############################################################################################################################
[2025-08-04 14:55:35,654] root INFO #                                                                                                                           #
[2025-08-04 14:55:35,654] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-08-04 14:55:35,654] root INFO #                                                                                                                           #
[2025-08-04 14:55:35,654] root INFO #############################################################################################################################
[2025-08-04 14:55:35,655] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-04 14:55:35,655] pyhamilton.interface INFO running in simulation mode
[2025-08-04 14:55:35,655] pyhamilton.interface INFO started the server thread
[2025-08-04 14:55:35,655] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-04 14:55:35,685] pyhamilton.interface INFO sending end run command to simulator
[2025-08-04 14:55:35,685] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-08-04 14:55:35,685] pyhamilton.interface INFO disconnected from server
[2025-08-04 14:55:35,786] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-04 14:55:35,786] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-04 14:55:35,788] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-04 14:55:35,790] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-04 14:55:35,790] pyhamilton.interface INFO dummy get request sent to server
[2025-08-04 14:55:35,791] pyhamilton.interface INFO server thread exited
[2025-08-04 14:55:35,792] root ERROR Traceback (most recent call last):
[2025-08-04 14:55:35,794] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 57, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-04 14:55:35,794] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 282, in multi_dispense    dispense_batches = build_dispense_batches(max_channel_volumes, column_dispense_positions, column_dispense_volumes)
[2025-08-04 14:55:35,794] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 61, in build_dispense_batches    batch_positions = get_fitting_dispense_positions(aspiration_volumes, disp_vols, disp_pos)
[2025-08-04 14:55:35,794] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 37, in get_fitting_dispense_positions    if all(v <= a for v, a in zip(new_total, asp_vols)):       ~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-04 14:55:35,795] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 37, in <genexpr>    if all(v <= a for v, a in zip(new_total, asp_vols)):           ^^^^^^
[2025-08-04 14:55:35,795] root ERROR TypeError: '<=' not supported between instances of 'int' and 'NoneType'
[2025-08-04 14:58:16,358] root INFO #############################################################################################################################
[2025-08-04 14:58:16,358] root INFO #                                                                                                                           #
[2025-08-04 14:58:16,358] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-08-04 14:58:16,358] root INFO #                                                                                                                           #
[2025-08-04 14:58:16,358] root INFO #############################################################################################################################
[2025-08-04 14:58:16,358] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-04 14:58:16,359] pyhamilton.interface INFO running in simulation mode
[2025-08-04 14:58:16,359] pyhamilton.interface INFO started the server thread
[2025-08-04 14:58:16,359] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-04 14:58:16,381] pyhamilton.interface INFO sending end run command to simulator
[2025-08-04 14:58:16,381] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-08-04 14:58:16,381] pyhamilton.interface INFO disconnected from server
[2025-08-04 14:58:16,482] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-04 14:58:16,482] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-04 14:58:16,485] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-04 14:58:16,486] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-04 14:58:16,487] pyhamilton.interface INFO dummy get request sent to server
[2025-08-04 14:58:16,487] pyhamilton.interface INFO server thread exited
[2025-08-04 14:58:16,489] root ERROR Traceback (most recent call last):
[2025-08-04 14:58:16,490] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 57, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-04 14:58:16,491] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 284, in multi_dispense    dispense_batches = build_dispense_batches(max_channel_volumes, column_dispense_positions, column_dispense_volumes)
[2025-08-04 14:58:16,491] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 63, in build_dispense_batches    batch_positions = get_fitting_dispense_positions(aspiration_volumes, disp_vols, disp_pos)
[2025-08-04 14:58:16,491] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 39, in get_fitting_dispense_positions    if all(v <= a for v, a in zip(new_total, asp_vols)):       ~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-04 14:58:16,492] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 39, in <genexpr>    if all(v <= a for v, a in zip(new_total, asp_vols)):           ^^^^^^
[2025-08-04 14:58:16,492] root ERROR TypeError: '<=' not supported between instances of 'int' and 'NoneType'
[2025-08-04 15:01:20,150] root INFO #############################################################################################################################
[2025-08-04 15:01:20,150] root INFO #                                                                                                                           #
[2025-08-04 15:01:20,151] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-08-04 15:01:20,151] root INFO #                                                                                                                           #
[2025-08-04 15:01:20,151] root INFO #############################################################################################################################
[2025-08-04 15:01:20,151] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-04 15:01:20,151] pyhamilton.interface INFO running in simulation mode
[2025-08-04 15:01:20,151] pyhamilton.interface INFO started the server thread
[2025-08-04 15:01:20,151] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-04 15:01:20,172] pyhamilton.interface INFO sending end run command to simulator
[2025-08-04 15:01:20,173] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-08-04 15:01:20,173] pyhamilton.interface INFO disconnected from server
[2025-08-04 15:01:20,274] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-04 15:01:20,275] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-04 15:01:20,278] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-04 15:01:20,280] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-04 15:01:20,281] pyhamilton.interface INFO dummy get request sent to server
[2025-08-04 15:01:20,281] pyhamilton.interface INFO server thread exited
[2025-08-04 15:01:20,284] root ERROR Traceback (most recent call last):
[2025-08-04 15:01:20,286] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 57, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-04 15:01:20,286] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 285, in multi_dispense    dispense_batches = build_dispense_batches(max_channel_volumes, column_dispense_positions, column_dispense_volumes)
[2025-08-04 15:01:20,287] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 63, in build_dispense_batches    batch_positions = get_fitting_dispense_positions(aspiration_volumes, disp_vols, disp_pos)
[2025-08-04 15:01:20,287] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 39, in get_fitting_dispense_positions    if all(v <= a for v, a in zip(new_total, asp_vols)):       ~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-04 15:01:20,287] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 39, in <genexpr>    if all(v <= a for v, a in zip(new_total, asp_vols)):           ^^^^^^
[2025-08-04 15:01:20,288] root ERROR TypeError: '<=' not supported between instances of 'int' and 'NoneType'
[2025-08-04 15:05:44,982] root INFO #############################################################################################################################
[2025-08-04 15:05:44,982] root INFO #                                                                                                                           #
[2025-08-04 15:05:44,982] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-08-04 15:05:44,982] root INFO #                                                                                                                           #
[2025-08-04 15:05:44,982] root INFO #############################################################################################################################
[2025-08-04 15:05:44,983] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-04 15:05:44,983] pyhamilton.interface INFO running in simulation mode
[2025-08-04 15:05:44,983] pyhamilton.interface INFO started the server thread
[2025-08-04 15:05:44,983] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-04 15:05:45,003] pyhamilton.interface INFO sending end run command to simulator
[2025-08-04 15:05:45,004] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-08-04 15:05:45,004] pyhamilton.interface INFO disconnected from server
[2025-08-04 15:05:45,105] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-04 15:05:45,105] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-04 15:05:45,109] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-04 15:05:45,111] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-04 15:05:45,112] pyhamilton.interface INFO dummy get request sent to server
[2025-08-04 15:05:45,113] pyhamilton.interface INFO server thread exited
[2025-08-04 15:05:45,115] root ERROR Traceback (most recent call last):
[2025-08-04 15:05:45,117] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 57, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-04 15:05:45,118] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 285, in multi_dispense    dispense_batches = build_dispense_batches(max_channel_volumes, column_dispense_positions, column_dispense_volumes)
[2025-08-04 15:05:45,118] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 63, in build_dispense_batches    batch_positions = get_fitting_dispense_positions(aspiration_volumes, disp_vols, disp_pos)
[2025-08-04 15:05:45,118] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 39, in get_fitting_dispense_positions    if all(v <= a for v, a in zip(new_total, asp_vols)):       ~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-04 15:05:45,119] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 39, in <genexpr>    if all(v <= a for v, a in zip(new_total, asp_vols)):           ^^^^^^
[2025-08-04 15:05:45,119] root ERROR TypeError: '<=' not supported between instances of 'int' and 'NoneType'
[2025-08-04 15:07:18,430] root INFO #############################################################################################################################
[2025-08-04 15:07:18,430] root INFO #                                                                                                                           #
[2025-08-04 15:07:18,430] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-08-04 15:07:18,430] root INFO #                                                                                                                           #
[2025-08-04 15:07:18,430] root INFO #############################################################################################################################
[2025-08-04 15:07:18,431] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-04 15:07:18,431] pyhamilton.interface INFO running in simulation mode
[2025-08-04 15:07:18,432] pyhamilton.interface INFO started the server thread
[2025-08-04 15:07:18,432] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-04 15:07:18,455] pyhamilton.interface INFO sending end run command to simulator
[2025-08-04 15:07:18,456] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-08-04 15:07:18,456] pyhamilton.interface INFO disconnected from server
[2025-08-04 15:07:18,556] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-04 15:07:18,557] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-04 15:07:18,559] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-04 15:07:18,561] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-04 15:07:18,561] pyhamilton.interface INFO dummy get request sent to server
[2025-08-04 15:07:18,561] pyhamilton.interface INFO server thread exited
[2025-08-04 15:07:18,563] root ERROR Traceback (most recent call last):
[2025-08-04 15:07:18,565] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 57, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-04 15:07:18,565] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 283, in multi_dispense    dispense_batches = build_dispense_batches(max_channel_volumes, column_dispense_positions, column_dispense_volumes)
[2025-08-04 15:07:18,566] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 61, in build_dispense_batches    batch_positions = get_fitting_dispense_positions(aspiration_volumes, disp_vols, disp_pos)
[2025-08-04 15:07:18,566] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 37, in get_fitting_dispense_positions    if all(v <= a for v, a in zip(new_total, asp_vols)):       ~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-04 15:07:18,566] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 37, in <genexpr>    if all(v <= a for v, a in zip(new_total, asp_vols)):           ^^^^^^
[2025-08-04 15:07:18,567] root ERROR TypeError: '<=' not supported between instances of 'int' and 'NoneType'
[2025-08-04 15:08:40,503] root INFO #############################################################################################################################
[2025-08-04 15:08:40,503] root INFO #                                                                                                                           #
[2025-08-04 15:08:40,503] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-08-04 15:08:40,503] root INFO #                                                                                                                           #
[2025-08-04 15:08:40,503] root INFO #############################################################################################################################
[2025-08-04 15:08:40,504] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-04 15:08:40,504] pyhamilton.interface INFO running in simulation mode
[2025-08-04 15:08:40,504] pyhamilton.interface INFO started the server thread
[2025-08-04 15:08:40,504] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-04 15:08:40,521] pyhamilton.interface INFO sending end run command to simulator
[2025-08-04 15:08:40,522] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-08-04 15:08:40,522] pyhamilton.interface INFO disconnected from server
[2025-08-04 15:08:40,622] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-04 15:08:40,623] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-04 15:08:40,626] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-04 15:08:40,628] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-04 15:08:40,629] pyhamilton.interface INFO dummy get request sent to server
[2025-08-04 15:08:40,629] pyhamilton.interface INFO server thread exited
[2025-08-04 15:08:40,635] root ERROR Traceback (most recent call last):
[2025-08-04 15:08:40,640] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 57, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-04 15:08:40,641] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 276, in multi_dispense    max_volume_tips = get_liquid_class_volume(liquid_class)  # Fetch the volume for the liquid class
[2025-08-04 15:08:40,641] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py", line 34, in get_liquid_class_volume    engine = create_engine(connection_url)
[2025-08-04 15:08:40,642] root ERROR   File "<string>", line 2, in create_engine
[2025-08-04 15:08:40,642] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\deprecations.py", line 281, in warned    return fn(*args, **kwargs)  # type: ignore[no-any-return]
[2025-08-04 15:08:40,643] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\create.py", line 553, in create_engine    entrypoint = u._get_entrypoint()
[2025-08-04 15:08:40,643] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\url.py", line 772, in _get_entrypoint    cls = registry.load(name)
[2025-08-04 15:08:40,643] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 453, in load    raise exc.NoSuchModuleError(        "Can't load plugin: %s:%s" % (self.group, name)    )
[2025-08-04 15:08:40,644] root ERROR sqlalchemy.exc.NoSuchModuleError: Can't load plugin: sqlalchemy.dialects:access.pyodbc
[2025-08-04 15:10:39,763] root INFO #############################################################################################################################
[2025-08-04 15:10:39,763] root INFO #                                                                                                                           #
[2025-08-04 15:10:39,763] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-08-04 15:10:39,763] root INFO #                                                                                                                           #
[2025-08-04 15:10:39,763] root INFO #############################################################################################################################
[2025-08-04 15:10:39,764] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-04 15:10:39,764] pyhamilton.interface INFO running in simulation mode
[2025-08-04 15:10:39,764] pyhamilton.interface INFO started the server thread
[2025-08-04 15:10:39,765] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-04 15:10:39,788] pyhamilton.interface INFO sending end run command to simulator
[2025-08-04 15:10:39,789] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-08-04 15:10:39,789] pyhamilton.interface INFO disconnected from server
[2025-08-04 15:10:39,890] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-04 15:10:39,890] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-04 15:10:39,893] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-04 15:10:39,895] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-04 15:10:39,896] pyhamilton.interface INFO dummy get request sent to server
[2025-08-04 15:10:39,896] pyhamilton.interface INFO server thread exited
[2025-08-04 15:10:39,902] root ERROR Traceback (most recent call last):
[2025-08-04 15:10:39,904] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 57, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-04 15:10:39,905] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 276, in multi_dispense    max_volume_tips = get_liquid_class_volume(liquid_class)  # Fetch the volume for the liquid class
[2025-08-04 15:10:39,905] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py", line 28, in get_liquid_class_volume    engine = create_engine(connection_uri)
[2025-08-04 15:10:39,906] root ERROR   File "<string>", line 2, in create_engine
[2025-08-04 15:10:39,907] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\deprecations.py", line 281, in warned    return fn(*args, **kwargs)  # type: ignore[no-any-return]
[2025-08-04 15:10:39,907] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\create.py", line 553, in create_engine    entrypoint = u._get_entrypoint()
[2025-08-04 15:10:39,908] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\url.py", line 772, in _get_entrypoint    cls = registry.load(name)
[2025-08-04 15:10:39,908] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 453, in load    raise exc.NoSuchModuleError(        "Can't load plugin: %s:%s" % (self.group, name)    )
[2025-08-04 15:10:39,909] root ERROR sqlalchemy.exc.NoSuchModuleError: Can't load plugin: sqlalchemy.dialects:access.pyodbc
[2025-08-04 15:12:11,109] root INFO #############################################################################################################################
[2025-08-04 15:12:11,109] root INFO #                                                                                                                           #
[2025-08-04 15:12:11,109] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-08-04 15:12:11,109] root INFO #                                                                                                                           #
[2025-08-04 15:12:11,109] root INFO #############################################################################################################################
[2025-08-04 15:12:11,109] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-04 15:12:11,110] pyhamilton.interface INFO running in simulation mode
[2025-08-04 15:12:11,110] pyhamilton.interface INFO started the server thread
[2025-08-04 15:12:11,110] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-04 15:12:11,111] pyhamilton.interface INFO sending end run command to simulator
[2025-08-04 15:12:11,111] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-08-04 15:12:11,111] pyhamilton.interface INFO disconnected from server
[2025-08-04 15:12:11,212] pyhamilton.interface INFO server thread exited
[2025-08-04 15:12:11,214] root ERROR Traceback (most recent call last):
[2025-08-04 15:12:11,216] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 57, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-04 15:12:11,216] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 276, in multi_dispense    max_volume_tips = get_liquid_class_volume(liquid_class)  # Fetch the volume for the liquid class
[2025-08-04 15:12:11,216] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py", line 38, in get_liquid_class_volume    engine = _build_engine(cfg.liquids_database)
[2025-08-04 15:12:11,216] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py", line 18, in _build_engine    _check_access_dialect()    ~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-04 15:12:11,216] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_class_viewer.py", line 10, in _check_access_dialect    raise ModuleNotFoundError(    ...<2 lines>...    )
[2025-08-04 15:12:11,216] root ERROR ModuleNotFoundError: SQLAlchemy Access dialect not found. Install with: pip install sqlalchemy-access
[2025-08-04 15:12:58,290] root INFO #############################################################################################################################
[2025-08-04 15:12:58,290] root INFO #                                                                                                                           #
[2025-08-04 15:12:58,290] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-08-04 15:12:58,290] root INFO #                                                                                                                           #
[2025-08-04 15:12:58,290] root INFO #############################################################################################################################
[2025-08-04 15:12:58,291] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-04 15:12:58,291] pyhamilton.interface INFO running in simulation mode
[2025-08-04 15:12:58,291] pyhamilton.interface INFO started the server thread
[2025-08-04 15:12:58,291] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-04 15:12:59,190] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 1; HTF_L_0001, 2; HTF_L_0001, 3; HTF_L_0001, 4; HTF_L_0001, 5; HTF_L_0001, 6; HTF_L_0001, 7; HTF_L_0001, 8
[2025-08-04 15:12:59,190] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f38b28ac7f', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 1;HTF_L_0001, 2;HTF_L_0001, 3;HTF_L_0001, 4;HTF_L_0001, 5;HTF_L_0001, 6;HTF_L_0001, 7;HTF_L_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:12:59,190] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:12:59,190] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f38b28ae1f', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:12:59,191] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:12:59,191] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f38b28af3b', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:12:59,191] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:12:59,191] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f38b28afe9', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:12:59,484] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 9; HTF_L_0001, 10; HTF_L_0001, 11; HTF_L_0001, 12; HTF_L_0001, 13; HTF_L_0001, 14; HTF_L_0001, 15; HTF_L_0001, 16
[2025-08-04 15:12:59,484] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f38b2d290c', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 9;HTF_L_0001, 10;HTF_L_0001, 11;HTF_L_0001, 12;HTF_L_0001, 13;HTF_L_0001, 14;HTF_L_0001, 15;HTF_L_0001, 16', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:12:59,484] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:12:59,484] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f38b2d2a3f', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:12:59,485] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:12:59,485] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f38b2d2bd4', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:12:59,485] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:12:59,485] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f38b2d2c8a', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:12:59,938] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 17; HTF_L_0001, 18; HTF_L_0001, 19; HTF_L_0001, 20; HTF_L_0001, 21; HTF_L_0001, 22; HTF_L_0001, 23; HTF_L_0001, 24
[2025-08-04 15:12:59,938] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f38b341861', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 17;HTF_L_0001, 18;HTF_L_0001, 19;HTF_L_0001, 20;HTF_L_0001, 21;HTF_L_0001, 22;HTF_L_0001, 23;HTF_L_0001, 24', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:12:59,939] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:12:59,939] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f38b341970', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:12:59,939] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:12:59,939] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f38b341a2b', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:12:59,939] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:12:59,939] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f38b341c6d', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:13:00,487] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 25; HTF_L_0001, 26; HTF_L_0001, 27; HTF_L_0001, 28; HTF_L_0001, 29; HTF_L_0001, 30; HTF_L_0001, 31; HTF_L_0001, 32
[2025-08-04 15:13:00,488] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f38b3c79eb', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 25;HTF_L_0001, 26;HTF_L_0001, 27;HTF_L_0001, 28;HTF_L_0001, 29;HTF_L_0001, 30;HTF_L_0001, 31;HTF_L_0001, 32', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:13:00,488] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:13:00,488] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f38b3c7b56', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:13:00,488] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:13:00,488] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f38b3c7caa', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:13:00,489] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:13:00,489] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f38b3c7d9a', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:13:00,972] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 33; HTF_L_0001, 34; HTF_L_0001, 35; HTF_L_0001, 36; HTF_L_0001, 37; HTF_L_0001, 38; HTF_L_0001, 39; HTF_L_0001, 40
[2025-08-04 15:13:00,972] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f38b43dce1', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 33;HTF_L_0001, 34;HTF_L_0001, 35;HTF_L_0001, 36;HTF_L_0001, 37;HTF_L_0001, 38;HTF_L_0001, 39;HTF_L_0001, 40', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:13:00,972] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:13:00,972] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f38b43dde2', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:13:00,972] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:13:00,972] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f38b43ded2', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:13:00,972] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:13:00,972] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f38b43df91', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:13:01,497] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 41; HTF_L_0001, 42; HTF_L_0001, 43; HTF_L_0001, 44; HTF_L_0001, 45; HTF_L_0001, 46; HTF_L_0001, 47; HTF_L_0001, 48
[2025-08-04 15:13:01,497] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f38b4be034', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 41;HTF_L_0001, 42;HTF_L_0001, 43;HTF_L_0001, 44;HTF_L_0001, 45;HTF_L_0001, 46;HTF_L_0001, 47;HTF_L_0001, 48', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:13:01,497] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:13:01,497] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f38b4be0fb', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:13:01,497] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:13:01,497] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f38b4be1b0', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:13:01,497] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:13:01,497] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f38b4be271', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:13:01,995] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 49; HTF_L_0001, 50; HTF_L_0001, 51; HTF_L_0001, 52; HTF_L_0001, 53; HTF_L_0001, 54; HTF_L_0001, 55; HTF_L_0001, 56
[2025-08-04 15:13:01,995] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f38b537b36', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 49;HTF_L_0001, 50;HTF_L_0001, 51;HTF_L_0001, 52;HTF_L_0001, 53;HTF_L_0001, 54;HTF_L_0001, 55;HTF_L_0001, 56', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:13:01,995] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:13:01,996] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f38b537bf2', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:13:01,996] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:13:01,996] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f38b537c9f', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:13:01,996] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:13:01,996] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f38b537d8f', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:13:02,469] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 57; HTF_L_0001, 58; HTF_L_0001, 59; HTF_L_0001, 60; HTF_L_0001, 61; HTF_L_0001, 62; HTF_L_0001, 63; HTF_L_0001, 64
[2025-08-04 15:13:02,469] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f38b5ab5d4', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 57;HTF_L_0001, 58;HTF_L_0001, 59;HTF_L_0001, 60;HTF_L_0001, 61;HTF_L_0001, 62;HTF_L_0001, 63;HTF_L_0001, 64', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:13:02,469] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:13:02,469] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f38b5ab698', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:13:02,469] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:13:02,469] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f38b5ab74b', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:13:02,470] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:13:02,470] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f38b5ab846', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:13:02,997] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 65; HTF_L_0001, 66; HTF_L_0001, 67; HTF_L_0001, 68; HTF_L_0001, 69; HTF_L_0001, 70; HTF_L_0001, 71; HTF_L_0001, 72
[2025-08-04 15:13:02,997] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f38b62c506', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 65;HTF_L_0001, 66;HTF_L_0001, 67;HTF_L_0001, 68;HTF_L_0001, 69;HTF_L_0001, 70;HTF_L_0001, 71;HTF_L_0001, 72', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:13:02,997] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:13:02,997] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f38b62c5c8', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:13:02,998] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:13:02,998] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f38b62c676', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:13:02,998] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:13:02,998] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f38b62c721', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:13:03,470] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 73; HTF_L_0001, 74; HTF_L_0001, 75; HTF_L_0001, 76; HTF_L_0001, 77; HTF_L_0001, 78; HTF_L_0001, 79; HTF_L_0001, 80
[2025-08-04 15:13:03,471] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f38b69fdfb', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 73;HTF_L_0001, 74;HTF_L_0001, 75;HTF_L_0001, 76;HTF_L_0001, 77;HTF_L_0001, 78;HTF_L_0001, 79;HTF_L_0001, 80', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:13:03,471] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:13:03,471] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f38b69feca', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:13:03,471] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:13:03,471] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f38b69ff7b', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:13:03,471] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:13:03,471] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f38b6a0055', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:13:04,000] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 81; HTF_L_0001, 82; HTF_L_0001, 83; HTF_L_0001, 84; HTF_L_0001, 85; HTF_L_0001, 86; HTF_L_0001, 87; HTF_L_0001, 88
[2025-08-04 15:13:04,001] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f38b72147b', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 81;HTF_L_0001, 82;HTF_L_0001, 83;HTF_L_0001, 84;HTF_L_0001, 85;HTF_L_0001, 86;HTF_L_0001, 87;HTF_L_0001, 88', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:13:04,001] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:13:04,001] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f38b721577', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:13:04,001] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:13:04,001] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f38b721649', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:13:04,001] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:13:04,001] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f38b7216ff', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:13:04,559] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 89; HTF_L_0001, 90; HTF_L_0001, 91; HTF_L_0001, 92; HTF_L_0001, 93; HTF_L_0001, 94; HTF_L_0001, 95; HTF_L_0001, 96
[2025-08-04 15:13:04,559] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f38b7a98d9', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 89;HTF_L_0001, 90;HTF_L_0001, 91;HTF_L_0001, 92;HTF_L_0001, 93;HTF_L_0001, 94;HTF_L_0001, 95;HTF_L_0001, 96', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:13:04,559] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:13:04,559] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f38b7a99a3', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:13:04,559] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:13:04,559] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f38b7a9aaf', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:13:04,559] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:13:04,559] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f38b7a9b54', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:13:04,560] pyhamilton.interface INFO sending end run command to simulator
[2025-08-04 15:13:04,560] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-08-04 15:13:04,560] pyhamilton.interface INFO disconnected from server
[2025-08-04 15:13:04,660] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-04 15:13:04,661] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-04 15:13:04,664] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-04 15:13:04,667] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-04 15:13:04,667] pyhamilton.interface INFO dummy get request sent to server
[2025-08-04 15:13:04,668] pyhamilton.interface INFO server thread exited
[2025-08-04 15:16:58,433] root INFO #############################################################################################################################
[2025-08-04 15:16:58,433] root INFO #                                                                                                                           #
[2025-08-04 15:16:58,433] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-08-04 15:16:58,433] root INFO #                                                                                                                           #
[2025-08-04 15:16:58,433] root INFO #############################################################################################################################
[2025-08-04 15:16:58,433] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-04 15:16:58,434] pyhamilton.interface INFO running in simulation mode
[2025-08-04 15:16:58,434] pyhamilton.interface INFO started the server thread
[2025-08-04 15:16:58,434] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-04 15:16:59,302] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 1; HTF_L_0001, 2; HTF_L_0001, 3; HTF_L_0001, 4; HTF_L_0001, 5; HTF_L_0001, 6; HTF_L_0001, 7; HTF_L_0001, 8
[2025-08-04 15:16:59,302] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f399787ffa', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 1;HTF_L_0001, 2;HTF_L_0001, 3;HTF_L_0001, 4;HTF_L_0001, 5;HTF_L_0001, 6;HTF_L_0001, 7;HTF_L_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:16:59,303] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:16:59,303] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f399788139', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:16:59,303] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:16:59,303] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f39978820e', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:16:59,303] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:16:59,303] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f3997882b6', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:16:59,750] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 9; HTF_L_0001, 10; HTF_L_0001, 11; HTF_L_0001, 12; HTF_L_0001, 13; HTF_L_0001, 14; HTF_L_0001, 15; HTF_L_0001, 16
[2025-08-04 15:16:59,750] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f3997f54f1', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 9;HTF_L_0001, 10;HTF_L_0001, 11;HTF_L_0001, 12;HTF_L_0001, 13;HTF_L_0001, 14;HTF_L_0001, 15;HTF_L_0001, 16', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:16:59,750] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:16:59,750] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f3997f55d8', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:16:59,751] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:16:59,751] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f3997f56d4', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:16:59,751] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:16:59,751] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f3997f5789', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:17:00,280] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 17; HTF_L_0001, 18; HTF_L_0001, 19; HTF_L_0001, 20; HTF_L_0001, 21; HTF_L_0001, 22; HTF_L_0001, 23; HTF_L_0001, 24
[2025-08-04 15:17:00,280] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f399876af0', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 17;HTF_L_0001, 18;HTF_L_0001, 19;HTF_L_0001, 20;HTF_L_0001, 21;HTF_L_0001, 22;HTF_L_0001, 23;HTF_L_0001, 24', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:17:00,280] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:17:00,280] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f399876bb8', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:17:00,280] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:17:00,280] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f399876c67', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A3;MIDI_Pipette, B3;MIDI_Pipette, C3;MIDI_Pipette, D3;MIDI_Pipette, E3;MIDI_Pipette, F3;MIDI_Pipette, G3;MIDI_Pipette, H3', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:17:00,281] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:17:00,281] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f399876e9e', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:17:00,839] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 25; HTF_L_0001, 26; HTF_L_0001, 27; HTF_L_0001, 28; HTF_L_0001, 29; HTF_L_0001, 30; HTF_L_0001, 31; HTF_L_0001, 32
[2025-08-04 15:17:00,840] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f3998ff47a', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 25;HTF_L_0001, 26;HTF_L_0001, 27;HTF_L_0001, 28;HTF_L_0001, 29;HTF_L_0001, 30;HTF_L_0001, 31;HTF_L_0001, 32', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:17:00,840] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:17:00,840] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f3998ff5ab', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:17:00,840] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:17:00,840] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f3998ff678', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A4;MIDI_Pipette, B4;MIDI_Pipette, C4;MIDI_Pipette, D4;MIDI_Pipette, E4;MIDI_Pipette, F4;MIDI_Pipette, G4;MIDI_Pipette, H4', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:17:00,840] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:17:00,840] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f3998ff71e', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:17:01,391] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 33; HTF_L_0001, 34; HTF_L_0001, 35; HTF_L_0001, 36; HTF_L_0001, 37; HTF_L_0001, 38; HTF_L_0001, 39; HTF_L_0001, 40
[2025-08-04 15:17:01,391] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f399985eaf', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 33;HTF_L_0001, 34;HTF_L_0001, 35;HTF_L_0001, 36;HTF_L_0001, 37;HTF_L_0001, 38;HTF_L_0001, 39;HTF_L_0001, 40', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:17:01,391] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:17:01,391] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f399986028', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:17:01,392] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:17:01,392] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f399986176', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A5;MIDI_Pipette, B5;MIDI_Pipette, C5;MIDI_Pipette, D5;MIDI_Pipette, E5;MIDI_Pipette, F5;MIDI_Pipette, G5;MIDI_Pipette, H5', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:17:01,392] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:17:01,392] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f399986281', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:17:01,960] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 41; HTF_L_0001, 42; HTF_L_0001, 43; HTF_L_0001, 44; HTF_L_0001, 45; HTF_L_0001, 46; HTF_L_0001, 47; HTF_L_0001, 48
[2025-08-04 15:17:01,960] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f399a10d2e', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 41;HTF_L_0001, 42;HTF_L_0001, 43;HTF_L_0001, 44;HTF_L_0001, 45;HTF_L_0001, 46;HTF_L_0001, 47;HTF_L_0001, 48', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:17:01,960] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:17:01,960] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f399a10def', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:17:01,960] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:17:01,960] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f399a10ea0', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A6;MIDI_Pipette, B6;MIDI_Pipette, C6;MIDI_Pipette, D6;MIDI_Pipette, E6;MIDI_Pipette, F6;MIDI_Pipette, G6;MIDI_Pipette, H6', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:17:01,960] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:17:01,961] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f399a10f4f', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:17:02,441] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 49; HTF_L_0001, 50; HTF_L_0001, 51; HTF_L_0001, 52; HTF_L_0001, 53; HTF_L_0001, 54; HTF_L_0001, 55; HTF_L_0001, 56
[2025-08-04 15:17:02,441] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f399a86402', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 49;HTF_L_0001, 50;HTF_L_0001, 51;HTF_L_0001, 52;HTF_L_0001, 53;HTF_L_0001, 54;HTF_L_0001, 55;HTF_L_0001, 56', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:17:02,441] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:17:02,441] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f399a864bf', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:17:02,441] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:17:02,441] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f399a86570', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A7;MIDI_Pipette, B7;MIDI_Pipette, C7;MIDI_Pipette, D7;MIDI_Pipette, E7;MIDI_Pipette, F7;MIDI_Pipette, G7;MIDI_Pipette, H7', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:17:02,441] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:17:02,442] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f399a86660', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:17:02,942] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 57; HTF_L_0001, 58; HTF_L_0001, 59; HTF_L_0001, 60; HTF_L_0001, 61; HTF_L_0001, 62; HTF_L_0001, 63; HTF_L_0001, 64
[2025-08-04 15:17:02,942] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f399b00a54', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 57;HTF_L_0001, 58;HTF_L_0001, 59;HTF_L_0001, 60;HTF_L_0001, 61;HTF_L_0001, 62;HTF_L_0001, 63;HTF_L_0001, 64', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:17:02,942] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:17:02,943] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f399b00b4f', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:17:02,943] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:17:02,943] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f399b00c50', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A8;MIDI_Pipette, B8;MIDI_Pipette, C8;MIDI_Pipette, D8;MIDI_Pipette, E8;MIDI_Pipette, F8;MIDI_Pipette, G8;MIDI_Pipette, H8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:17:02,943] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:17:02,943] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f399b00d02', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:17:03,441] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 65; HTF_L_0001, 66; HTF_L_0001, 67; HTF_L_0001, 68; HTF_L_0001, 69; HTF_L_0001, 70; HTF_L_0001, 71; HTF_L_0001, 72
[2025-08-04 15:17:03,441] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f399b7a823', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 65;HTF_L_0001, 66;HTF_L_0001, 67;HTF_L_0001, 68;HTF_L_0001, 69;HTF_L_0001, 70;HTF_L_0001, 71;HTF_L_0001, 72', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:17:03,442] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:17:03,442] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f399b7a8f9', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:17:03,442] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:17:03,442] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f399b7a9a9', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A9;MIDI_Pipette, B9;MIDI_Pipette, C9;MIDI_Pipette, D9;MIDI_Pipette, E9;MIDI_Pipette, F9;MIDI_Pipette, G9;MIDI_Pipette, H9', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:17:03,442] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:17:03,442] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f399b7aa4e', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:17:03,926] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 73; HTF_L_0001, 74; HTF_L_0001, 75; HTF_L_0001, 76; HTF_L_0001, 77; HTF_L_0001, 78; HTF_L_0001, 79; HTF_L_0001, 80
[2025-08-04 15:17:03,926] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f399bf0bc7', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 73;HTF_L_0001, 74;HTF_L_0001, 75;HTF_L_0001, 76;HTF_L_0001, 77;HTF_L_0001, 78;HTF_L_0001, 79;HTF_L_0001, 80', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:17:03,926] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:17:03,926] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f399bf0c8b', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:17:03,926] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:17:03,926] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f399bf0d3c', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A10;MIDI_Pipette, B10;MIDI_Pipette, C10;MIDI_Pipette, D10;MIDI_Pipette, E10;MIDI_Pipette, F10;MIDI_Pipette, G10;MIDI_Pipette, H10', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:17:03,926] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:17:03,926] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f399bf0df0', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:17:04,413] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 81; HTF_L_0001, 82; HTF_L_0001, 83; HTF_L_0001, 84; HTF_L_0001, 85; HTF_L_0001, 86; HTF_L_0001, 87; HTF_L_0001, 88
[2025-08-04 15:17:04,413] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f399c67aaa', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 81;HTF_L_0001, 82;HTF_L_0001, 83;HTF_L_0001, 84;HTF_L_0001, 85;HTF_L_0001, 86;HTF_L_0001, 87;HTF_L_0001, 88', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:17:04,413] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:17:04,413] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f399c67ba6', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:17:04,413] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:17:04,413] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f399c67c6b', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A11;MIDI_Pipette, B11;MIDI_Pipette, C11;MIDI_Pipette, D11;MIDI_Pipette, E11;MIDI_Pipette, F11;MIDI_Pipette, G11;MIDI_Pipette, H11', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:17:04,413] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:17:04,413] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f399c67d21', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:17:04,964] pyhamilton.interface INFO tip_pick_up: Pick up tips at HTF_L_0001, 89; HTF_L_0001, 90; HTF_L_0001, 91; HTF_L_0001, 92; HTF_L_0001, 93; HTF_L_0001, 94; HTF_L_0001, 95; HTF_L_0001, 96
[2025-08-04 15:17:04,964] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x17f399cee308', 'tipSequence': '', 'labwarePositions': 'HTF_L_0001, 89;HTF_L_0001, 90;HTF_L_0001, 91;HTF_L_0001, 92;HTF_L_0001, 93;HTF_L_0001, 94;HTF_L_0001, 95;HTF_L_0001, 96', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-04 15:17:04,964] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-04 15:17:04,964] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x17f399cee3d1', 'aspirateSequence': '', 'labwarePositions': 'rgt_cont_60ml_BC_A00_0001, 1;rgt_cont_60ml_BC_A00_0001, 2;rgt_cont_60ml_BC_A00_0001, 3;rgt_cont_60ml_BC_A00_0001, 4;rgt_cont_60ml_BC_A00_0001, 5;rgt_cont_60ml_BC_A00_0001, 6;rgt_cont_60ml_BC_A00_0001, 7;rgt_cont_60ml_BC_A00_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 2, 'capacitiveLLD': 1, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2, 'liquidHeight': 0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:17:04,964] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A12; MIDI_Pipette, B12; MIDI_Pipette, C12; MIDI_Pipette, D12; MIDI_Pipette, E12; MIDI_Pipette, F12; MIDI_Pipette, G12; MIDI_Pipette, H12] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-04 15:17:04,964] JSONLogger INFO {'command': 'channelDispense', 'id': '0x17f399cee480', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A12;MIDI_Pipette, B12;MIDI_Pipette, C12;MIDI_Pipette, D12;MIDI_Pipette, E12;MIDI_Pipette, F12;MIDI_Pipette, G12;MIDI_Pipette, H12', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-04 15:17:04,964] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-04 15:17:04,964] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x17f399cee533', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-04 15:17:04,964] pyhamilton.interface INFO sending end run command to simulator
[2025-08-04 15:17:04,965] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-08-04 15:17:04,965] pyhamilton.interface INFO disconnected from server
[2025-08-04 15:17:05,065] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-04 15:17:05,066] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-04 15:17:05,071] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-04 15:17:05,073] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-04 15:17:05,074] pyhamilton.interface INFO dummy get request sent to server
[2025-08-04 15:17:05,074] pyhamilton.interface INFO server thread exited
[2025-08-05 14:34:38,897] root INFO #############################################################################################################################
[2025-08-05 14:34:38,899] root INFO #                                                                                                                           #
[2025-08-05 14:34:38,899] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-08-05 14:34:38,899] root INFO #                                                                                                                           #
[2025-08-05 14:34:38,899] root INFO #############################################################################################################################
[2025-08-05 14:34:38,900] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-05 14:34:38,901] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x18071e8c723f')
[2025-08-05 14:34:38,901] pyhamilton.interface INFO started the oem application for simulation
[2025-08-05 14:34:38,901] pyhamilton.interface INFO started the server thread
[2025-08-05 14:34:38,901] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-05 14:34:42,470] pyhamilton.interface INFO tip_pick_up: Pick up tips at STF_L_0001, 1; STF_L_0001, 2; STF_L_0001, 3; STF_L_0001, 4; STF_L_0001, 5; STF_L_0001, 6; STF_L_0001, 7; STF_L_0001, 8
[2025-08-05 14:34:51,476] pyhamilton.interface INFO aspirate: Aspirate volumes [300, 300, 300, 300, 300, 300, 300, 300] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-05 14:35:08,486] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-05 14:35:18,493] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-05 14:35:26,506] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-05 14:35:34,511] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-05 14:35:42,517] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-05 14:35:47,522] pyhamilton.interface INFO sending end run command to simulator
[2025-08-05 14:35:49,023] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-05 14:35:49,023] pyhamilton.interface INFO disconnected from server
[2025-08-05 14:35:49,124] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-05 14:35:49,125] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-05 14:35:49,128] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-05 14:35:49,130] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-05 14:35:49,131] pyhamilton.interface INFO dummy get request sent to server
[2025-08-05 14:35:49,131] pyhamilton.interface INFO server thread exited
[2025-08-05 14:35:49,134] root ERROR Traceback (most recent call last):
[2025-08-05 14:35:49,138] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 57, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'StandardVolumeFilter_Water_DispenseJet_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-05 14:35:49,138] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 303, in multi_dispense    response = ham_int.dispense(column, column_volumes, liquidClass=liquid_class,                                mixCycles=mix_cycles, mixVolume=0,                                liquidHeight=dispense_height,                                capacitiveLLD=0,                                liquidFollowing=0)
[2025-08-05 14:35:49,138] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 916, in dispense    response = self.wait_on_response(        self.send_command(    ...<7 lines>...        return_data=['step-return2', 'step-return3']    )
[2025-08-05 14:35:49,138] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-05 14:35:49,138] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-05 14:35:49,138] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 414, in raise_first_exception    raise HAMILTON_ERROR_MAP[firstErrorCode]()
[2025-08-05 14:35:49,139] root ERROR pyhamilton.oemerr.NotAspiratedError
[2025-08-05 14:46:36,520] root INFO #############################################################################################################################
[2025-08-05 14:46:36,520] root INFO #                                                                                                                           #
[2025-08-05 14:46:36,521] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-08-05 14:46:36,521] root INFO #                                                                                                                           #
[2025-08-05 14:46:36,521] root INFO #############################################################################################################################
[2025-08-05 14:46:36,523] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-05 14:46:36,524] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x180749528583')
[2025-08-05 14:46:36,524] pyhamilton.interface INFO started the oem application for simulation
[2025-08-05 14:46:36,525] pyhamilton.interface INFO started the server thread
[2025-08-05 14:46:36,525] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-05 14:46:38,090] pyhamilton.interface INFO tip_pick_up: Pick up tips at STF_L_0001, 1; STF_L_0001, 2; STF_L_0001, 3; STF_L_0001, 4; STF_L_0001, 5; STF_L_0001, 6; STF_L_0001, 7; STF_L_0001, 8
[2025-08-05 14:46:47,097] pyhamilton.interface INFO aspirate: Aspirate volumes [300, 300, 300, 300, 300, 300, 300, 300] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Part', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-05 14:47:03,112] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Part', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-05 14:47:13,121] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Part', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-05 14:47:21,126] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Part', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-05 14:47:28,132] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Part', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-05 14:47:36,137] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Part', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-05 14:47:44,151] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Part', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-05 14:47:52,159] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-05 14:48:02,874] pyhamilton.interface INFO tip_pick_up: Pick up tips at STF_L_0001, 9; STF_L_0001, 10; STF_L_0001, 11; STF_L_0001, 12; STF_L_0001, 13; STF_L_0001, 14; STF_L_0001, 15; STF_L_0001, 16
[2025-08-05 14:48:17,885] pyhamilton.interface INFO sending end run command to simulator
[2025-08-05 14:48:19,386] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-05 14:48:19,386] pyhamilton.interface INFO disconnected from server
[2025-08-05 14:48:19,487] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-05 14:48:19,488] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-05 14:48:19,492] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-05 14:48:19,493] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-05 14:48:19,494] pyhamilton.interface INFO dummy get request sent to server
[2025-08-05 14:48:19,494] pyhamilton.interface INFO server thread exited
[2025-08-05 14:48:19,501] root ERROR Traceback (most recent call last):
[2025-08-05 14:48:19,503] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_handling_wrappers.py", line 214, in tracked_tip_pick_up    ham_int.tip_pick_up(tips_poss)    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
[2025-08-05 14:48:19,503] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 961, in tip_pick_up    self.wait_on_response(    ~~~~~~~~~~~~~~~~~~~~~^        self.send_command(        ^^^^^^^^^^^^^^^^^^    ...<5 lines>...        raise_first_exception=True        ^^^^^^^^^^^^^^^^^^^^^^^^^^    )    ^
[2025-08-05 14:48:19,503] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-05 14:48:19,504] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-05 14:48:19,504] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 414, in raise_first_exception    raise HAMILTON_ERROR_MAP[firstErrorCode]()
[2025-08-05 14:48:19,504] root ERROR pyhamilton.oemerr.NoTipError
[2025-08-05 14:48:19,504] root ERROR During handling of the above exception, another exception occurred:
[2025-08-05 14:48:19,505] root ERROR Traceback (most recent call last):
[2025-08-05 14:48:19,506] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 59, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'StandardVolumeFilter_Water_DispenseJet_Part')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-05 14:48:19,506] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 287, in multi_dispense    tracked_tip_pick_up(ham_int, tips, n=8)  # Pick up tips for the first column of the batch    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
[2025-08-05 14:48:19,506] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_handling_wrappers.py", line 216, in tracked_tip_pick_up    tips_tracker.mark_occupied(tips_poss)    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
[2025-08-05 14:48:19,507] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\managed_resources.py", line 116, in mark_occupied    rack, _ = self.occupancy[index]              ~~~~~~~~~~~~~~^^^^^^^
[2025-08-05 14:48:19,507] root ERROR TypeError: list indices must be integers or slices, not list
[2025-08-05 14:52:51,795] root INFO ###########################################################################################################################
[2025-08-05 14:52:51,795] root INFO #                                                                                                                         #
[2025-08-05 14:52:51,795] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-08-05 14:52:51,796] root INFO #                                                                                                                         #
[2025-08-05 14:52:51,796] root INFO ###########################################################################################################################
[2025-08-05 14:52:51,797] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-05 14:52:51,798] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x18075f54f850')
[2025-08-05 14:52:51,798] pyhamilton.interface INFO started the oem application for simulation
[2025-08-05 14:52:51,798] pyhamilton.interface INFO started the server thread
[2025-08-05 14:52:51,798] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-05 14:52:53,101] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-08-05 14:53:02,678] pyhamilton.interface INFO aspirate: Aspirate volumes [0, 0, 0, 0, 0, 0, 0, 0] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-08-05 14:53:16,727] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12; TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16
[2025-08-05 14:53:21,732] pyhamilton.interface INFO sending end run command to simulator
[2025-08-05 14:53:23,232] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-05 14:53:23,233] pyhamilton.interface INFO disconnected from server
[2025-08-05 14:53:23,333] pyhamilton.interface INFO server thread exited
[2025-08-05 14:53:23,342] root ERROR Traceback (most recent call last):
[2025-08-05 14:53:23,344] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_handling_wrappers.py", line 214, in tracked_tip_pick_up    ham_int.tip_pick_up(tips_poss)    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
[2025-08-05 14:53:23,344] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 961, in tip_pick_up    self.wait_on_response(    ~~~~~~~~~~~~~~~~~~~~~^        self.send_command(        ^^^^^^^^^^^^^^^^^^    ...<5 lines>...        raise_first_exception=True        ^^^^^^^^^^^^^^^^^^^^^^^^^^    )    ^
[2025-08-05 14:53:23,345] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-05 14:53:23,346] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-05 14:53:23,346] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 414, in raise_first_exception    raise HAMILTON_ERROR_MAP[firstErrorCode]()
[2025-08-05 14:53:23,347] root ERROR pyhamilton.oemerr.TipPresentError
[2025-08-05 14:53:23,348] root ERROR During handling of the above exception, another exception occurred:
[2025-08-05 14:53:23,348] root ERROR Traceback (most recent call last):
[2025-08-05 14:53:23,349] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 36, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-05 14:53:23,349] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 204, in pip_transfer    tracked_tip_pick_up(ham_int, tips, num_tips)    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-05 14:53:23,349] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\liquid_handling_wrappers.py", line 216, in tracked_tip_pick_up    tips_tracker.mark_occupied(tips_poss)    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
[2025-08-05 14:53:23,350] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\managed_resources.py", line 116, in mark_occupied    rack, _ = self.occupancy[index]              ~~~~~~~~~~~~~~^^^^^^^
[2025-08-05 14:53:23,350] root ERROR TypeError: list indices must be integers or slices, not list
[2025-08-05 14:57:14,888] root INFO ###########################################################################################################################
[2025-08-05 14:57:14,888] root INFO #                                                                                                                         #
[2025-08-05 14:57:14,889] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-08-05 14:57:14,889] root INFO #                                                                                                                         #
[2025-08-05 14:57:14,889] root INFO ###########################################################################################################################
[2025-08-05 14:57:14,890] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-05 14:57:14,890] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x18076f5f5689')
[2025-08-05 14:57:14,890] pyhamilton.interface INFO started the oem application for simulation
[2025-08-05 14:57:14,890] pyhamilton.interface INFO started the server thread
[2025-08-05 14:57:14,890] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-05 14:57:16,186] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-08-05 14:57:25,661] pyhamilton.interface INFO aspirate: Aspirate volumes [0, 0, 0, 0, 0, 0, 0, 0] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'capacitiveLLD': 1}
[2025-08-05 14:57:37,671] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-08-05 14:57:51,679] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-08-05 14:58:04,693] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-05 14:58:15,744] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12; TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16
[2025-08-05 14:58:26,757] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-08-05 14:58:41,776] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-08-05 14:58:53,784] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-05 14:59:04,819] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 17; TIP_50uLF_L_0001, 18; TIP_50uLF_L_0001, 19; TIP_50uLF_L_0001, 20; TIP_50uLF_L_0001, 21; TIP_50uLF_L_0001, 22; TIP_50uLF_L_0001, 23; TIP_50uLF_L_0001, 24
[2025-08-05 14:59:16,827] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-08-05 14:59:31,840] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-08-05 14:59:44,861] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-05 14:59:54,908] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 25; TIP_50uLF_L_0001, 26; TIP_50uLF_L_0001, 27; TIP_50uLF_L_0001, 28; TIP_50uLF_L_0001, 29; TIP_50uLF_L_0001, 30; TIP_50uLF_L_0001, 31; TIP_50uLF_L_0001, 32
[2025-08-05 15:00:05,916] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-08-05 15:00:20,931] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-08-05 15:00:33,949] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-05 15:00:44,001] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 33; TIP_50uLF_L_0001, 34; TIP_50uLF_L_0001, 35; TIP_50uLF_L_0001, 36; TIP_50uLF_L_0001, 37; TIP_50uLF_L_0001, 38; TIP_50uLF_L_0001, 39; TIP_50uLF_L_0001, 40
[2025-08-05 15:00:55,017] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 5, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-08-05 15:01:11,032] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 2, 'liquidFollowing': False}
[2025-08-05 15:01:25,041] pyhamilton.interface INFO sending end run command to simulator
[2025-08-05 15:01:26,542] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-05 15:01:26,543] pyhamilton.interface INFO disconnected from server
[2025-08-05 15:01:26,643] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-05 15:01:26,644] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-05 15:01:26,647] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-05 15:01:26,649] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-05 15:01:26,650] pyhamilton.interface INFO dummy get request sent to server
[2025-08-05 15:01:26,650] pyhamilton.interface INFO server thread exited
[2025-08-05 15:01:26,654] root ERROR Traceback (most recent call last):
[2025-08-05 15:01:26,656] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 36, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-05 15:01:26,656] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 223, in pip_transfer    response = ham_int.dispense(column, column_volumes, liquidClass=liquid_class,                                mixCycles=mix_cycles, mixVolume=vol_mix_dispense,                                liquidHeight=dispense_height_from_bottom,                                capacitiveLLD=dispense_capacitative_LLD,                                liquidFollowing=liquid_following_dispense)
[2025-08-05 15:01:26,656] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 916, in dispense    response = self.wait_on_response(        self.send_command(    ...<7 lines>...        return_data=['step-return2', 'step-return3']    )
[2025-08-05 15:01:26,657] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-05 15:01:26,657] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-05 15:01:26,657] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 414, in raise_first_exception    raise HAMILTON_ERROR_MAP[firstErrorCode]()
[2025-08-05 15:01:26,657] root ERROR pyhamilton.oemerr.LiquidLevelError
[2025-08-05 15:11:22,980] root INFO ###########################################################################################################################
[2025-08-05 15:11:22,981] root INFO #                                                                                                                         #
[2025-08-05 15:11:22,981] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-08-05 15:11:22,982] root INFO #                                                                                                                         #
[2025-08-05 15:11:22,982] root INFO ###########################################################################################################################
[2025-08-05 15:11:22,982] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-05 15:11:22,983] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x1807a1af02ad')
[2025-08-05 15:11:22,983] pyhamilton.interface INFO started the oem application for simulation
[2025-08-05 15:11:22,984] pyhamilton.interface INFO started the server thread
[2025-08-05 15:11:22,984] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-05 15:11:24,103] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-08-05 15:11:34,507] pyhamilton.interface INFO sending end run command to simulator
[2025-08-05 15:11:36,009] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-05 15:11:36,009] pyhamilton.interface INFO disconnected from server
[2025-08-05 15:11:36,110] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-05 15:11:36,111] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-05 15:11:36,118] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-05 15:11:36,120] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-05 15:11:36,121] pyhamilton.interface INFO dummy get request sent to server
[2025-08-05 15:11:36,121] pyhamilton.interface INFO server thread exited
[2025-08-05 15:11:36,124] root ERROR Traceback (most recent call last):
[2025-08-05 15:11:36,126] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 38, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty', aspirate_height_from_bottom=1,                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 dispense_height_from_bottom=1)                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-05 15:11:36,127] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 196, in pip_transfer    aspirate_mode = 2 if performed_additional_volume_transfer else 0                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-05 15:11:36,127] root ERROR UnboundLocalError: cannot access local variable 'performed_additional_volume_transfer' where it is not associated with a value
[2025-08-05 15:13:16,485] root INFO ###########################################################################################################################
[2025-08-05 15:13:16,485] root INFO #                                                                                                                         #
[2025-08-05 15:13:16,485] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py     #
[2025-08-05 15:13:16,485] root INFO #                                                                                                                         #
[2025-08-05 15:13:16,485] root INFO ###########################################################################################################################
[2025-08-05 15:13:16,486] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-05 15:13:16,486] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x1807a891838d')
[2025-08-05 15:13:16,486] pyhamilton.interface INFO started the oem application for simulation
[2025-08-05 15:13:16,487] pyhamilton.interface INFO started the server thread
[2025-08-05 15:13:16,487] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-05 15:13:17,546] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-08-05 15:13:27,057] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 1, 'capacitiveLLD': 0, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-08-05 15:13:41,081] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 1, 'capacitiveLLD': 0, 'liquidFollowing': False}
[2025-08-05 15:13:54,102] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-05 15:14:05,140] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 9; TIP_50uLF_L_0001, 10; TIP_50uLF_L_0001, 11; TIP_50uLF_L_0001, 12; TIP_50uLF_L_0001, 13; TIP_50uLF_L_0001, 14; TIP_50uLF_L_0001, 15; TIP_50uLF_L_0001, 16
[2025-08-05 15:14:17,148] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 1, 'capacitiveLLD': 0, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-08-05 15:14:34,169] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 1, 'capacitiveLLD': 0, 'liquidFollowing': False}
[2025-08-05 15:14:49,190] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-05 15:15:01,264] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 17; TIP_50uLF_L_0001, 18; TIP_50uLF_L_0001, 19; TIP_50uLF_L_0001, 20; TIP_50uLF_L_0001, 21; TIP_50uLF_L_0001, 22; TIP_50uLF_L_0001, 23; TIP_50uLF_L_0001, 24
[2025-08-05 15:15:13,274] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 1, 'capacitiveLLD': 0, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-08-05 15:15:33,285] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 1, 'capacitiveLLD': 0, 'liquidFollowing': False}
[2025-08-05 15:15:46,294] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-05 15:15:57,338] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 25; TIP_50uLF_L_0001, 26; TIP_50uLF_L_0001, 27; TIP_50uLF_L_0001, 28; TIP_50uLF_L_0001, 29; TIP_50uLF_L_0001, 30; TIP_50uLF_L_0001, 31; TIP_50uLF_L_0001, 32
[2025-08-05 15:16:08,347] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 1, 'capacitiveLLD': 0, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-08-05 15:16:23,368] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 1, 'capacitiveLLD': 0, 'liquidFollowing': False}
[2025-08-05 15:16:37,377] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-05 15:16:49,437] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 33; TIP_50uLF_L_0001, 34; TIP_50uLF_L_0001, 35; TIP_50uLF_L_0001, 36; TIP_50uLF_L_0001, 37; TIP_50uLF_L_0001, 38; TIP_50uLF_L_0001, 39; TIP_50uLF_L_0001, 40
[2025-08-05 15:16:59,443] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 1, 'capacitiveLLD': 0, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-08-05 15:17:15,453] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 1, 'capacitiveLLD': 0, 'liquidFollowing': False}
[2025-08-05 15:17:33,463] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-05 15:17:48,528] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 41; TIP_50uLF_L_0001, 42; TIP_50uLF_L_0001, 43; TIP_50uLF_L_0001, 44; TIP_50uLF_L_0001, 45; TIP_50uLF_L_0001, 46; TIP_50uLF_L_0001, 47; TIP_50uLF_L_0001, 48
[2025-08-05 15:18:02,541] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 1, 'capacitiveLLD': 0, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-08-05 15:18:25,579] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 1, 'capacitiveLLD': 0, 'liquidFollowing': False}
[2025-08-05 15:18:45,609] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-05 15:18:59,674] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 49; TIP_50uLF_L_0001, 50; TIP_50uLF_L_0001, 51; TIP_50uLF_L_0001, 52; TIP_50uLF_L_0001, 53; TIP_50uLF_L_0001, 54; TIP_50uLF_L_0001, 55; TIP_50uLF_L_0001, 56
[2025-08-05 15:19:13,684] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 1, 'capacitiveLLD': 0, 'aspirateMode': 0, 'liquidFollowing': False}
[2025-08-05 15:19:38,735] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 1, 'capacitiveLLD': 0, 'liquidFollowing': False}
[2025-08-05 15:19:58,748] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-05 15:20:25,476] pyhamilton.interface INFO sending end run command to simulator
[2025-08-05 15:20:25,654] pyhamilton.interface INFO disconnected from server
[2025-08-05 15:20:25,754] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-05 15:20:25,755] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-05 15:20:25,760] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-05 15:20:25,762] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-05 15:20:25,763] pyhamilton.interface INFO dummy get request sent to server
[2025-08-05 15:20:25,764] pyhamilton.interface INFO server thread exited
[2025-08-05 15:20:25,776] root ERROR Traceback (most recent call last):
[2025-08-05 15:20:25,784] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 38, in <module>    pip_transfer(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'Tip_50ulFilter_Water_DispenseSurface_Empty', aspirate_height_from_bottom=1,                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 dispense_height_from_bottom=1)                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-05 15:20:25,785] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 231, in pip_transfer    ham_int.tip_eject()    ~~~~~~~~~~~~~~~~~^^
[2025-08-05 15:20:25,787] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 993, in tip_eject    self.wait_on_response(    ~~~~~~~~~~~~~~~~~~~~~^        self.send_command(        ^^^^^^^^^^^^^^^^^^    ...<5 lines>...        raise_first_exception=True        ^^^^^^^^^^^^^^^^^^^^^^^^^^    )    ^
[2025-08-05 15:20:25,788] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 723, in wait_on_response    for _ in wait(delays=delays, timeout=timeout):             ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-05 15:20:25,789] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\waiter\__init__.py", line 91, in __iter__    time.sleep(min(delay, remaining))    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-05 15:20:25,791] root ERROR KeyboardInterrupt
[2025-08-05 15:20:25,792] root ERROR During handling of the above exception, another exception occurred:
[2025-08-05 15:20:25,793] root ERROR Traceback (most recent call last):
[2025-08-05 15:20:25,797] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\pip_transfer.py", line 30, in <module>    with HamiltonInterface(windowed=True, simulating=False) as ham_int:         ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-05 15:20:25,798] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 642, in __exit__    self.stop()    ~~~~~~~~~^^
[2025-08-05 15:20:25,798] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 605, in stop    self.wait_on_response(self.send_command(command='end', id=hex(0)), timeout=1.5)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-05 15:20:25,799] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 723, in wait_on_response    for _ in wait(delays=delays, timeout=timeout):             ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-05 15:20:25,799] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\waiter\__init__.py", line 91, in __iter__    time.sleep(min(delay, remaining))    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-05 15:20:25,799] root ERROR KeyboardInterrupt
[2025-08-06 14:48:21,588] root INFO ##################################################################################################################
[2025-08-06 14:48:21,589] root INFO #                                                                                                                #
[2025-08-06 14:48:21,589] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-08-06 14:48:21,589] root INFO #                                                                                                                #
[2025-08-06 14:48:21,590] root INFO ##################################################################################################################
[2025-08-06 14:48:21,590] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-06 14:48:21,591] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x181b6d4ea40b')
[2025-08-06 14:48:21,591] pyhamilton.interface INFO started the oem application for simulation
[2025-08-06 14:48:21,592] pyhamilton.interface INFO started the server thread
[2025-08-06 14:48:21,592] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-06 14:48:22,593] pyhamilton.interface INFO sending end run command to simulator
[2025-08-06 14:48:24,095] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-06 14:48:24,095] pyhamilton.interface INFO disconnected from server
[2025-08-06 14:48:24,196] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-06 14:48:24,197] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-06 14:48:24,202] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-06 14:48:24,204] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-06 14:48:24,205] pyhamilton.interface INFO dummy get request sent to server
[2025-08-06 14:48:24,205] pyhamilton.interface INFO server thread exited
[2025-08-06 14:48:24,206] root ERROR Traceback (most recent call last):
[2025-08-06 14:48:24,207] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py", line 35, in <module>    device_id = hhs_create_usb_device(ham_int, 'ML_STAR', '1')
[2025-08-06 14:48:24,207] root ERROR TypeError: hhs_create_usb_device() takes 2 positional arguments but 3 were given
[2025-08-06 14:49:11,006] root INFO ##################################################################################################################
[2025-08-06 14:49:11,007] root INFO #                                                                                                                #
[2025-08-06 14:49:11,007] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-08-06 14:49:11,007] root INFO #                                                                                                                #
[2025-08-06 14:49:11,008] root INFO ##################################################################################################################
[2025-08-06 14:49:11,009] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-06 14:49:11,010] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x181b7040ab90')
[2025-08-06 14:49:11,010] pyhamilton.interface INFO started the oem application for simulation
[2025-08-06 14:49:11,011] pyhamilton.interface INFO started the server thread
[2025-08-06 14:49:11,011] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-06 14:49:13,014] pyhamilton.interface INFO sending end run command to simulator
[2025-08-06 14:49:14,515] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-06 14:49:14,515] pyhamilton.interface INFO disconnected from server
[2025-08-06 14:49:14,616] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-06 14:49:14,616] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-06 14:49:14,619] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-06 14:49:14,620] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-06 14:49:14,621] pyhamilton.interface INFO dummy get request sent to server
[2025-08-06 14:49:14,621] pyhamilton.interface INFO server thread exited
[2025-08-06 14:49:14,627] root ERROR Traceback (most recent call last):
[2025-08-06 14:49:14,629] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py", line 35, in <module>    device_id = hhs_create_usb_device(ham_int,'1')
[2025-08-06 14:49:14,629] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 31, in hhs_create_usb_device    response = ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout, return_data=['step-return2'])
[2025-08-06 14:49:14,630] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-06 14:49:14,630] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-06 14:49:14,630] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 396, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-08-06 14:49:14,630] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"HHS-return","step-name":"HHS_CreateUSBDevice","step-return1":0,"step-return2":0,"step-return3":"","step-return4":"","id":"0x181b71c66e54"} )
[2025-08-06 14:50:02,881] root INFO ##################################################################################################################
[2025-08-06 14:50:02,882] root INFO #                                                                                                                #
[2025-08-06 14:50:02,882] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-08-06 14:50:02,883] root INFO #                                                                                                                #
[2025-08-06 14:50:02,883] root INFO ##################################################################################################################
[2025-08-06 14:50:02,884] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-06 14:50:02,884] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x181b73678595')
[2025-08-06 14:50:02,884] pyhamilton.interface INFO started the oem application for simulation
[2025-08-06 14:50:02,884] pyhamilton.interface INFO started the server thread
[2025-08-06 14:50:02,884] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-06 14:50:05,887] pyhamilton.interface INFO sending end run command to simulator
[2025-08-06 14:50:07,389] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-06 14:50:07,389] pyhamilton.interface INFO disconnected from server
[2025-08-06 14:50:07,490] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-06 14:50:07,491] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-06 14:50:07,499] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-06 14:50:07,501] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-06 14:50:07,502] pyhamilton.interface INFO dummy get request sent to server
[2025-08-06 14:50:07,502] pyhamilton.interface INFO server thread exited
[2025-08-06 14:51:48,474] root INFO ##################################################################################################################
[2025-08-06 14:51:48,475] root INFO #                                                                                                                #
[2025-08-06 14:51:48,475] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-08-06 14:51:48,476] root INFO #                                                                                                                #
[2025-08-06 14:51:48,476] root INFO ##################################################################################################################
[2025-08-06 14:51:48,477] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-06 14:51:48,477] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x181b79b2b706')
[2025-08-06 14:51:48,478] pyhamilton.interface INFO started the oem application for simulation
[2025-08-06 14:51:48,478] pyhamilton.interface INFO started the server thread
[2025-08-06 14:51:48,478] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-06 14:52:03,487] pyhamilton.interface INFO sending end run command to simulator
[2025-08-06 14:52:04,988] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-06 14:52:04,989] pyhamilton.interface INFO disconnected from server
[2025-08-06 14:52:05,089] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-06 14:52:05,090] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-06 14:52:05,096] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-06 14:52:05,098] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-06 14:52:05,099] pyhamilton.interface INFO dummy get request sent to server
[2025-08-06 14:52:05,099] pyhamilton.interface INFO server thread exited
[2025-08-06 14:54:53,054] root INFO ##################################################################################################################
[2025-08-06 14:54:53,055] root INFO #                                                                                                                #
[2025-08-06 14:54:53,055] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-08-06 14:54:53,055] root INFO #                                                                                                                #
[2025-08-06 14:54:53,055] root INFO ##################################################################################################################
[2025-08-06 14:54:53,056] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-06 14:54:53,056] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x181b84b33288')
[2025-08-06 14:54:53,056] pyhamilton.interface INFO started the oem application for simulation
[2025-08-06 14:54:53,057] pyhamilton.interface INFO started the server thread
[2025-08-06 14:54:53,057] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-06 14:55:07,064] pyhamilton.interface INFO sending end run command to simulator
[2025-08-06 14:55:08,565] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-06 14:55:08,565] pyhamilton.interface INFO disconnected from server
[2025-08-06 14:55:08,666] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-06 14:55:08,667] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-06 14:55:08,673] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-06 14:55:08,676] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-06 14:55:08,677] pyhamilton.interface INFO dummy get request sent to server
[2025-08-06 14:55:08,678] pyhamilton.interface INFO server thread exited
[2025-08-06 14:58:40,872] root INFO ##################################################################################################################
[2025-08-06 14:58:40,873] root INFO #                                                                                                                #
[2025-08-06 14:58:40,873] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-08-06 14:58:40,873] root INFO #                                                                                                                #
[2025-08-06 14:58:40,873] root INFO ##################################################################################################################
[2025-08-06 14:58:40,874] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-06 14:58:40,874] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x181b92199482')
[2025-08-06 14:58:40,874] pyhamilton.interface INFO started the oem application for simulation
[2025-08-06 14:58:40,875] pyhamilton.interface INFO started the server thread
[2025-08-06 14:58:40,875] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-06 14:58:42,877] pyhamilton.interface INFO sending end run command to simulator
[2025-08-06 14:58:44,378] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-06 14:58:44,379] pyhamilton.interface INFO disconnected from server
[2025-08-06 14:58:44,480] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-06 14:58:44,481] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-06 14:58:44,486] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-06 14:58:44,487] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-06 14:58:44,488] pyhamilton.interface INFO dummy get request sent to server
[2025-08-06 14:58:44,488] pyhamilton.interface INFO server thread exited
[2025-08-06 14:58:44,491] root ERROR Traceback (most recent call last):
[2025-08-06 14:58:44,492] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py", line 35, in <module>    device_id = hhs_create_usb_device(ham_int,1)
[2025-08-06 14:58:44,492] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 31, in hhs_create_usb_device    response = ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout, return_data=['step-return2'])
[2025-08-06 14:58:44,493] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-06 14:58:44,493] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-06 14:58:44,493] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 396, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-08-06 14:58:44,493] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"HHS-return","step-name":"HHS_CreateUSBDevice","step-return1":0,"step-return2":1,"step-return3":"","step-return4":"","id":"0x181b93bdda85"} )
[2025-08-06 15:01:17,014] root INFO ##################################################################################################################
[2025-08-06 15:01:17,014] root INFO #                                                                                                                #
[2025-08-06 15:01:17,015] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-08-06 15:01:17,015] root INFO #                                                                                                                #
[2025-08-06 15:01:17,016] root INFO ##################################################################################################################
[2025-08-06 15:01:17,018] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-06 15:01:17,019] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x181b9b95e3b0')
[2025-08-06 15:01:17,019] pyhamilton.interface INFO started the oem application for simulation
[2025-08-06 15:01:17,019] pyhamilton.interface INFO started the server thread
[2025-08-06 15:01:17,020] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-06 15:01:19,023] pyhamilton.interface INFO sending end run command to simulator
[2025-08-06 15:01:20,524] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-06 15:01:20,524] pyhamilton.interface INFO disconnected from server
[2025-08-06 15:01:20,625] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-06 15:01:20,626] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-06 15:01:20,629] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-06 15:01:20,631] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-06 15:01:20,632] pyhamilton.interface INFO dummy get request sent to server
[2025-08-06 15:01:20,632] pyhamilton.interface INFO server thread exited
[2025-08-06 15:01:20,634] root ERROR Traceback (most recent call last):
[2025-08-06 15:01:20,636] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py", line 35, in <module>    device_id = hhs_create_usb_device(ham_int, 1)
[2025-08-06 15:01:20,636] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 31, in hhs_create_usb_device    response = ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout, return_data=['step-return2'])
[2025-08-06 15:01:20,636] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-06 15:01:20,637] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-06 15:01:20,637] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 396, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-08-06 15:01:20,637] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"HHS-return","step-name":"HHS_CreateUSBDevice","step-return1":0,"step-return2":1,"step-return3":"","step-return4":"","id":"0x181b9d0c7495"} )
[2025-08-06 15:05:18,686] root INFO ##################################################################################################################
[2025-08-06 15:05:18,686] root INFO #                                                                                                                #
[2025-08-06 15:05:18,687] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-08-06 15:05:18,687] root INFO #                                                                                                                #
[2025-08-06 15:05:18,687] root INFO ##################################################################################################################
[2025-08-06 15:05:18,688] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-06 15:05:18,688] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x181ba9fda420')
[2025-08-06 15:05:18,688] pyhamilton.interface INFO started the oem application for simulation
[2025-08-06 15:05:18,688] pyhamilton.interface INFO started the server thread
[2025-08-06 15:05:18,689] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-06 15:05:20,691] pyhamilton.interface INFO sending end run command to simulator
[2025-08-06 15:05:22,192] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-06 15:05:22,193] pyhamilton.interface INFO disconnected from server
[2025-08-06 15:05:22,293] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-06 15:05:22,294] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-06 15:05:22,298] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-06 15:05:22,300] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-06 15:05:22,300] pyhamilton.interface INFO dummy get request sent to server
[2025-08-06 15:05:22,300] pyhamilton.interface INFO server thread exited
[2025-08-06 15:05:22,302] root ERROR Traceback (most recent call last):
[2025-08-06 15:05:22,304] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py", line 35, in <module>    device_id = hhs_create_usb_device(ham_int, 1)
[2025-08-06 15:05:22,304] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 31, in hhs_create_usb_device    response = ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout, return_data=['step-return2'])
[2025-08-06 15:05:22,304] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-06 15:05:22,305] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-06 15:05:22,305] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 396, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-08-06 15:05:22,305] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"HHS-return","step-name":"HHS_CreateUSBDevice","step-return1":0,"step-return2":1,"step-return3":"","step-return4":"","id":"0x181bab74025f"} )
[2025-08-06 15:07:27,741] root INFO ##################################################################################################################
[2025-08-06 15:07:27,742] root INFO #                                                                                                                #
[2025-08-06 15:07:27,742] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-08-06 15:07:27,742] root INFO #                                                                                                                #
[2025-08-06 15:07:27,742] root INFO ##################################################################################################################
[2025-08-06 15:07:27,744] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-06 15:07:27,744] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x181bb1627fc3')
[2025-08-06 15:07:27,744] pyhamilton.interface INFO started the oem application for simulation
[2025-08-06 15:07:27,745] pyhamilton.interface INFO started the server thread
[2025-08-06 15:07:27,745] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-06 15:07:29,747] pyhamilton.interface INFO sending end run command to simulator
[2025-08-06 15:07:31,248] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-06 15:07:31,248] pyhamilton.interface INFO disconnected from server
[2025-08-06 15:07:31,348] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-06 15:07:31,349] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-06 15:07:31,351] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-06 15:07:31,353] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-06 15:07:31,354] pyhamilton.interface INFO dummy get request sent to server
[2025-08-06 15:07:31,354] pyhamilton.interface INFO server thread exited
[2025-08-06 15:07:31,358] root ERROR Traceback (most recent call last):
[2025-08-06 15:07:31,361] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py", line 35, in <module>    device_id = hhs_create_usb_device(ham_int, 1)
[2025-08-06 15:07:31,361] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 31, in hhs_create_usb_device    response = ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout, return_data=['step-return2'])
[2025-08-06 15:07:31,361] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-06 15:07:31,362] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-06 15:07:31,362] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 396, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-08-06 15:07:31,362] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"HHS-return","step-name":"HHS_CreateUSBDevice","step-return1":0,"step-return2":1,"step-return3":"","step-return4":"","id":"0x181bb325414d"} )
[2025-08-06 15:08:38,621] root INFO ##################################################################################################################
[2025-08-06 15:08:38,621] root INFO #                                                                                                                #
[2025-08-06 15:08:38,622] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-08-06 15:08:38,622] root INFO #                                                                                                                #
[2025-08-06 15:08:38,622] root INFO ##################################################################################################################
[2025-08-06 15:08:38,623] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-06 15:08:38,623] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x181bb5e82607')
[2025-08-06 15:08:38,623] pyhamilton.interface INFO started the oem application for simulation
[2025-08-06 15:08:38,623] pyhamilton.interface INFO started the server thread
[2025-08-06 15:08:38,624] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-06 15:08:41,627] pyhamilton.interface INFO sending end run command to simulator
[2025-08-06 15:08:43,128] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-06 15:08:43,129] pyhamilton.interface INFO disconnected from server
[2025-08-06 15:08:43,230] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-06 15:08:43,230] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-06 15:08:43,236] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-06 15:08:43,238] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-06 15:08:43,239] pyhamilton.interface INFO dummy get request sent to server
[2025-08-06 15:08:43,239] pyhamilton.interface INFO server thread exited
[2025-08-06 15:08:43,245] root ERROR Traceback (most recent call last):
[2025-08-06 15:08:43,248] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py", line 35, in <module>    device_id = hhs_create_usb_device(ham_int, 1)
[2025-08-06 15:08:43,248] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 31, in hhs_create_usb_device    response = ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout, return_data=['step-return2'])
[2025-08-06 15:08:43,249] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-06 15:08:43,249] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-06 15:08:43,250] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 396, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-08-06 15:08:43,250] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"HHS-return","step-name":"HHS_CreateUSBDevice","step-return1":0,"step-return2":1,"step-return3":"","step-return4":"","id":"0x181bb76e0dd2"} )
[2025-08-06 15:09:56,161] root INFO ##################################################################################################################
[2025-08-06 15:09:56,161] root INFO #                                                                                                                #
[2025-08-06 15:09:56,161] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-08-06 15:09:56,161] root INFO #                                                                                                                #
[2025-08-06 15:09:56,162] root INFO ##################################################################################################################
[2025-08-06 15:09:56,162] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-06 15:09:56,163] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x181bba8770ad')
[2025-08-06 15:09:56,163] pyhamilton.interface INFO started the oem application for simulation
[2025-08-06 15:09:56,163] pyhamilton.interface INFO started the server thread
[2025-08-06 15:09:56,163] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-06 15:09:59,165] pyhamilton.interface INFO sending end run command to simulator
[2025-08-06 15:10:00,666] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-06 15:10:00,666] pyhamilton.interface INFO disconnected from server
[2025-08-06 15:10:00,767] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-06 15:10:00,768] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-06 15:10:00,775] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-06 15:10:00,778] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-06 15:10:00,779] pyhamilton.interface INFO dummy get request sent to server
[2025-08-06 15:10:00,779] pyhamilton.interface INFO server thread exited
[2025-08-06 15:10:00,782] root ERROR Traceback (most recent call last):
[2025-08-06 15:10:00,784] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py", line 35, in <module>    device_id = hhs_create_usb_device(ham_int, 1)
[2025-08-06 15:10:00,785] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 31, in hhs_create_usb_device    response = ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout, return_data=['step-return2'])
[2025-08-06 15:10:00,785] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-06 15:10:00,786] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-06 15:10:00,786] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 396, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-08-06 15:10:00,787] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"HHS-return","step-name":"HHS_CreateUSBDevice","step-return1":0,"step-return2":1,"step-return3":"","step-return4":"","id":"0x181bbbfdeeab"} )
[2025-08-06 15:12:38,215] root INFO ##################################################################################################################
[2025-08-06 15:12:38,216] root INFO #                                                                                                                #
[2025-08-06 15:12:38,216] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-08-06 15:12:38,217] root INFO #                                                                                                                #
[2025-08-06 15:12:38,217] root INFO ##################################################################################################################
[2025-08-06 15:12:38,219] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-06 15:12:38,220] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x181bc42fdfc1')
[2025-08-06 15:12:38,221] pyhamilton.interface INFO started the oem application for simulation
[2025-08-06 15:12:38,221] pyhamilton.interface INFO started the server thread
[2025-08-06 15:12:38,222] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-06 15:12:40,225] pyhamilton.interface INFO sending end run command to simulator
[2025-08-06 15:12:41,727] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-06 15:12:41,728] pyhamilton.interface INFO disconnected from server
[2025-08-06 15:12:41,829] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-06 15:12:41,830] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-06 15:12:41,835] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-06 15:12:41,837] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-06 15:12:41,839] pyhamilton.interface INFO dummy get request sent to server
[2025-08-06 15:12:41,839] pyhamilton.interface INFO server thread exited
[2025-08-06 15:12:41,842] root ERROR Traceback (most recent call last):
[2025-08-06 15:12:41,846] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py", line 35, in <module>    device_id = hhs_create_usb_device(ham_int, 1)
[2025-08-06 15:12:41,846] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 31, in hhs_create_usb_device    response = ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout, return_data=['step-return2'])
[2025-08-06 15:12:41,847] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-06 15:12:41,847] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-06 15:12:41,847] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 396, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-08-06 15:12:41,848] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"HHS-return","step-name":"HHS_CreateUSBDevice","step-return1":0,"step-return2":1,"step-return3":"","step-return4":"","id":"0x181bc5a6c5f0"} )
[2025-08-06 15:14:31,895] root INFO ##################################################################################################################
[2025-08-06 15:14:31,895] root INFO #                                                                                                                #
[2025-08-06 15:14:31,895] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-08-06 15:14:31,896] root INFO #                                                                                                                #
[2025-08-06 15:14:31,896] root INFO ##################################################################################################################
[2025-08-06 15:14:31,897] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-06 15:14:31,898] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x181bcb061f4f')
[2025-08-06 15:14:31,898] pyhamilton.interface INFO started the oem application for simulation
[2025-08-06 15:14:31,899] pyhamilton.interface INFO started the server thread
[2025-08-06 15:14:31,899] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-06 15:14:33,902] pyhamilton.interface INFO sending end run command to simulator
[2025-08-06 15:14:35,403] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-06 15:14:35,403] pyhamilton.interface INFO disconnected from server
[2025-08-06 15:14:35,504] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-06 15:14:35,505] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-06 15:14:35,509] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-06 15:14:35,510] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-06 15:14:35,511] pyhamilton.interface INFO dummy get request sent to server
[2025-08-06 15:14:35,512] pyhamilton.interface INFO server thread exited
[2025-08-06 15:14:35,513] root ERROR Traceback (most recent call last):
[2025-08-06 15:14:35,515] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py", line 35, in <module>    device_id = hhs_create_usb_device(ham_int, 1)
[2025-08-06 15:14:35,515] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 31, in hhs_create_usb_device    response = ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout, return_data=['step-return2'])
[2025-08-06 15:14:35,516] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-06 15:14:35,516] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-06 15:14:35,517] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 396, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-08-06 15:14:35,517] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"HHS-return","step-name":"HHS_CreateUSBDevice","step-return1":0,"step-return2":1,"step-return3":"","step-return4":"","id":"0x181bcc6d5577"} )
[2025-08-06 15:16:33,402] root INFO ##################################################################################################################
[2025-08-06 15:16:33,403] root INFO #                                                                                                                #
[2025-08-06 15:16:33,403] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-08-06 15:16:33,403] root INFO #                                                                                                                #
[2025-08-06 15:16:33,403] root INFO ##################################################################################################################
[2025-08-06 15:16:33,404] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-06 15:16:33,404] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x181bd2442240')
[2025-08-06 15:16:33,405] pyhamilton.interface INFO started the oem application for simulation
[2025-08-06 15:16:33,405] pyhamilton.interface INFO started the server thread
[2025-08-06 15:16:33,405] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-06 15:16:39,408] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 5 sec while waiting for response id 0x181bd3ab5fe6')
[2025-08-06 15:16:39,408] pyhamilton.interface INFO sending end run command to simulator
[2025-08-06 15:16:40,909] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-06 15:16:40,909] pyhamilton.interface INFO disconnected from server
[2025-08-06 15:16:41,010] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-06 15:16:41,010] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-06 15:16:41,017] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-06 15:16:41,019] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-06 15:16:41,020] pyhamilton.interface INFO dummy get request sent to server
[2025-08-06 15:16:41,020] pyhamilton.interface INFO server thread exited
[2025-08-06 15:16:41,023] root ERROR Traceback (most recent call last):
[2025-08-06 15:16:41,024] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py", line 35, in <module>    device_id = hhs_create_usb_device(ham_int, 1)
[2025-08-06 15:16:41,025] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 31, in hhs_create_usb_device    response = ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout, return_data=['step-return2'])
[2025-08-06 15:16:41,025] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 729, in wait_on_response    self.log_and_raise(HamiltonTimeoutError('Timed out after ' + str(timeout) + ' sec while waiting for response id ' + str(id)))    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-06 15:16:41,025] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 790, in log_and_raise    raise err
[2025-08-06 15:16:41,025] root ERROR pyhamilton.oemerr.HamiltonTimeoutError: Timed out after 5 sec while waiting for response id 0x181bd3ab5fe6
[2025-08-06 15:18:28,293] root INFO ##################################################################################################################
[2025-08-06 15:18:28,294] root INFO #                                                                                                                #
[2025-08-06 15:18:28,294] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-08-06 15:18:28,294] root INFO #                                                                                                                #
[2025-08-06 15:18:28,295] root INFO ##################################################################################################################
[2025-08-06 15:18:28,295] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-06 15:18:28,297] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x181bd90df881')
[2025-08-06 15:18:28,297] pyhamilton.interface INFO started the oem application for simulation
[2025-08-06 15:18:28,298] pyhamilton.interface INFO started the server thread
[2025-08-06 15:18:28,298] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-06 15:18:43,305] pyhamilton.interface INFO sending end run command to simulator
[2025-08-06 15:18:44,811] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-06 15:18:44,811] pyhamilton.interface INFO disconnected from server
[2025-08-06 15:18:44,912] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-06 15:18:44,912] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-06 15:18:44,916] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-06 15:18:44,919] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-06 15:18:44,920] pyhamilton.interface INFO dummy get request sent to server
[2025-08-06 15:18:44,920] pyhamilton.interface INFO server thread exited
[2025-08-06 15:20:38,206] root INFO ##################################################################################################################
[2025-08-06 15:20:38,207] root INFO #                                                                                                                #
[2025-08-06 15:20:38,207] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\hhs.py     #
[2025-08-06 15:20:38,208] root INFO #                                                                                                                #
[2025-08-06 15:20:38,208] root INFO ##################################################################################################################
[2025-08-06 15:20:38,209] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-06 15:20:38,209] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x181be0cc5705')
[2025-08-06 15:20:38,210] pyhamilton.interface INFO started the oem application for simulation
[2025-08-06 15:20:38,210] pyhamilton.interface INFO started the server thread
[2025-08-06 15:20:38,210] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-06 15:21:03,222] pyhamilton.interface INFO sending end run command to simulator
[2025-08-06 15:21:04,723] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-06 15:21:04,724] pyhamilton.interface INFO disconnected from server
[2025-08-06 15:21:04,825] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-06 15:21:04,825] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-06 15:21:04,830] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-06 15:21:04,833] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-06 15:21:04,834] pyhamilton.interface INFO dummy get request sent to server
[2025-08-06 15:21:04,835] pyhamilton.interface INFO server thread exited
[2025-08-11 13:42:51,396] root INFO ############################################################################################################################################
[2025-08-11 13:42:51,399] root INFO #                                                                                                                                          #
[2025-08-11 13:42:51,399] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 13:42:51,399] root INFO #                                                                                                                                          #
[2025-08-11 13:42:51,399] root INFO ############################################################################################################################################
[2025-08-11 13:42:51,400] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 13:42:51,401] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x187f11b190ef')
[2025-08-11 13:42:51,401] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 13:42:51,401] pyhamilton.interface INFO started the server thread
[2025-08-11 13:42:51,401] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 13:43:25,405] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 30 sec while waiting for response id 0x187f19f513de')
[2025-08-11 13:43:25,406] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 13:43:26,907] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 13:43:26,908] pyhamilton.interface INFO disconnected from server
[2025-08-11 13:43:27,008] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 13:43:27,009] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 13:43:27,015] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 13:43:27,017] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 13:43:27,017] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 13:43:27,017] pyhamilton.interface INFO server thread exited
[2025-08-11 13:43:27,019] root ERROR Traceback (most recent call last):
[2025-08-11 13:43:27,021] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py", line 76, in <module>    odtc_initialize(ham_int, device_id)    ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
[2025-08-11 13:43:27,021] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\odtc_wrappers.py", line 38, in odtc_initialize    response = ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout, return_data=return_field)
[2025-08-11 13:43:27,021] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 729, in wait_on_response    self.log_and_raise(HamiltonTimeoutError('Timed out after ' + str(timeout) + ' sec while waiting for response id ' + str(id)))    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 13:43:27,021] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 790, in log_and_raise    raise err
[2025-08-11 13:43:27,022] root ERROR pyhamilton.oemerr.HamiltonTimeoutError: Timed out after 30 sec while waiting for response id 0x187f19f513de
[2025-08-11 13:44:28,339] root INFO ############################################################################################################################################
[2025-08-11 13:44:28,339] root INFO #                                                                                                                                          #
[2025-08-11 13:44:28,340] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 13:44:28,340] root INFO #                                                                                                                                          #
[2025-08-11 13:44:28,340] root INFO ############################################################################################################################################
[2025-08-11 13:44:28,340] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 13:44:28,341] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x187f1e1816d5')
[2025-08-11 13:44:28,341] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 13:44:28,341] pyhamilton.interface INFO started the server thread
[2025-08-11 13:44:28,341] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 13:45:15,368] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 13:45:16,869] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 13:45:16,869] pyhamilton.interface INFO disconnected from server
[2025-08-11 13:45:16,971] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 13:45:16,971] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 13:45:16,976] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 13:45:16,978] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 13:45:16,979] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 13:45:16,979] pyhamilton.interface INFO server thread exited
[2025-08-11 13:46:27,736] root INFO ############################################################################################################################################
[2025-08-11 13:46:27,737] root INFO #                                                                                                                                          #
[2025-08-11 13:46:27,737] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 13:46:27,737] root INFO #                                                                                                                                          #
[2025-08-11 13:46:27,737] root INFO ############################################################################################################################################
[2025-08-11 13:46:27,739] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 13:46:27,740] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x187f250799e3')
[2025-08-11 13:46:27,740] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 13:46:27,740] pyhamilton.interface INFO started the server thread
[2025-08-11 13:46:27,740] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 13:47:01,745] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 30 sec while waiting for response id 0x187f26da2968')
[2025-08-11 13:47:01,746] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 13:47:03,247] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 13:47:03,248] pyhamilton.interface INFO disconnected from server
[2025-08-11 13:47:03,349] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 13:47:03,351] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 13:47:03,360] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 13:47:03,363] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 13:47:03,365] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 13:47:03,366] pyhamilton.interface INFO server thread exited
[2025-08-11 13:47:03,370] root ERROR Traceback (most recent call last):
[2025-08-11 13:47:03,378] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py", line 77, in <module>    odtc_open_door(ham_int, device_id)    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
[2025-08-11 13:47:03,380] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\odtc_wrappers.py", line 106, in odtc_open_door    response = ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout, return_data=return_field)
[2025-08-11 13:47:03,382] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 729, in wait_on_response    self.log_and_raise(HamiltonTimeoutError('Timed out after ' + str(timeout) + ' sec while waiting for response id ' + str(id)))    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 13:47:03,383] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 790, in log_and_raise    raise err
[2025-08-11 13:47:03,383] root ERROR pyhamilton.oemerr.HamiltonTimeoutError: Timed out after 30 sec while waiting for response id 0x187f26da2968
[2025-08-11 13:49:35,740] root INFO ############################################################################################################################################
[2025-08-11 13:49:35,741] root INFO #                                                                                                                                          #
[2025-08-11 13:49:35,742] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 13:49:35,742] root INFO #                                                                                                                                          #
[2025-08-11 13:49:35,743] root INFO ############################################################################################################################################
[2025-08-11 13:49:35,744] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 13:49:35,745] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x187f306a8336')
[2025-08-11 13:49:35,746] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 13:49:35,746] pyhamilton.interface INFO started the server thread
[2025-08-11 13:49:35,746] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 13:49:42,752] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 13:49:44,254] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 13:49:44,254] pyhamilton.interface INFO disconnected from server
[2025-08-11 13:49:44,355] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 13:49:44,355] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 13:49:44,360] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 13:49:44,362] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 13:49:44,363] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 13:49:44,363] pyhamilton.interface INFO server thread exited
[2025-08-11 14:54:49,038] root INFO ############################################################################################################################################
[2025-08-11 14:54:49,039] root INFO #                                                                                                                                          #
[2025-08-11 14:54:49,039] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 14:54:49,039] root INFO #                                                                                                                                          #
[2025-08-11 14:54:49,039] root INFO ############################################################################################################################################
[2025-08-11 14:54:49,039] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 14:54:49,040] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x188019a8f3ae')
[2025-08-11 14:54:49,040] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 14:54:49,040] pyhamilton.interface INFO started the server thread
[2025-08-11 14:54:49,040] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 14:54:52,042] pyhamilton.interface INFO move_plate: Moving plate HSP_Pipette2 to HSP_ODTC
[2025-08-11 14:55:36,079] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 14:55:37,580] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 14:55:37,580] pyhamilton.interface INFO disconnected from server
[2025-08-11 14:55:37,681] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 14:55:37,681] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 14:55:37,685] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 14:55:37,687] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 14:55:37,687] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 14:55:37,688] pyhamilton.interface INFO server thread exited
[2025-08-11 14:59:49,290] root INFO ############################################################################################################################################
[2025-08-11 14:59:49,290] root INFO #                                                                                                                                          #
[2025-08-11 14:59:49,290] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 14:59:49,290] root INFO #                                                                                                                                          #
[2025-08-11 14:59:49,290] root INFO ############################################################################################################################################
[2025-08-11 14:59:49,291] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 14:59:49,291] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x18802b348991')
[2025-08-11 14:59:49,292] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 14:59:49,292] pyhamilton.interface INFO started the server thread
[2025-08-11 14:59:49,292] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 14:59:54,304] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 14:59:55,805] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 14:59:55,806] pyhamilton.interface INFO disconnected from server
[2025-08-11 14:59:55,907] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 14:59:55,909] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 14:59:55,912] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 14:59:55,914] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 14:59:55,915] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 14:59:55,915] pyhamilton.interface INFO server thread exited
[2025-08-11 14:59:55,917] root ERROR Traceback (most recent call last):
[2025-08-11 14:59:55,917] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py", line 83, in <module>    transport_resource(ham_int, LidStack.fetch_next(), 'Ham_ComfortLid_ODTC',    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                  resource_type=GrippedResource.LID, grip_direction=GripDirection.RIGHT, iswap=True)                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 14:59:55,918] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\transport\transport.py", line 245, in transport_resource    raise TypeError("source & destination must be DeckResource instances for iSWAP moves.")
[2025-08-11 14:59:55,918] root ERROR TypeError: source & destination must be DeckResource instances for iSWAP moves.
[2025-08-11 15:07:33,832] root INFO ############################################################################################################################################
[2025-08-11 15:07:33,833] root INFO #                                                                                                                                          #
[2025-08-11 15:07:33,833] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 15:07:33,834] root INFO #                                                                                                                                          #
[2025-08-11 15:07:33,834] root INFO ############################################################################################################################################
[2025-08-11 15:07:33,836] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 15:07:33,837] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x1880474fb20b')
[2025-08-11 15:07:33,837] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 15:07:33,837] pyhamilton.interface INFO started the server thread
[2025-08-11 15:07:33,838] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 15:07:36,851] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 15:07:38,351] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 15:07:38,352] pyhamilton.interface INFO disconnected from server
[2025-08-11 15:07:38,453] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 15:07:38,454] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 15:07:38,458] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 15:07:38,460] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 15:07:38,461] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 15:07:38,461] pyhamilton.interface INFO server thread exited
[2025-08-11 15:07:38,465] root ERROR Traceback (most recent call last):
[2025-08-11 15:07:38,467] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py", line 83, in <module>    transport_resource(ham_int, LidStack.fetch_next(), 'Ham_ComfortLid_ODTC',    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                  resource_type=GrippedResource.LID, grip_direction=GripDirection.RIGHT, iswap=True)                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 15:07:38,467] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\transport\transport.py", line 246, in transport_resource    return ham_int.move_plate(           ~~~~~~~~~~~~~~~~~~^        source,        ^^^^^^^    ...<4 lines>...        **more_opts,        ^^^^^^^^^^^^    )    ^
[2025-08-11 15:07:38,468] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 1169, in move_plate    self.log('move_plate: Moving plate ' + source_plate.layout_name() + ' to ' + target_plate.layout_name())                                           ^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 15:07:38,468] root ERROR AttributeError: 'str' object has no attribute 'layout_name'
[2025-08-11 15:10:17,854] root INFO ############################################################################################################################################
[2025-08-11 15:10:17,854] root INFO #                                                                                                                                          #
[2025-08-11 15:10:17,854] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 15:10:17,854] root INFO #                                                                                                                                          #
[2025-08-11 15:10:17,854] root INFO ############################################################################################################################################
[2025-08-11 15:10:17,855] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 15:10:17,855] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x188050d99c78')
[2025-08-11 15:10:17,855] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 15:10:17,855] pyhamilton.interface INFO started the server thread
[2025-08-11 15:10:17,855] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 15:10:20,869] pyhamilton.interface INFO move_by_seq: Moving plate Ham_ComfortLid_ParkPos_0004 to Ham_ComfortLid_ODTC
[2025-08-11 15:10:20,869] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 15:10:22,370] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 15:10:22,371] pyhamilton.interface INFO disconnected from server
[2025-08-11 15:10:22,471] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 15:10:22,472] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 15:10:22,477] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 15:10:22,479] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 15:10:22,480] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 15:10:22,480] pyhamilton.interface INFO server thread exited
[2025-08-11 15:10:22,482] root ERROR Traceback (most recent call last):
[2025-08-11 15:10:22,483] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py", line 83, in <module>    transport_resource(ham_int, LidStack.fetch_next(), 'Ham_ComfortLid_ODTC',    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                  resource_type=GrippedResource.LID, grip_direction=GripDirection.RIGHT, iswap=True)                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 15:10:22,484] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\transport\transport.py", line 258, in transport_resource    return ham_int.move_by_seq(source,           ~~~~~~~~~~~~~~~~~~~^^^^^^^^                               destination,                               ^^^^^^^^^^^^    ...<3 lines>...                               **more_opts,                               ^^^^^^^^^^^^                               )                               ^
[2025-08-11 15:10:22,484] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 1260, in move_by_seq    cid = self.send_command(ISWAP_GET, plateSequence=source_plate_seq,                           inverseGrip=inv,    ...<4 lines>...                           labwareOrientation=placeOrientation,                           **more_options)
[2025-08-11 15:10:22,484] root ERROR TypeError: pyhamilton.interface.HamiltonInterface.send_command() got multiple values for keyword argument 'transportMode'
[2025-08-11 15:12:26,555] root INFO ############################################################################################################################################
[2025-08-11 15:12:26,556] root INFO #                                                                                                                                          #
[2025-08-11 15:12:26,556] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 15:12:26,556] root INFO #                                                                                                                                          #
[2025-08-11 15:12:26,557] root INFO ############################################################################################################################################
[2025-08-11 15:12:26,558] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 15:12:26,559] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x188058a3e9ee')
[2025-08-11 15:12:26,559] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 15:12:26,560] pyhamilton.interface INFO started the server thread
[2025-08-11 15:12:26,560] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 15:12:34,579] pyhamilton.interface INFO move_by_seq: Moving plate Ham_ComfortLid_ParkPos_0004 to Ham_ComfortLid_ODTC
[2025-08-11 15:12:34,579] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 15:12:36,080] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 15:12:36,080] pyhamilton.interface INFO disconnected from server
[2025-08-11 15:12:36,181] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 15:12:36,181] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 15:12:36,185] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 15:12:36,186] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 15:12:36,187] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 15:12:36,187] pyhamilton.interface INFO server thread exited
[2025-08-11 15:12:36,191] root ERROR Traceback (most recent call last):
[2025-08-11 15:12:36,193] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py", line 83, in <module>    transport_resource(ham_int, LidStack.fetch_next(), 'Ham_ComfortLid_ODTC',    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                  resource_type=GrippedResource.LID, grip_direction=GripDirection.RIGHT, iswap=True)                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 15:12:36,193] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\transport\transport.py", line 260, in transport_resource    return ham_int.move_by_seq(source,           ~~~~~~~~~~~~~~~~~~~^^^^^^^^                               destination,                               ^^^^^^^^^^^^    ...<3 lines>...                               **more_opts,                               ^^^^^^^^^^^^                               )                               ^
[2025-08-11 15:12:36,194] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 1260, in move_by_seq    cid = self.send_command(ISWAP_GET, plateSequence=source_plate_seq,                           inverseGrip=inv,    ...<4 lines>...                           labwareOrientation=placeOrientation,                           **more_options)
[2025-08-11 15:12:36,194] root ERROR TypeError: pyhamilton.interface.HamiltonInterface.send_command() got multiple values for keyword argument 'transportMode'
[2025-08-11 15:13:44,137] root INFO ############################################################################################################################################
[2025-08-11 15:13:44,137] root INFO #                                                                                                                                          #
[2025-08-11 15:13:44,137] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 15:13:44,137] root INFO #                                                                                                                                          #
[2025-08-11 15:13:44,137] root INFO ############################################################################################################################################
[2025-08-11 15:13:44,138] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 15:13:44,139] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x18805d52e2d5')
[2025-08-11 15:13:44,139] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 15:13:44,139] pyhamilton.interface INFO started the server thread
[2025-08-11 15:13:44,139] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 15:13:47,155] pyhamilton.interface INFO move_by_seq: Moving plate Ham_ComfortLid_ParkPos_0004 to Ham_ComfortLid_ODTC
[2025-08-11 15:13:50,157] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 15:13:51,658] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 15:13:51,658] pyhamilton.interface INFO disconnected from server
[2025-08-11 15:13:51,759] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 15:13:51,759] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 15:13:51,762] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 15:13:51,764] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 15:13:51,764] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 15:13:51,764] pyhamilton.interface INFO server thread exited
[2025-08-11 15:13:51,767] root ERROR Traceback (most recent call last):
[2025-08-11 15:13:51,769] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py", line 83, in <module>    transport_resource(ham_int, LidStack.fetch_next(), 'Ham_ComfortLid_ODTC',    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                  resource_type=GrippedResource.LID, grip_direction=GripDirection.RIGHT, iswap=True)                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 15:13:51,770] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\transport\transport.py", line 260, in transport_resource    return ham_int.move_by_seq(source,           ~~~~~~~~~~~~~~~~~~~^^^^^^^^                               destination,                               ^^^^^^^^^^^^    ...<3 lines>...                               **more_opts,                               ^^^^^^^^^^^^                               )                               ^
[2025-08-11 15:13:51,770] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 1268, in move_by_seq    self.wait_on_response(cid, raise_first_exception=True, timeout=120)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 15:13:51,770] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 15:13:51,770] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-11 15:13:51,771] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 396, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-08-11 15:13:51,771] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"STAR-return","step-name":"iSwapGet","step-return1":"2","step-return2":"","step-return3":"","step-return4":"","id":"0x18805ee83127"} )
[2025-08-11 15:15:43,579] root INFO ############################################################################################################################################
[2025-08-11 15:15:43,580] root INFO #                                                                                                                                          #
[2025-08-11 15:15:43,580] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 15:15:43,580] root INFO #                                                                                                                                          #
[2025-08-11 15:15:43,580] root INFO ############################################################################################################################################
[2025-08-11 15:15:43,581] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 15:15:43,582] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x1880647189fd')
[2025-08-11 15:15:43,582] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 15:15:43,582] pyhamilton.interface INFO started the server thread
[2025-08-11 15:15:43,582] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 15:15:48,603] pyhamilton.interface INFO move_by_seq: Moving plate Ham_ComfortLid_Stack_0004 to Ham_ComfortLid_ODTC
[2025-08-11 15:15:50,604] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 15:15:52,105] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 15:15:52,106] pyhamilton.interface INFO disconnected from server
[2025-08-11 15:15:52,206] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 15:15:52,207] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 15:15:52,216] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 15:15:52,219] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 15:15:52,219] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 15:15:52,220] pyhamilton.interface INFO server thread exited
[2025-08-11 15:15:52,226] root ERROR Traceback (most recent call last):
[2025-08-11 15:15:52,230] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py", line 86, in <module>    transport_resource(ham_int, lid, 'Ham_ComfortLid_ODTC',    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                  resource_type=GrippedResource.LID, grip_direction=GripDirection.RIGHT, iswap=True)                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 15:15:52,230] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\transport\transport.py", line 260, in transport_resource    return ham_int.move_by_seq(source,           ~~~~~~~~~~~~~~~~~~~^^^^^^^^                               destination,                               ^^^^^^^^^^^^    ...<3 lines>...                               **more_opts,                               ^^^^^^^^^^^^                               )                               ^
[2025-08-11 15:15:52,231] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 1268, in move_by_seq    self.wait_on_response(cid, raise_first_exception=True, timeout=120)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 15:15:52,231] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 15:15:52,232] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-11 15:15:52,232] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 396, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-08-11 15:15:52,233] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"STAR-return","step-name":"iSwapGet","step-return1":"2","step-return2":"","step-return3":"","step-return4":"","id":"0x18806625577f"} )
[2025-08-11 15:18:14,252] root INFO ############################################################################################################################################
[2025-08-11 15:18:14,253] root INFO #                                                                                                                                          #
[2025-08-11 15:18:14,253] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 15:18:14,253] root INFO #                                                                                                                                          #
[2025-08-11 15:18:14,253] root INFO ############################################################################################################################################
[2025-08-11 15:18:14,255] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 15:18:14,256] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x18806d4e2351')
[2025-08-11 15:18:14,257] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 15:18:14,257] pyhamilton.interface INFO started the server thread
[2025-08-11 15:18:14,257] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 15:18:17,271] pyhamilton.interface INFO move_by_seq: Moving plate Ham_ComfortLid_Stack_0004 to Ham_ComfortLid_ODTC
[2025-08-11 15:18:18,272] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 15:18:19,773] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 15:18:19,774] pyhamilton.interface INFO disconnected from server
[2025-08-11 15:18:19,874] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 15:18:19,875] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 15:18:19,880] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 15:18:19,882] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 15:18:19,883] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 15:18:19,884] pyhamilton.interface INFO server thread exited
[2025-08-11 15:18:19,888] root ERROR Traceback (most recent call last):
[2025-08-11 15:18:19,892] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py", line 86, in <module>    transport_resource(ham_int, lid, 'Ham_ComfortLid_ODTC',    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                  resource_type=GrippedResource.LID, grip_direction=GripDirection.RIGHT, iswap=True)                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 15:18:19,892] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\transport\transport.py", line 260, in transport_resource    return ham_int.move_by_seq(source,           ~~~~~~~~~~~~~~~~~~~^^^^^^^^                               destination,                               ^^^^^^^^^^^^    ...<3 lines>...                               **more_opts,                               ^^^^^^^^^^^^                               )                               ^
[2025-08-11 15:18:19,893] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 1268, in move_by_seq    self.wait_on_response(cid, raise_first_exception=True, timeout=120)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 15:18:19,894] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 15:18:19,895] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-11 15:18:19,895] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 396, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-08-11 15:18:19,896] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"STAR-return","step-name":"iSwapGet","step-return1":"2","step-return2":"","step-return3":"","step-return4":"","id":"0x18806f01d41a"} )
[2025-08-11 15:20:26,994] root INFO ############################################################################################################################################
[2025-08-11 15:20:26,994] root INFO #                                                                                                                                          #
[2025-08-11 15:20:26,995] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 15:20:26,995] root INFO #                                                                                                                                          #
[2025-08-11 15:20:26,995] root INFO ############################################################################################################################################
[2025-08-11 15:20:26,997] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 15:20:26,998] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x18807537850f')
[2025-08-11 15:20:26,999] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 15:20:26,999] pyhamilton.interface INFO started the server thread
[2025-08-11 15:20:26,999] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 15:20:31,004] pyhamilton.interface INFO move_by_seq: Moving plate Ham_ComfortLid_Stack_0004_lid to Ham_ComfortLid_ODTC_lid
[2025-08-11 15:20:33,006] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 15:20:34,507] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 15:20:34,507] pyhamilton.interface INFO disconnected from server
[2025-08-11 15:20:34,608] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 15:20:34,609] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 15:20:34,615] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 15:20:34,618] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 15:20:34,619] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 15:20:34,620] pyhamilton.interface INFO server thread exited
[2025-08-11 15:20:34,626] root ERROR Traceback (most recent call last):
[2025-08-11 15:20:34,630] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py", line 87, in <module>    transport_resource(ham_int, lid, 'Ham_ComfortLid_ODTC_lid',    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                  resource_type=GrippedResource.LID, grip_direction=GripDirection.RIGHT, iswap=True)                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 15:20:34,631] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\transport\transport.py", line 260, in transport_resource    return ham_int.move_by_seq(source,           ~~~~~~~~~~~~~~~~~~~^^^^^^^^                               destination,                               ^^^^^^^^^^^^    ...<3 lines>...                               **more_opts,                               ^^^^^^^^^^^^                               )                               ^
[2025-08-11 15:20:34,632] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 1268, in move_by_seq    self.wait_on_response(cid, raise_first_exception=True, timeout=120)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 15:20:34,633] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 15:20:34,635] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-11 15:20:34,635] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 396, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-08-11 15:20:34,636] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"STAR-return","step-name":"iSwapGet","step-return1":"2","step-return2":"","step-return3":"","step-return4":"","id":"0x188076fa6ef3"} )
[2025-08-11 15:29:00,031] root INFO ############################################################################################################################################
[2025-08-11 15:29:00,031] root INFO #                                                                                                                                          #
[2025-08-11 15:29:00,032] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 15:29:00,032] root INFO #                                                                                                                                          #
[2025-08-11 15:29:00,032] root INFO ############################################################################################################################################
[2025-08-11 15:29:00,035] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 15:29:00,035] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x188093bc932b')
[2025-08-11 15:29:00,035] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 15:29:00,036] pyhamilton.interface INFO started the server thread
[2025-08-11 15:29:00,036] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 15:29:04,040] pyhamilton.interface INFO move_by_seq: Moving plate Ham_ComfortLid_Stack_0004 to Ham_ComfortLid_ODTC
[2025-08-11 15:29:04,040] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 15:29:05,541] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 15:29:05,542] pyhamilton.interface INFO disconnected from server
[2025-08-11 15:29:05,643] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 15:29:05,644] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 15:29:05,649] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 15:29:05,651] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 15:29:05,651] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 15:29:05,651] pyhamilton.interface INFO server thread exited
[2025-08-11 15:29:05,654] root ERROR Traceback (most recent call last):
[2025-08-11 15:29:05,657] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py", line 87, in <module>    transport_resource(ham_int, lid, 'Ham_ComfortLid_ODTC',    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                  resource_type=GrippedResource.LID, grip_direction=GripDirection.RIGHT, iswap=True)                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 15:29:05,657] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\transport\transport.py", line 260, in transport_resource    return ham_int.move_by_seq(source,           ~~~~~~~~~~~~~~~~~~~^^^^^^^^                               destination,                               ^^^^^^^^^^^^    ...<3 lines>...                               **more_opts,                               ^^^^^^^^^^^^                               )                               ^
[2025-08-11 15:29:05,657] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 1273, in move_by_seq    lidSequence = sourceLidSequence                  ~~~~~~~~~~~~~~~~~    **more_options)    ^^~~~~~~~~~~~~
[2025-08-11 15:29:05,658] root ERROR TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'dict'
[2025-08-11 15:30:47,346] root INFO ############################################################################################################################################
[2025-08-11 15:30:47,347] root INFO #                                                                                                                                          #
[2025-08-11 15:30:47,348] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 15:30:47,348] root INFO #                                                                                                                                          #
[2025-08-11 15:30:47,348] root INFO ############################################################################################################################################
[2025-08-11 15:30:47,349] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 15:30:47,350] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x188099e4e911')
[2025-08-11 15:30:47,350] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 15:30:47,351] pyhamilton.interface INFO started the server thread
[2025-08-11 15:30:47,351] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 15:30:51,355] pyhamilton.interface INFO move_by_seq: Moving plate Ham_ComfortLid_Stack_0004 to Ham_ComfortLid_ODTC
[2025-08-11 15:30:51,356] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 15:30:52,859] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 15:30:52,860] pyhamilton.interface INFO disconnected from server
[2025-08-11 15:30:52,961] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 15:30:52,962] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 15:30:52,969] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 15:30:52,972] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 15:30:52,973] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 15:30:52,974] pyhamilton.interface INFO server thread exited
[2025-08-11 15:30:52,979] root ERROR Traceback (most recent call last):
[2025-08-11 15:30:52,984] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py", line 87, in <module>    transport_resource(ham_int, lid, 'Ham_ComfortLid_ODTC',    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                  resource_type=GrippedResource.LID, grip_direction=GripDirection.RIGHT, iswap=True)                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 15:30:52,985] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\transport\transport.py", line 260, in transport_resource    return ham_int.move_by_seq(source,           ~~~~~~~~~~~~~~~~~~~^^^^^^^^                               destination,                               ^^^^^^^^^^^^    ...<3 lines>...                               **more_opts,                               ^^^^^^^^^^^^                               )                               ^
[2025-08-11 15:30:52,985] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 1275, in move_by_seq    lidSequence = sourceLidSequence                  ~~~~~~~~~~~~~~~~~    **more_options)    ^^~~~~~~~~~~~~
[2025-08-11 15:30:52,986] root ERROR TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'dict'
[2025-08-11 15:32:19,740] root INFO ############################################################################################################################################
[2025-08-11 15:32:19,741] root INFO #                                                                                                                                          #
[2025-08-11 15:32:19,741] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 15:32:19,741] root INFO #                                                                                                                                          #
[2025-08-11 15:32:19,741] root INFO ############################################################################################################################################
[2025-08-11 15:32:19,742] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 15:32:19,743] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x18809fc26e20')
[2025-08-11 15:32:19,743] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 15:32:19,744] pyhamilton.interface INFO started the server thread
[2025-08-11 15:32:19,744] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 15:32:22,747] pyhamilton.interface INFO move_by_seq: Moving plate Ham_ComfortLid_Stack_0004 to Ham_ComfortLid_ODTC
[2025-08-11 15:32:45,768] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 15:32:47,268] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 15:32:47,269] pyhamilton.interface INFO disconnected from server
[2025-08-11 15:32:47,370] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 15:32:47,371] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 15:32:47,375] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 15:32:47,377] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 15:32:47,378] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 15:32:47,378] pyhamilton.interface INFO server thread exited
[2025-08-11 15:32:47,380] root ERROR Traceback (most recent call last):
[2025-08-11 15:32:47,382] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py", line 87, in <module>    transport_resource(ham_int, lid, 'Ham_ComfortLid_ODTC',    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                  resource_type=GrippedResource.LID, grip_direction=GripDirection.RIGHT, iswap=True)                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 15:32:47,382] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\transport\transport.py", line 260, in transport_resource    return ham_int.move_by_seq(source,           ~~~~~~~~~~~~~~~~~~~^^^^^^^^                               destination,                               ^^^^^^^^^^^^    ...<3 lines>...                               **more_opts,                               ^^^^^^^^^^^^                               )                               ^
[2025-08-11 15:32:47,383] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 1286, in move_by_seq    plateSequence=target_plate_seq,                  ^^^^^^^^^^^^^^^^
[2025-08-11 15:32:47,383] root ERROR NameError: name 'target_plate_seq' is not defined
[2025-08-11 15:37:43,136] root INFO ############################################################################################################################################
[2025-08-11 15:37:43,137] root INFO #                                                                                                                                          #
[2025-08-11 15:37:43,137] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 15:37:43,137] root INFO #                                                                                                                                          #
[2025-08-11 15:37:43,137] root INFO ############################################################################################################################################
[2025-08-11 15:37:43,138] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 15:37:43,138] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x1880b2db3647')
[2025-08-11 15:37:43,139] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 15:37:43,139] pyhamilton.interface INFO started the server thread
[2025-08-11 15:37:43,139] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 15:37:47,143] pyhamilton.interface INFO move_by_seq: Moving plate Ham_ComfortLid_Stack_0004 to Ham_ComfortLid_ODTC
[2025-08-11 15:38:11,162] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 15:38:12,664] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 15:38:12,664] pyhamilton.interface INFO disconnected from server
[2025-08-11 15:38:12,765] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 15:38:12,767] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 15:38:12,773] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 15:38:12,775] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 15:38:12,776] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 15:38:12,776] pyhamilton.interface INFO server thread exited
[2025-08-11 15:38:12,780] root ERROR Traceback (most recent call last):
[2025-08-11 15:38:12,782] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py", line 87, in <module>    transport_resource(ham_int, lid, 'Ham_ComfortLid_ODTC',    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                  resource_type=GrippedResource.LID, grip_direction=GripDirection.RIGHT, iswap=True)                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 15:38:12,783] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\transport\transport.py", line 260, in transport_resource    return ham_int.move_by_seq(source,           ~~~~~~~~~~~~~~~~~~~^^^^^^^^                               destination,                               ^^^^^^^^^^^^    ...<3 lines>...                               **more_opts,                               ^^^^^^^^^^^^                               )                               ^
[2025-08-11 15:38:12,784] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 1300, in move_by_seq    self.wait_on_response(cid, raise_first_exception=True, timeout=120)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 15:38:12,784] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 15:38:12,785] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-11 15:38:12,785] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 396, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-08-11 15:38:12,785] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"STAR-return","step-name":"iSwapPlace","step-return1":"2","step-return2":"","step-return3":"","step-return4":"","id":"0x1880b61be548"} )
[2025-08-11 15:40:38,708] root INFO ############################################################################################################################################
[2025-08-11 15:40:38,708] root INFO #                                                                                                                                          #
[2025-08-11 15:40:38,708] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 15:40:38,709] root INFO #                                                                                                                                          #
[2025-08-11 15:40:38,709] root INFO ############################################################################################################################################
[2025-08-11 15:40:38,709] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 15:40:38,710] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x1880bcc8e6ee')
[2025-08-11 15:40:38,710] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 15:40:38,711] pyhamilton.interface INFO started the server thread
[2025-08-11 15:40:38,711] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 15:40:42,716] pyhamilton.interface INFO move_by_seq: Moving plate Ham_ComfortLid_Stack_0004 to Ham_ComfortLid_ODTC
[2025-08-11 15:41:20,735] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 15:41:22,236] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 15:41:22,237] pyhamilton.interface INFO disconnected from server
[2025-08-11 15:41:22,338] pyhamilton.interface INFO server thread exited
[2025-08-11 15:59:59,031] root INFO ############################################################################################################################################
[2025-08-11 15:59:59,033] root INFO #                                                                                                                                          #
[2025-08-11 15:59:59,034] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 15:59:59,034] root INFO #                                                                                                                                          #
[2025-08-11 15:59:59,034] root INFO ############################################################################################################################################
[2025-08-11 15:59:59,035] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 15:59:59,035] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x188102b7fd05')
[2025-08-11 15:59:59,035] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 15:59:59,036] pyhamilton.interface INFO started the server thread
[2025-08-11 15:59:59,036] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 16:00:03,038] pyhamilton.interface INFO move_by_seq: Moving plate Ham_ComfortLid_Stack_0004 to Ham_ComfortLid_ODTC
[2025-08-11 16:00:46,066] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 16:00:47,567] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 16:00:47,568] pyhamilton.interface INFO disconnected from server
[2025-08-11 16:00:47,668] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 16:00:47,669] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 16:00:47,675] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 16:00:47,676] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 16:00:47,677] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 16:00:47,677] pyhamilton.interface INFO server thread exited
[2025-08-11 17:40:05,520] root INFO ############################################################################################################################################
[2025-08-11 17:40:05,522] root INFO #                                                                                                                                          #
[2025-08-11 17:40:05,522] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 17:40:05,523] root INFO #                                                                                                                                          #
[2025-08-11 17:40:05,523] root INFO ############################################################################################################################################
[2025-08-11 17:40:05,524] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 17:40:05,526] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x1882685d426d')
[2025-08-11 17:40:05,526] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 17:40:05,526] pyhamilton.interface INFO started the server thread
[2025-08-11 17:40:05,527] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 17:40:08,530] pyhamilton.interface INFO move_by_seq: Moving plate Ham_ComfortLid_Stack_0004 to Ham_ComfortLid_ODTC
[2025-08-11 17:40:08,530] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 17:40:10,031] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 17:40:10,032] pyhamilton.interface INFO disconnected from server
[2025-08-11 17:40:10,133] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 17:40:10,133] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 17:40:10,141] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 17:40:10,144] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 17:40:10,145] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 17:40:10,146] pyhamilton.interface INFO server thread exited
[2025-08-11 17:40:10,150] root ERROR Traceback (most recent call last):
[2025-08-11 17:40:10,151] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py", line 87, in <module>    transport_resource(ham_int, lid, 'Ham_ComfortLid_ODTC',    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                  resource_type=GrippedResource.LID, grip_direction=GripDirection.RIGHT, iswap=True)                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 17:40:10,152] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\transport\transport.py", line 260, in transport_resource    return ham_int.move_by_seq(source,           ~~~~~~~~~~~~~~~~~~~^^^^^^^^                               destination,                               ^^^^^^^^^^^^    ...<3 lines>...                               **more_opts,                               ^^^^^^^^^^^^                               )                               ^
[2025-08-11 17:40:10,152] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 1260, in move_by_seq    cid = self.send_command(ISWAP_GET, plateSequence=source_plate_seq,                           inverseGrip=inv,    ...<4 lines>...                           transportMode=0,                           **more_options)
[2025-08-11 17:40:10,153] root ERROR TypeError: pyhamilton.interface.HamiltonInterface.send_command() got multiple values for keyword argument 'transportMode'
[2025-08-11 17:42:49,473] root INFO ############################################################################################################################################
[2025-08-11 17:42:49,473] root INFO #                                                                                                                                          #
[2025-08-11 17:42:49,474] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 17:42:49,474] root INFO #                                                                                                                                          #
[2025-08-11 17:42:49,474] root INFO ############################################################################################################################################
[2025-08-11 17:42:49,475] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 17:42:49,476] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x18826d0522e3')
[2025-08-11 17:42:49,476] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 17:42:49,476] pyhamilton.interface INFO started the server thread
[2025-08-11 17:42:49,476] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 17:42:56,482] pyhamilton.interface INFO move_by_seq: Moving plate Ham_ComfortLid_Stack_0004 to Ham_ComfortLid_ODTC
[2025-08-11 17:42:56,482] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 17:42:57,983] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 17:42:57,984] pyhamilton.interface INFO disconnected from server
[2025-08-11 17:42:58,085] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 17:42:58,086] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 17:42:58,090] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 17:42:58,092] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 17:42:58,093] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 17:42:58,093] pyhamilton.interface INFO server thread exited
[2025-08-11 17:42:58,096] root ERROR Traceback (most recent call last):
[2025-08-11 17:42:58,098] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py", line 87, in <module>    transport_resource(ham_int, lid, 'Ham_ComfortLid_ODTC',    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                  resource_type=GrippedResource.LID, grip_direction=GripDirection.RIGHT, iswap=True)                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 17:42:58,099] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\transport\transport.py", line 260, in transport_resource    return ham_int.move_by_seq(source,           ~~~~~~~~~~~~~~~~~~~^^^^^^^^                               destination,                               ^^^^^^^^^^^^    ...<3 lines>...                               **more_opts,                               ^^^^^^^^^^^^                               )                               ^
[2025-08-11 17:42:58,100] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 1260, in move_by_seq    cid = self.send_command(ISWAP_GET, plateSequence=source_plate_seq,                           inverseGrip=inv,    ...<3 lines>...                           labwareOrientation=placeOrientation,                           **more_options)
[2025-08-11 17:42:58,100] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 680, in send_command    send_cmd_dict = template.assemble_cmd(**cmd_dict)
[2025-08-11 17:42:58,101] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 66, in assemble_cmd    self.assert_valid_cmd(assembled_cmd)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
[2025-08-11 17:42:58,101] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 114, in assert_valid_cmd    raise ValueError('\n'.join(prints))
[2025-08-11 17:42:58,102] root ERROR ValueError: Assert valid command "iSwapGet" failed: template parameter keys (left) do not match given keys (right)    collisionControl            collisionControl    command                     command    gripForce                   gripForce    gripHeight                  gripHeight    gripMode                    gripMode    gripWidth                   gripWidth    id                          id    inverseGrip                 inverseGrip    labwareOrientation          labwareOrientation    lidLabwarePositions          (?)  lid    lidSequence                 lidLabwarePositions    liftUpHeight                lidSequence    movementType                liftUpHeight    plateLabwarePositions       movementType    plateSequence               plateLabwarePositions    retractDistance             plateSequence    sequenceCounting            retractDistance    tolerance                   sequenceCounting    toolSequence                tolerance    transportMode               toolSequence    widthBefore                 transportMode                                widthBefore
[2025-08-11 17:46:19,479] root INFO ############################################################################################################################################
[2025-08-11 17:46:19,480] root INFO #                                                                                                                                          #
[2025-08-11 17:46:19,480] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 17:46:19,480] root INFO #                                                                                                                                          #
[2025-08-11 17:46:19,481] root INFO ############################################################################################################################################
[2025-08-11 17:46:19,482] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 17:46:19,483] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x18827f066abf')
[2025-08-11 17:46:19,484] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 17:46:19,484] pyhamilton.interface INFO started the server thread
[2025-08-11 17:46:19,485] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 17:46:24,491] pyhamilton.interface INFO move_by_seq: Moving plate Ham_ComfortLid_Stack_0004 to Ham_ComfortLid_ODTC
[2025-08-11 17:46:25,492] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 17:46:26,993] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 17:46:26,994] pyhamilton.interface INFO disconnected from server
[2025-08-11 17:46:27,095] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 17:46:27,096] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 17:46:27,099] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 17:46:27,102] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 17:46:27,103] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 17:46:27,103] pyhamilton.interface INFO server thread exited
[2025-08-11 17:46:27,107] root ERROR Traceback (most recent call last):
[2025-08-11 17:46:27,110] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py", line 87, in <module>    transport_resource(ham_int, lid, 'Ham_ComfortLid_ODTC',    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                  resource_type=GrippedResource.LID, grip_direction=GripDirection.RIGHT, iswap=True)                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 17:46:27,111] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\transport\transport.py", line 258, in transport_resource    return ham_int.move_by_seq(source,           ~~~~~~~~~~~~~~~~~~~^^^^^^^^                               destination,                               ^^^^^^^^^^^^    ...<3 lines>...                               **more_opts,                               ^^^^^^^^^^^^                               )                               ^
[2025-08-11 17:46:27,111] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 1268, in move_by_seq    self.wait_on_response(cid, raise_first_exception=True, timeout=120)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 17:46:27,112] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 17:46:27,113] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-11 17:46:27,114] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 396, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-08-11 17:46:27,115] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"STAR-return","step-name":"iSwapGet","step-return1":"2","step-return2":"","step-return3":"","step-return4":"","id":"0x188280ba0fd9"} )
[2025-08-11 17:48:42,518] root INFO ############################################################################################################################################
[2025-08-11 17:48:42,518] root INFO #                                                                                                                                          #
[2025-08-11 17:48:42,519] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 17:48:42,519] root INFO #                                                                                                                                          #
[2025-08-11 17:48:42,519] root INFO ############################################################################################################################################
[2025-08-11 17:48:42,519] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 17:48:42,520] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x188287aba257')
[2025-08-11 17:48:42,520] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 17:48:42,520] pyhamilton.interface INFO started the server thread
[2025-08-11 17:48:42,520] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 17:48:46,523] pyhamilton.interface INFO move_by_seq: Moving plate Ham_ComfortLid_Stack_0004 to Ham_ComfortLid_ODTC
[2025-08-11 17:48:47,524] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 17:48:49,025] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 17:48:49,025] pyhamilton.interface INFO disconnected from server
[2025-08-11 17:48:49,126] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 17:48:49,126] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 17:48:49,130] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 17:48:49,133] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 17:48:49,133] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 17:48:49,134] pyhamilton.interface INFO server thread exited
[2025-08-11 17:48:49,137] root ERROR Traceback (most recent call last):
[2025-08-11 17:48:49,139] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py", line 87, in <module>    transport_resource(ham_int, lid, 'Ham_ComfortLid_ODTC',    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                  resource_type=GrippedResource.LID, grip_direction=GripDirection.RIGHT, iswap=True)                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 17:48:49,140] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\transport\transport.py", line 258, in transport_resource    return ham_int.move_by_seq(source,           ~~~~~~~~~~~~~~~~~~~^^^^^^^^                               destination,                               ^^^^^^^^^^^^    ...<3 lines>...                               **more_opts,                               ^^^^^^^^^^^^                               )                               ^
[2025-08-11 17:48:49,140] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 1268, in move_by_seq    self.wait_on_response(cid, raise_first_exception=True, timeout=120)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 17:48:49,140] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 17:48:49,141] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-11 17:48:49,141] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 396, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-08-11 17:48:49,141] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"STAR-return","step-name":"iSwapGet","step-return1":"2","step-return2":"","step-return3":"","step-return4":"","id":"0x188289314b39"} )
[2025-08-11 17:51:12,132] root INFO ############################################################################################################################################
[2025-08-11 17:51:12,133] root INFO #                                                                                                                                          #
[2025-08-11 17:51:12,133] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 17:51:12,133] root INFO #                                                                                                                                          #
[2025-08-11 17:51:12,133] root INFO ############################################################################################################################################
[2025-08-11 17:51:12,134] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 17:51:12,135] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x188290782088')
[2025-08-11 17:51:12,135] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 17:51:12,136] pyhamilton.interface INFO started the server thread
[2025-08-11 17:51:12,136] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 17:51:15,139] pyhamilton.interface INFO move_by_seq: Moving plate Ham_ComfortLid_Stack_0004 to Ham_ComfortLid_ODTC
[2025-08-11 17:51:56,162] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 17:51:57,663] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 17:51:57,664] pyhamilton.interface INFO disconnected from server
[2025-08-11 17:51:57,764] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 17:51:57,765] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 17:51:57,768] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 17:51:57,770] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 17:51:57,771] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 17:51:57,772] pyhamilton.interface INFO server thread exited
[2025-08-11 17:55:19,068] root INFO ############################################################################################################################################
[2025-08-11 17:55:19,069] root INFO #                                                                                                                                          #
[2025-08-11 17:55:19,069] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 17:55:19,069] root INFO #                                                                                                                                          #
[2025-08-11 17:55:19,069] root INFO ############################################################################################################################################
[2025-08-11 17:55:19,070] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 17:55:19,071] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x18829ee3b74b')
[2025-08-11 17:55:19,072] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 17:55:19,072] pyhamilton.interface INFO started the server thread
[2025-08-11 17:55:19,072] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 17:55:23,076] pyhamilton.interface INFO move_by_seq: Moving plate Ham_ComfortLid_Stack_0004 to Ham_ComfortLid_ODTC
[2025-08-11 17:56:03,098] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 17:56:04,600] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 17:56:04,600] pyhamilton.interface INFO disconnected from server
[2025-08-11 17:56:04,701] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 17:56:04,702] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 17:56:04,708] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 17:56:04,713] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 17:56:04,715] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 17:56:04,716] pyhamilton.interface INFO server thread exited
[2025-08-11 17:57:14,353] root INFO ############################################################################################################################################
[2025-08-11 17:57:14,354] root INFO #                                                                                                                                          #
[2025-08-11 17:57:14,355] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 17:57:14,355] root INFO #                                                                                                                                          #
[2025-08-11 17:57:14,355] root INFO ############################################################################################################################################
[2025-08-11 17:57:14,356] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 17:57:14,357] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x1882a5b36a1a')
[2025-08-11 17:57:14,358] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 17:57:14,358] pyhamilton.interface INFO started the server thread
[2025-08-11 17:57:14,358] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 17:57:17,363] pyhamilton.interface INFO move_by_seq: Moving plate Ham_ComfortLid_Stack_0004 to Ham_ComfortLid_ODTC
[2025-08-11 17:57:57,384] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 17:57:58,886] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 17:57:58,886] pyhamilton.interface INFO disconnected from server
[2025-08-11 17:57:58,987] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 17:57:58,988] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 17:57:58,991] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 17:57:58,992] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 17:57:58,992] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 17:57:58,993] pyhamilton.interface INFO server thread exited
[2025-08-11 17:59:01,978] root INFO ############################################################################################################################################
[2025-08-11 17:59:01,979] root INFO #                                                                                                                                          #
[2025-08-11 17:59:01,980] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 17:59:01,980] root INFO #                                                                                                                                          #
[2025-08-11 17:59:01,980] root INFO ############################################################################################################################################
[2025-08-11 17:59:01,982] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 17:59:01,982] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x1882abe0b70c')
[2025-08-11 17:59:01,983] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 17:59:01,983] pyhamilton.interface INFO started the server thread
[2025-08-11 17:59:01,984] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 17:59:05,988] pyhamilton.interface INFO move_by_seq: Moving plate Ham_ComfortLid_Stack_0004 to Ham_ComfortLid_ODTC
[2025-08-11 17:59:46,012] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 17:59:47,513] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 17:59:47,514] pyhamilton.interface INFO disconnected from server
[2025-08-11 17:59:47,614] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 17:59:47,615] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 17:59:47,620] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 17:59:47,622] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 17:59:47,623] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 17:59:47,624] pyhamilton.interface INFO server thread exited
[2025-08-11 18:00:56,434] root INFO ############################################################################################################################################
[2025-08-11 18:00:56,435] root INFO #                                                                                                                                          #
[2025-08-11 18:00:56,435] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 18:00:56,436] root INFO #                                                                                                                                          #
[2025-08-11 18:00:56,436] root INFO ############################################################################################################################################
[2025-08-11 18:00:56,437] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 18:00:56,438] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x1882b2e0fe5f')
[2025-08-11 18:00:56,438] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 18:00:56,438] pyhamilton.interface INFO started the server thread
[2025-08-11 18:00:56,439] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 18:00:59,442] pyhamilton.interface INFO move_by_seq: Moving plate Ham_ComfortLid_Stack_0004 to Ham_ComfortLid_ODTC
[2025-08-11 18:01:12,451] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 18:01:13,952] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 18:01:13,952] pyhamilton.interface INFO disconnected from server
[2025-08-11 18:01:14,053] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 18:01:14,054] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 18:01:14,057] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 18:01:14,060] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 18:01:14,061] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 18:01:14,061] pyhamilton.interface INFO server thread exited
[2025-08-11 18:01:14,065] root ERROR Traceback (most recent call last):
[2025-08-11 18:01:14,068] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py", line 87, in <module>    transport_resource(ham_int, lid, 'Ham_ComfortLid_ODTC',    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                  resource_type=GrippedResource.LID, grip_direction=GripDirection.RIGHT, iswap=True)                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 18:01:14,068] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\transport\transport.py", line 258, in transport_resource    return ham_int.move_by_seq(source,           ~~~~~~~~~~~~~~~~~~~^^^^^^^^                               destination,                               ^^^^^^^^^^^^    ...<3 lines>...                               **more_opts,                               ^^^^^^^^^^^^                               )                               ^
[2025-08-11 18:01:14,068] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 1268, in move_by_seq    self.wait_on_response(cid, raise_first_exception=True, timeout=120)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 18:01:14,068] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-11 18:01:14,069] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-11 18:01:14,069] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 414, in raise_first_exception    raise HAMILTON_ERROR_MAP[firstErrorCode]()
[2025-08-11 18:01:14,070] root ERROR pyhamilton.oemerr.LabwareError
[2025-08-11 18:02:45,885] root INFO ############################################################################################################################################
[2025-08-11 18:02:45,886] root INFO #                                                                                                                                          #
[2025-08-11 18:02:45,887] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\thermal_cycler_with_transport.py     #
[2025-08-11 18:02:45,887] root INFO #                                                                                                                                          #
[2025-08-11 18:02:45,887] root INFO ############################################################################################################################################
[2025-08-11 18:02:45,889] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-11 18:02:45,890] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x1882b994def7')
[2025-08-11 18:02:45,890] pyhamilton.interface INFO started the oem application for simulation
[2025-08-11 18:02:45,890] pyhamilton.interface INFO started the server thread
[2025-08-11 18:02:45,890] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-11 18:02:48,909] pyhamilton.interface INFO move_by_seq: Moving plate Ham_ComfortLid_Stack_0003 to Ham_ComfortLid_ODTC
[2025-08-11 18:03:31,930] pyhamilton.interface INFO sending end run command to simulator
[2025-08-11 18:03:33,431] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-11 18:03:33,432] pyhamilton.interface INFO disconnected from server
[2025-08-11 18:03:33,533] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-11 18:03:33,533] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-11 18:03:33,537] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-11 18:03:33,539] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-11 18:03:33,540] pyhamilton.interface INFO dummy get request sent to server
[2025-08-11 18:03:33,540] pyhamilton.interface INFO server thread exited
[2025-08-12 11:51:28,460] root INFO ####################################################################################################################################
[2025-08-12 11:51:28,463] root INFO #                                                                                                                                  #
[2025-08-12 11:51:28,463] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\magnetic_bead_cleanup.py     #
[2025-08-12 11:51:28,463] root INFO #                                                                                                                                  #
[2025-08-12 11:51:28,464] root INFO ####################################################################################################################################
[2025-08-12 11:51:28,465] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-12 11:51:28,467] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x1891a1b9f449')
[2025-08-12 11:51:28,467] pyhamilton.interface INFO started the oem application for simulation
[2025-08-12 11:51:28,467] pyhamilton.interface INFO started the server thread
[2025-08-12 11:51:28,468] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-12 11:51:33,472] pyhamilton.interface INFO sending end run command to simulator
[2025-08-12 11:51:34,973] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-12 11:51:34,973] pyhamilton.interface INFO disconnected from server
[2025-08-12 11:51:35,074] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-12 11:51:35,075] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-12 11:51:35,082] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-12 11:51:35,085] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-12 11:51:35,086] pyhamilton.interface INFO dummy get request sent to server
[2025-08-12 11:51:35,086] pyhamilton.interface INFO server thread exited
[2025-08-12 11:51:35,090] root ERROR Traceback (most recent call last):
[2025-08-12 11:51:35,093] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\magnetic_bead_cleanup.py", line 92, in <module>    initialize(simulation=False)  # Initialize the HamiltonInterface    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^
[2025-08-12 11:51:35,093] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\magnetic_bead_cleanup.py", line 84, in initialize    hhs_create_usb_device(ham_int, _)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
[2025-08-12 11:51:35,093] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 31, in hhs_create_usb_device    response = ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout, return_data=['step-return2'])
[2025-08-12 11:51:35,093] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-12 11:51:35,094] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-12 11:51:35,094] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 396, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-08-12 11:51:35,094] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"HHS-return","step-name":"HHS_CreateUSBDevice","step-return1":0,"step-return2":0,"step-return3":"","step-return4":"","id":"0x1891a967b86b"} )
[2025-08-12 11:52:42,213] root INFO ####################################################################################################################################
[2025-08-12 11:52:42,214] root INFO #                                                                                                                                  #
[2025-08-12 11:52:42,214] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\magnetic_bead_cleanup.py     #
[2025-08-12 11:52:42,214] root INFO #                                                                                                                                  #
[2025-08-12 11:52:42,214] root INFO ####################################################################################################################################
[2025-08-12 11:52:42,216] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-12 11:52:42,217] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x1891ac28d48b')
[2025-08-12 11:52:42,217] pyhamilton.interface INFO started the oem application for simulation
[2025-08-12 11:52:42,218] pyhamilton.interface INFO started the server thread
[2025-08-12 11:52:42,218] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-12 11:52:48,229] pyhamilton.interface INFO sending end run command to simulator
[2025-08-12 11:52:49,731] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-12 11:52:49,731] pyhamilton.interface INFO disconnected from server
[2025-08-12 11:52:49,832] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-12 11:52:49,832] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-12 11:52:49,835] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-12 11:52:49,837] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-12 11:52:49,837] pyhamilton.interface INFO dummy get request sent to server
[2025-08-12 11:52:49,838] pyhamilton.interface INFO server thread exited
[2025-08-12 11:55:55,644] root INFO ####################################################################################################################################
[2025-08-12 11:55:55,645] root INFO #                                                                                                                                  #
[2025-08-12 11:55:55,645] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\magnetic_bead_cleanup.py     #
[2025-08-12 11:55:55,645] root INFO #                                                                                                                                  #
[2025-08-12 11:55:55,645] root INFO ####################################################################################################################################
[2025-08-12 11:55:55,647] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-12 11:55:55,648] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x1891b763fb0c')
[2025-08-12 11:55:55,648] pyhamilton.interface INFO started the oem application for simulation
[2025-08-12 11:55:55,648] pyhamilton.interface INFO started the server thread
[2025-08-12 11:55:55,648] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-12 11:56:56,016] pyhamilton.interface INFO sending end run command to simulator
[2025-08-12 11:56:56,162] pyhamilton.interface INFO disconnected from server
[2025-08-12 11:56:56,263] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-12 11:56:56,264] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-12 11:56:56,267] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-12 11:56:56,270] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-12 11:56:56,271] pyhamilton.interface INFO dummy get request sent to server
[2025-08-12 11:56:56,271] pyhamilton.interface INFO server thread exited
[2025-08-12 11:56:56,275] root ERROR Traceback (most recent call last):
[2025-08-12 11:56:56,277] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\magnetic_bead_cleanup.py", line 89, in initialize    hhs_stop_shaker(ham_int, node)    ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
[2025-08-12 11:56:56,278] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 157, in hhs_stop_shaker    ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout)    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-12 11:56:56,279] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 723, in wait_on_response    for _ in wait(delays=delays, timeout=timeout):             ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-12 11:56:56,279] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\waiter\__init__.py", line 91, in __iter__    time.sleep(min(delay, remaining))    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-12 11:56:56,279] root ERROR KeyboardInterrupt
[2025-08-12 11:56:56,280] root ERROR During handling of the above exception, another exception occurred:
[2025-08-12 11:56:56,281] root ERROR Traceback (most recent call last):
[2025-08-12 11:56:56,285] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\magnetic_bead_cleanup.py", line 96, in <module>    initialize(simulation=False)  # Initialize the HamiltonInterface    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^
[2025-08-12 11:56:56,285] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\magnetic_bead_cleanup.py", line 78, in initialize    with HamiltonInterface(windowed=True, simulating=False) as ham_int:         ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-12 11:56:56,286] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 642, in __exit__    self.stop()    ~~~~~~~~~^^
[2025-08-12 11:56:56,287] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 605, in stop    self.wait_on_response(self.send_command(command='end', id=hex(0)), timeout=1.5)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-12 11:56:56,287] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 723, in wait_on_response    for _ in wait(delays=delays, timeout=timeout):             ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-12 11:56:56,288] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\waiter\__init__.py", line 91, in __iter__    time.sleep(min(delay, remaining))    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-12 11:56:56,289] root ERROR KeyboardInterrupt
[2025-08-12 12:06:37,777] root INFO ####################################################################################################################################
[2025-08-12 12:06:37,777] root INFO #                                                                                                                                  #
[2025-08-12 12:06:37,778] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\magnetic_bead_cleanup.py     #
[2025-08-12 12:06:37,778] root INFO #                                                                                                                                  #
[2025-08-12 12:06:37,778] root INFO ####################################################################################################################################
[2025-08-12 12:06:37,779] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-12 12:06:37,780] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x1891ddf67cab')
[2025-08-12 12:06:37,780] pyhamilton.interface INFO started the oem application for simulation
[2025-08-12 12:06:37,780] pyhamilton.interface INFO started the server thread
[2025-08-12 12:06:37,781] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-12 12:06:39,783] pyhamilton.interface INFO sending end run command to simulator
[2025-08-12 12:06:41,284] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-12 12:06:41,285] pyhamilton.interface INFO disconnected from server
[2025-08-12 12:06:41,386] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-12 12:06:41,386] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-12 12:06:41,391] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-12 12:06:41,393] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-12 12:06:41,394] pyhamilton.interface INFO dummy get request sent to server
[2025-08-12 12:06:41,394] pyhamilton.interface INFO server thread exited
[2025-08-12 12:06:41,397] root ERROR Traceback (most recent call last):
[2025-08-12 12:06:41,400] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\magnetic_bead_cleanup.py", line 96, in <module>    initialize(simulation=False)  # Initialize the HamiltonInterface    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^
[2025-08-12 12:06:41,401] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\magnetic_bead_cleanup.py", line 84, in initialize    hhs_create_usb_device(ham_int, node)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
[2025-08-12 12:06:41,401] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\hhs_wrappers.py", line 31, in hhs_create_usb_device    response = ham.wait_on_response(cmd, raise_first_exception=True, timeout=std_timeout, return_data=['step-return2'])
[2025-08-12 12:06:41,401] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 734, in wait_on_response    return self.parse_response(server_response, raise_first_exception, return_data)           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-12 12:06:41,401] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 753, in parse_response    hamiltonResponse.raise_first_exception()    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
[2025-08-12 12:06:41,402] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 396, in raise_first_exception    raise HamiltonStepError('Hamilton step did not execute correctly; no error code given. ( response: ' + self.raw + ' )')
[2025-08-12 12:06:41,402] root ERROR pyhamilton.oemerr.HamiltonStepError: Hamilton step did not execute correctly; no error code given. ( response: {"command":"HHS-return","step-name":"HHS_CreateUSBDevice","step-return1":0,"step-return2":1,"step-return3":"","step-return4":"","id":"0x1891df7c31ff"} )
[2025-08-12 12:07:56,284] root INFO ####################################################################################################################################
[2025-08-12 12:07:56,285] root INFO #                                                                                                                                  #
[2025-08-12 12:07:56,285] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\magnetic_bead_cleanup.py     #
[2025-08-12 12:07:56,286] root INFO #                                                                                                                                  #
[2025-08-12 12:07:56,286] root INFO ####################################################################################################################################
[2025-08-12 12:07:56,288] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-12 12:07:56,288] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x1891e2b3a30d')
[2025-08-12 12:07:56,289] pyhamilton.interface INFO started the oem application for simulation
[2025-08-12 12:07:56,289] pyhamilton.interface INFO started the server thread
[2025-08-12 12:07:56,289] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-12 12:09:30,337] pyhamilton.interface INFO sending end run command to simulator
[2025-08-12 12:09:31,838] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-12 12:09:31,839] pyhamilton.interface INFO disconnected from server
[2025-08-12 12:09:31,940] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-12 12:09:31,941] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-12 12:09:31,947] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-12 12:09:31,950] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-12 12:09:31,951] pyhamilton.interface INFO dummy get request sent to server
[2025-08-12 12:09:31,951] pyhamilton.interface INFO server thread exited
[2025-08-19 00:57:15,246] root INFO #############################################################################################################################
[2025-08-19 00:57:15,248] root INFO #                                                                                                                           #
[2025-08-19 00:57:15,249] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py     #
[2025-08-19 00:57:15,249] root INFO #                                                                                                                           #
[2025-08-19 00:57:15,249] root INFO #############################################################################################################################
[2025-08-19 00:57:15,250] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-19 00:57:15,250] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x19155546ca36')
[2025-08-19 00:57:15,250] pyhamilton.interface INFO started the oem application for simulation
[2025-08-19 00:57:15,250] pyhamilton.interface INFO started the server thread
[2025-08-19 00:57:15,250] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-19 00:57:16,803] pyhamilton.interface INFO tip_pick_up: Pick up tips at STF_L_0001, 1; STF_L_0001, 2; STF_L_0001, 3; STF_L_0001, 4; STF_L_0001, 5; STF_L_0001, 6; STF_L_0001, 7; STF_L_0001, 8
[2025-08-19 00:57:17,804] pyhamilton.interface INFO aspirate: Aspirate volumes [300, 300, 300, 300, 300, 300, 300, 300] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Part', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-19 00:57:19,807] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Part', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-19 00:57:23,810] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Part', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-19 00:57:25,812] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A3; MIDI_Pipette, B3; MIDI_Pipette, C3; MIDI_Pipette, D3; MIDI_Pipette, E3; MIDI_Pipette, F3; MIDI_Pipette, G3; MIDI_Pipette, H3] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Part', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-19 00:57:27,815] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A4; MIDI_Pipette, B4; MIDI_Pipette, C4; MIDI_Pipette, D4; MIDI_Pipette, E4; MIDI_Pipette, F4; MIDI_Pipette, G4; MIDI_Pipette, H4] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Part', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-19 00:57:29,818] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A5; MIDI_Pipette, B5; MIDI_Pipette, C5; MIDI_Pipette, D5; MIDI_Pipette, E5; MIDI_Pipette, F5; MIDI_Pipette, G5; MIDI_Pipette, H5] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Part', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-19 00:57:32,821] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A6; MIDI_Pipette, B6; MIDI_Pipette, C6; MIDI_Pipette, D6; MIDI_Pipette, E6; MIDI_Pipette, F6; MIDI_Pipette, G6; MIDI_Pipette, H6] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Part', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-19 00:57:36,825] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-19 00:57:39,265] pyhamilton.interface INFO tip_pick_up: Pick up tips at STF_L_0001, 9; STF_L_0001, 10; STF_L_0001, 11; STF_L_0001, 12; STF_L_0001, 13; STF_L_0001, 14; STF_L_0001, 15; STF_L_0001, 16
[2025-08-19 00:57:41,267] pyhamilton.interface INFO aspirate: Aspirate volumes [300, 300, 300, 300, 300, 300, 300, 300] from positions [rgt_cont_60ml_BC_A00_0001, 1; rgt_cont_60ml_BC_A00_0001, 2; rgt_cont_60ml_BC_A00_0001, 3; rgt_cont_60ml_BC_A00_0001, 4; rgt_cont_60ml_BC_A00_0001, 5; rgt_cont_60ml_BC_A00_0001, 6; rgt_cont_60ml_BC_A00_0001, 7; rgt_cont_60ml_BC_A00_0001, 8] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Part', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 1, 'aspirateMode': 2, 'submergeDepth': 2}
[2025-08-19 00:57:45,270] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A7; MIDI_Pipette, B7; MIDI_Pipette, C7; MIDI_Pipette, D7; MIDI_Pipette, E7; MIDI_Pipette, F7; MIDI_Pipette, G7; MIDI_Pipette, H7] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Part', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-19 00:57:48,273] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A8; MIDI_Pipette, B8; MIDI_Pipette, C8; MIDI_Pipette, D8; MIDI_Pipette, E8; MIDI_Pipette, F8; MIDI_Pipette, G8; MIDI_Pipette, H8] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Part', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-19 00:57:52,278] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A9; MIDI_Pipette, B9; MIDI_Pipette, C9; MIDI_Pipette, D9; MIDI_Pipette, E9; MIDI_Pipette, F9; MIDI_Pipette, G9; MIDI_Pipette, H9] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Part', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-19 00:57:55,282] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A10; MIDI_Pipette, B10; MIDI_Pipette, C10; MIDI_Pipette, D10; MIDI_Pipette, E10; MIDI_Pipette, F10; MIDI_Pipette, G10; MIDI_Pipette, H10] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Part', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-19 00:57:59,286] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A11; MIDI_Pipette, B11; MIDI_Pipette, C11; MIDI_Pipette, D11; MIDI_Pipette, E11; MIDI_Pipette, F11; MIDI_Pipette, G11; MIDI_Pipette, H11] with extra options {'liquidClass': 'StandardVolumeFilter_Water_DispenseJet_Part', 'mixCycles': 0, 'mixVolume': 0, 'liquidHeight': 0, 'capacitiveLLD': 0, 'liquidFollowing': 0}
[2025-08-19 00:58:13,824] pyhamilton.interface INFO sending end run command to simulator
[2025-08-19 00:58:14,038] pyhamilton.interface INFO disconnected from server
[2025-08-19 00:58:14,139] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-19 00:58:14,140] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-19 00:58:14,143] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-19 00:58:14,146] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-19 00:58:14,147] pyhamilton.interface INFO dummy get request sent to server
[2025-08-19 00:58:14,147] pyhamilton.interface INFO server thread exited
[2025-08-19 00:58:14,152] root ERROR Traceback (most recent call last):
[2025-08-19 00:58:14,156] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 59, in <module>    multi_dispense(ham_int, tips, aspiration_positions, dispense_positions, volumes,    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                 liquid_class = 'StandardVolumeFilter_Water_DispenseJet_Part')                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-19 00:58:14,156] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\pyhamilton_advanced\pipetting\pipetting.py", line 306, in multi_dispense    response = ham_int.dispense(column, column_volumes, liquidClass=liquid_class,                                mixCycles=mix_cycles, mixVolume=0,                                liquidHeight=dispense_height,                                capacitiveLLD=0,                                liquidFollowing=0)
[2025-08-19 00:58:14,156] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 917, in dispense    response = self.wait_on_response(        self.send_command(    ...<7 lines>...        return_data=['step-return2', 'step-return3']    )
[2025-08-19 00:58:14,156] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 723, in wait_on_response    for _ in wait(delays=delays, timeout=timeout):             ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-19 00:58:14,156] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\waiter\__init__.py", line 91, in __iter__    time.sleep(min(delay, remaining))    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-19 00:58:14,157] root ERROR KeyboardInterrupt
[2025-08-19 00:58:14,157] root ERROR During handling of the above exception, another exception occurred:
[2025-08-19 00:58:14,157] root ERROR Traceback (most recent call last):
[2025-08-19 00:58:14,158] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\multi_dispense.py", line 52, in <module>    with HamiltonInterface(windowed=True, simulating=False) as ham_int:         ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-19 00:58:14,159] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 642, in __exit__    self.stop()    ~~~~~~~~~^^
[2025-08-19 00:58:14,159] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 605, in stop    self.wait_on_response(self.send_command(command='end', id=hex(0)), timeout=1.5)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-19 00:58:14,160] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 723, in wait_on_response    for _ in wait(delays=delays, timeout=timeout):             ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-19 00:58:14,160] root ERROR   File "C:\Users\stefan.golas\AppData\Local\Programs\Python\Python313\Lib\site-packages\waiter\__init__.py", line 91, in __iter__    time.sleep(min(delay, remaining))    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-19 00:58:14,160] root ERROR KeyboardInterrupt
[2025-08-19 15:25:31,066] root INFO #######################################################################################################################
[2025-08-19 15:25:31,069] root INFO #                                                                                                                     #
[2025-08-19 15:25:31,069] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\ngs_demo.py     #
[2025-08-19 15:25:31,069] root INFO #                                                                                                                     #
[2025-08-19 15:25:31,069] root INFO #######################################################################################################################
[2025-08-19 15:25:31,070] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-19 15:25:31,071] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x1921764e7363')
[2025-08-19 15:25:31,071] pyhamilton.interface INFO started the oem application for simulation
[2025-08-19 15:25:31,071] pyhamilton.interface INFO started the server thread
[2025-08-19 15:25:31,071] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-19 15:25:31,145] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-08-19 15:25:32,148] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquid_class': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-19 15:25:32,149] pyhamilton.interface INFO sending end run command to simulator
[2025-08-19 15:25:33,650] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-19 15:25:33,650] pyhamilton.interface INFO disconnected from server
[2025-08-19 15:25:33,751] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-19 15:25:33,751] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-19 15:25:33,759] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-19 15:25:33,761] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-19 15:25:33,762] pyhamilton.interface INFO dummy get request sent to server
[2025-08-19 15:25:33,762] pyhamilton.interface INFO server thread exited
[2025-08-19 15:25:33,764] root ERROR Traceback (most recent call last):
[2025-08-19 15:25:33,766] root ERROR   File "C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\ngs_demo.py", line 31, in <module>    ham_int.aspirate(aspiration_positions, vols=[50]*8, liquid_class='Tip_50ulFilter_Water_DispenseSurface_Empty')    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2025-08-19 15:25:33,766] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 867, in aspirate    self.send_command(    ~~~~~~~~~~~~~~~~~^        ASPIRATE,        ^^^^^^^^^    ...<3 lines>...        **more_options        ^^^^^^^^^^^^^^    ),    ^
[2025-08-19 15:25:33,767] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 680, in send_command    send_cmd_dict = template.assemble_cmd(**cmd_dict)
[2025-08-19 15:25:33,767] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 66, in assemble_cmd    self.assert_valid_cmd(assembled_cmd)    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
[2025-08-19 15:25:33,768] root ERROR   File "C:\Users\stefan.golas\pyhamilton\pyhamilton\interface.py", line 114, in assert_valid_cmd    raise ValueError('\n'.join(prints))
[2025-08-19 15:25:33,768] root ERROR ValueError: Assert valid command "channelAspirate" failed: template parameter keys (left) do not match given keys (right)    airTransportRetractDist       airTransportRetractDist    aspPosAboveTouch              aspPosAboveTouch    aspirateMode                  aspirateMode    aspirateSequence              aspirateSequence    capacitiveLLD                 capacitiveLLD    channelUse                    channelUse    channelVariable               channelVariable    command                       command    id                            id    labwarePositions              labwarePositions    liquidClass                   liquidClass    liquidFollowing               liquidFollowing    liquidHeight                  liquidHeight    maxLLdDifference               (?)  liquid_class    mixCycles                     maxLLdDifference    mixPosition                   mixCycles    mixVolume                     mixPosition    pressureLLD                   mixVolume    sequenceCounting              pressureLLD    submergeDepth                 sequenceCounting    touchOff                      submergeDepth    volumes                       touchOff    xDisplacement                 volumes    yDisplacement                 xDisplacement    zDisplacement                 yDisplacement                                  zDisplacement
[2025-08-19 15:26:15,619] root INFO #######################################################################################################################
[2025-08-19 15:26:15,619] root INFO #                                                                                                                     #
[2025-08-19 15:26:15,619] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\ngs_demo.py     #
[2025-08-19 15:26:15,619] root INFO #                                                                                                                     #
[2025-08-19 15:26:15,619] root INFO #######################################################################################################################
[2025-08-19 15:26:15,620] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-19 15:26:15,621] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x192178c9650d')
[2025-08-19 15:26:15,621] pyhamilton.interface INFO started the oem application for simulation
[2025-08-19 15:26:15,621] pyhamilton.interface INFO started the server thread
[2025-08-19 15:26:15,621] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-19 15:26:15,717] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-08-19 15:26:16,719] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-19 15:26:19,723] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-19 15:26:21,726] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-19 15:26:22,727] pyhamilton.interface INFO sending end run command to simulator
[2025-08-19 15:26:24,228] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-19 15:26:24,229] pyhamilton.interface INFO disconnected from server
[2025-08-19 15:26:24,330] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-19 15:26:24,331] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-19 15:26:24,336] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-19 15:26:24,339] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-19 15:26:24,340] pyhamilton.interface INFO dummy get request sent to server
[2025-08-19 15:26:24,340] pyhamilton.interface INFO server thread exited
[2025-08-19 15:27:59,412] root INFO #######################################################################################################################
[2025-08-19 15:27:59,412] root INFO #                                                                                                                     #
[2025-08-19 15:27:59,412] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\ngs_demo.py     #
[2025-08-19 15:27:59,412] root INFO #                                                                                                                     #
[2025-08-19 15:27:59,412] root INFO #######################################################################################################################
[2025-08-19 15:27:59,413] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-19 15:27:59,413] pyhamilton.interface INFO running in simulation mode
[2025-08-19 15:27:59,413] pyhamilton.interface INFO started the server thread
[2025-08-19 15:27:59,413] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-19 15:27:59,477] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-08-19 15:27:59,477] JSONLogger INFO {'command': 'channelTipPickUp', 'id': '0x1921807096b5', 'tipSequence': '', 'labwarePositions': 'TIP_50uLF_L_0001, 1;TIP_50uLF_L_0001, 2;TIP_50uLF_L_0001, 3;TIP_50uLF_L_0001, 4;TIP_50uLF_L_0001, 5;TIP_50uLF_L_0001, 6;TIP_50uLF_L_0001, 7;TIP_50uLF_L_0001, 8', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1}
[2025-08-19 15:27:59,478] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-19 15:27:59,478] JSONLogger INFO {'command': 'channelAspirate', 'id': '0x192180709aec', 'aspirateSequence': '', 'labwarePositions': 'MIDI_Pipette, A1;MIDI_Pipette, B1;MIDI_Pipette, C1;MIDI_Pipette, D1;MIDI_Pipette, E1;MIDI_Pipette, F1;MIDI_Pipette, G1;MIDI_Pipette, H1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'aspirateMode': 0, 'capacitiveLLD': 0, 'pressureLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'maxLLdDifference': 0.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'aspPosAboveTouch': 0.0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-19 15:27:59,479] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-19 15:27:59,479] JSONLogger INFO {'command': 'channelDispense', 'id': '0x192180709d98', 'dispenseSequence': '', 'labwarePositions': 'MIDI_Pipette, A2;MIDI_Pipette, B2;MIDI_Pipette, C2;MIDI_Pipette, D2;MIDI_Pipette, E2;MIDI_Pipette, F2;MIDI_Pipette, G2;MIDI_Pipette, H2', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'dispenseMode': 8, 'capacitiveLLD': 0, 'liquidFollowing': 0, 'submergeDepth': 2.0, 'liquidHeight': 1.0, 'mixCycles': 0, 'mixPosition': 0.0, 'mixVolume': 0.0, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0, 'airTransportRetractDist': 10.0, 'touchOff': 0, 'dispPositionAboveTouch': 0.0, 'zMoveAfterStep': 0, 'sideTouch': 0, 'volumes': [50, 50, 50, 50, 50, 50, 50, 50], 'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-19 15:27:59,479] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-19 15:27:59,479] JSONLogger INFO {'command': 'channelTipEject', 'id': '0x192180709eae', 'wasteSequence': '', 'labwarePositions': ', 1;, 1;, 1;, 1;, 1;, 1;, 1;, 1', 'channelVariable': '1111111100000000', 'sequenceCounting': 0, 'channelUse': 1, 'useDefaultWaste': 1, 'xDisplacement': 0.0, 'yDisplacement': 0.0, 'zDisplacement': 0.0}
[2025-08-19 15:27:59,479] pyhamilton.interface INFO sending end run command to simulator
[2025-08-19 15:27:59,479] JSONLogger INFO {'command': 'end', 'id': '0x0'}
[2025-08-19 15:27:59,479] pyhamilton.interface INFO disconnected from server
[2025-08-19 15:27:59,580] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-19 15:27:59,580] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-19 15:27:59,583] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-19 15:27:59,585] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-19 15:27:59,586] pyhamilton.interface INFO dummy get request sent to server
[2025-08-19 15:27:59,587] pyhamilton.interface INFO server thread exited
[2025-08-19 15:31:07,020] root INFO #######################################################################################################################
[2025-08-19 15:31:07,020] root INFO #                                                                                                                     #
[2025-08-19 15:31:07,021] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\ngs_demo.py     #
[2025-08-19 15:31:07,021] root INFO #                                                                                                                     #
[2025-08-19 15:31:07,021] root INFO #######################################################################################################################
[2025-08-19 15:31:07,022] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-19 15:31:07,022] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x192181be7e79')
[2025-08-19 15:31:07,022] pyhamilton.interface INFO started the oem application for simulation
[2025-08-19 15:31:07,022] pyhamilton.interface INFO started the server thread
[2025-08-19 15:31:07,022] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-19 15:31:07,173] pyhamilton.interface INFO tip_pick_up: Pick up tips at TIP_50uLF_L_0001, 1; TIP_50uLF_L_0001, 2; TIP_50uLF_L_0001, 3; TIP_50uLF_L_0001, 4; TIP_50uLF_L_0001, 5; TIP_50uLF_L_0001, 6; TIP_50uLF_L_0001, 7; TIP_50uLF_L_0001, 8
[2025-08-19 15:31:18,180] pyhamilton.interface INFO aspirate: Aspirate volumes [50, 50, 50, 50, 50, 50, 50, 50] from positions [MIDI_Pipette, A1; MIDI_Pipette, B1; MIDI_Pipette, C1; MIDI_Pipette, D1; MIDI_Pipette, E1; MIDI_Pipette, F1; MIDI_Pipette, G1; MIDI_Pipette, H1] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-19 15:31:34,205] pyhamilton.interface INFO dispense: Dispense volumes [50, 50, 50, 50, 50, 50, 50, 50] into positions [MIDI_Pipette, A2; MIDI_Pipette, B2; MIDI_Pipette, C2; MIDI_Pipette, D2; MIDI_Pipette, E2; MIDI_Pipette, F2; MIDI_Pipette, G2; MIDI_Pipette, H2] with extra options {'liquidClass': 'Tip_50ulFilter_Water_DispenseSurface_Empty'}
[2025-08-19 15:31:46,209] pyhamilton.interface INFO tip_eject: Eject tips to default waste
[2025-08-19 15:31:57,238] pyhamilton.interface INFO sending end run command to simulator
[2025-08-19 15:31:58,739] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-19 15:31:58,739] pyhamilton.interface INFO disconnected from server
[2025-08-19 15:31:58,840] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-19 15:31:58,841] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-19 15:31:58,848] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-19 15:31:58,851] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-19 15:31:58,853] pyhamilton.interface INFO dummy get request sent to server
[2025-08-19 15:31:58,854] pyhamilton.interface INFO server thread exited
[2025-08-19 16:02:04,513] root INFO #######################################################################################################################
[2025-08-19 16:02:04,513] root INFO #                                                                                                                     #
[2025-08-19 16:02:04,514] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\ngs_demo.py     #
[2025-08-19 16:02:04,514] root INFO #                                                                                                                     #
[2025-08-19 16:02:04,514] root INFO #######################################################################################################################
[2025-08-19 16:02:04,515] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-19 16:02:04,515] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x1921f827c4ee')
[2025-08-19 16:02:04,515] pyhamilton.interface INFO started the oem application for simulation
[2025-08-19 16:02:04,516] pyhamilton.interface INFO started the server thread
[2025-08-19 16:02:04,516] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-19 16:02:05,681] pyhamilton.interface INFO tip_pick_up_96: Pick up tips at TIP_50uLF_L_0001
[2025-08-19 16:02:08,683] pyhamilton.interface INFO sending end run command to simulator
[2025-08-19 16:02:10,184] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-19 16:02:10,184] pyhamilton.interface INFO disconnected from server
[2025-08-19 16:02:10,285] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-19 16:02:10,285] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-19 16:02:10,288] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-19 16:02:10,290] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-19 16:02:10,290] pyhamilton.interface INFO dummy get request sent to server
[2025-08-19 16:02:10,291] pyhamilton.interface INFO server thread exited
[2025-08-26 14:48:58,945] root INFO #######################################################################################################################
[2025-08-26 14:48:58,948] root INFO #                                                                                                                     #
[2025-08-26 14:48:58,949] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\ngs_demo.py     #
[2025-08-26 14:48:58,949] root INFO #                                                                                                                     #
[2025-08-26 14:48:58,949] root INFO #######################################################################################################################
[2025-08-26 14:48:58,950] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-26 14:48:58,952] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x19adc367a1dc')
[2025-08-26 14:48:58,952] pyhamilton.interface INFO started the oem application for simulation
[2025-08-26 14:48:58,953] pyhamilton.interface INFO started the server thread
[2025-08-26 14:48:58,953] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-26 14:49:00,889] pyhamilton.interface INFO tip_pick_up_96: Pick up tips at TIP_50uLF_L_0001
[2025-08-26 14:49:03,893] pyhamilton.interface INFO sending end run command to simulator
[2025-08-26 14:49:05,393] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-26 14:49:05,394] pyhamilton.interface INFO disconnected from server
[2025-08-26 14:49:05,495] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-26 14:49:05,496] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-26 14:49:05,501] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-26 14:49:05,504] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-26 14:49:05,505] pyhamilton.interface INFO dummy get request sent to server
[2025-08-26 14:49:05,505] pyhamilton.interface INFO server thread exited
[2025-08-26 14:50:38,966] root INFO #######################################################################################################################
[2025-08-26 14:50:38,966] root INFO #                                                                                                                     #
[2025-08-26 14:50:38,966] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\ngs_demo.py     #
[2025-08-26 14:50:38,966] root INFO #                                                                                                                     #
[2025-08-26 14:50:38,966] root INFO #######################################################################################################################
[2025-08-26 14:50:38,968] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-26 14:50:38,968] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x19adcacc49cb')
[2025-08-26 14:50:38,968] pyhamilton.interface INFO started the oem application for simulation
[2025-08-26 14:50:38,968] pyhamilton.interface INFO started the server thread
[2025-08-26 14:50:38,969] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-26 14:50:40,142] pyhamilton.interface INFO tip_pick_up_96: Pick up tips at TIP_50uLF_L_0001
[2025-08-26 14:50:41,143] pyhamilton.interface INFO sending end run command to simulator
[2025-08-26 14:50:42,643] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-26 14:50:42,644] pyhamilton.interface INFO disconnected from server
[2025-08-26 14:50:42,744] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-26 14:50:42,744] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-26 14:50:42,746] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-26 14:50:42,747] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-26 14:50:42,747] pyhamilton.interface INFO dummy get request sent to server
[2025-08-26 14:50:42,747] pyhamilton.interface INFO server thread exited
[2025-08-26 14:51:25,290] root INFO #######################################################################################################################
[2025-08-26 14:51:25,290] root INFO #                                                                                                                     #
[2025-08-26 14:51:25,291] root INFO #     Begin execution of C:\Users\stefan.golas\pyhamilton_examples\examples\NGS\PacBio_HiFiPlex\tests\ngs_demo.py     #
[2025-08-26 14:51:25,291] root INFO #                                                                                                                     #
[2025-08-26 14:51:25,291] root INFO #######################################################################################################################
[2025-08-26 14:51:25,292] pyhamilton.interface INFO starting a Hamilton interface
[2025-08-26 14:51:25,293] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x19adcd70ccc8')
[2025-08-26 14:51:25,293] pyhamilton.interface INFO started the oem application for simulation
[2025-08-26 14:51:25,294] pyhamilton.interface INFO started the server thread
[2025-08-26 14:51:25,294] pyhamilton.interface INFO initialize: Initializing Hamilton robot with options {}
[2025-08-26 14:51:26,753] pyhamilton.interface INFO tip_pick_up_96: Pick up tips at TIP_50uLF_L_0001
[2025-08-26 14:51:27,755] pyhamilton.interface INFO sending end run command to simulator
[2025-08-26 14:51:29,256] pyhamilton.interface ERROR HamiltonTimeoutError('Timed out after 1.5 sec while waiting for response id 0x0')
[2025-08-26 14:51:29,256] pyhamilton.interface INFO disconnected from server
[2025-08-26 14:51:29,357] pyhamilton.interface INFO server did not exit yet, sending dummy request to exit its loop
[2025-08-26 14:51:29,358] urllib3.util.retry DEBUG Converted retries value: 20 -> Retry(total=20, connect=None, read=None, redirect=None, status=None)
[2025-08-26 14:51:29,364] urllib3.connectionpool DEBUG Starting new HTTP connection (1): 127.0.0.1:3221
[2025-08-26 14:51:29,367] urllib3.connectionpool DEBUG http://127.0.0.1:3221 "GET / HTTP/1.1" 200 None
[2025-08-26 14:51:29,367] pyhamilton.interface INFO dummy get request sent to server
[2025-08-26 14:51:29,368] pyhamilton.interface INFO server thread exited
